{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport { TaskModal, SessionEndModal, ConfirmStopModal, ConfirmDeleteModal, DailyTargetModal, LoadingModal, ErrorModal } from \"./components/Modals\";\nimport databaseService from \"./services/databaseService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([databaseService.getTasks(), databaseService.getSessions(), databaseService.getDailyTarget()]);\n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.target_minutes * 60); // Convert to seconds\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setError('Không thể tải dữ liệu. Sử dụng dữ liệu offline.');\n\n        // Fallback to localStorage\n        const localTasks = databaseService.getLocalTasks();\n        const localSessions = databaseService.getLocalSessions();\n        setTasks(localTasks);\n        setSessions(localSessions);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n  }, []);\n\n  // Listen for online/offline events\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      setError(null);\n      // Refresh data when coming back online\n      databaseService.syncLocalData();\n    };\n    const handleOffline = () => {\n      setIsOnline(false);\n    };\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    return sessions.filter(session => {\n      const sessionDate = new Date(session.completed_at);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return sessionDate.getMonth() === now.getMonth() && sessionDate.getFullYear() === now.getFullYear();\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const todaySessions = sessions.filter(session => {\n      const sessionDate = new Date(session.completed_at);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n    return todaySessions.reduce((acc, session) => acc + session.duration, 0);\n  }, [sessions]);\n\n  // Task management functions\n  const addTask = async taskName => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newTask = await databaseService.addTask(taskName);\n      setTasks(prev => [...prev, newTask]);\n      return newTask;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setError('Không thể thêm task mới');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteTask = async taskId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await databaseService.deleteTask(taskId);\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.task_id !== taskId));\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Không thể xóa task');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addSession = async (taskId, duration) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newSession = await databaseService.addSession(taskId, duration);\n      setSessions(prev => [...prev, newSession]);\n      return newSession;\n    } catch (error) {\n      console.error('Error adding session:', error);\n      setError('Không thể lưu phiên làm việc');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Event handlers\n  const handleAddTask = async taskName => {\n    try {\n      await addTask(taskName);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  };\n  const handleStartSession = (task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60\n    };\n    setActiveSession(session);\n    setModal(null);\n  };\n  const handleAddSession = async timeWorked => {\n    if (!activeSession) return;\n    try {\n      await addSession(activeSession.task.id, timeWorked);\n      setActiveSession(null);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  };\n  const handleStopSession = () => {\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleDeleteTask = task => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  };\n  const handleConfirmDelete = async () => {\n    if (!taskToDelete) return;\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  };\n  const handleCancelDelete = () => {\n    setModal(null);\n    setTaskToDelete(null);\n  };\n  const handleSetDailyTarget = async targetMinutes => {\n    setLoading(true);\n    try {\n      await databaseService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60);\n      setModal(null);\n    } catch (error) {\n      console.error('Error setting daily target:', error);\n      setError('Không thể lưu mục tiêu hàng ngày');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleErrorClose = () => {\n    setModal(null);\n    setError(null);\n  };\n  const handleRetry = async () => {\n    setError(null);\n    setModal(null);\n\n    // Try to refresh data\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([databaseService.getTasks(), databaseService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n    } catch (error) {\n      console.error('Retry failed:', error);\n      setError('Vẫn không thể kết nối. Sử dụng chế độ offline.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\",\n    children: [!isOnline && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow-500 text-white text-center py-1 text-sm font-medium\",\n      children: \"\\uD83D\\uDEAB Offline - D\\u1EEF li\\u1EC7u s\\u1EBD \\u0111\\u01B0\\u1EE3c \\u0111\\u1ED3ng b\\u1ED9 khi c\\xF3 k\\u1EBFt n\\u1ED1i\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), !activeSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        sessions: filteredSessions,\n        filter: filter,\n        dailyTarget: dailyTarget,\n        todayFocusTime: todayFocusTime,\n        onSetTarget: () => setModal(\"dailyTarget\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto px-4 pb-24\",\n        children: [/*#__PURE__*/_jsxDEV(HistoryView, {\n          sessions: filteredSessions,\n          tasks: tasks,\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          onTaskClick: task => {\n            setTaskToStart(task);\n            setModal(\"startTask\");\n          },\n          onTaskDelete: handleDeleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModal(\"addTask\"),\n        className: \"fixed bottom-6 right-6 bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110 z-20\",\n        \"aria-label\": \"Th\\xEAm task m\\u1EDBi\",\n        disabled: loading,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-7 h-7\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FocusView, {\n      session: activeSession,\n      onSessionEnd: handleAddSession,\n      onStop: () => setModal(\"confirmStop\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }, this), modal === \"error\" && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClose: handleErrorClose,\n      onRetry: handleRetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), (modal === \"addTask\" || modal === \"startTask\") && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: taskToStart,\n      onClose: () => {\n        setModal(null);\n        setTaskToStart(null);\n      },\n      onStartSession: handleStartSession,\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this), modal === \"dailyTarget\" && /*#__PURE__*/_jsxDEV(DailyTargetModal, {\n      currentTarget: Math.round(dailyTarget / 60),\n      onClose: () => setModal(null),\n      onSetTarget: handleSetDailyTarget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), modal === \"sessionEnd\" && /*#__PURE__*/_jsxDEV(SessionEndModal, {\n      onComplete: () => handleAddSession(activeSession.duration),\n      onPause: handleStopSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this), modal === \"confirmStop\" && /*#__PURE__*/_jsxDEV(ConfirmStopModal, {\n      onConfirm: handleStopSession,\n      onCancel: () => setModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), modal === \"confirmDelete\" && /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n      task: taskToDelete,\n      onConfirm: handleConfirmDelete,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UknjoemkO7qzfNLpnVXXvYkvjQM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","Header","TaskList","FocusView","HistoryView","TaskModal","SessionEndModal","ConfirmStopModal","ConfirmDeleteModal","DailyTargetModal","LoadingModal","ErrorModal","databaseService","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","sessions","setSessions","loading","setLoading","error","setError","dailyTarget","setDailyTarget","activeSession","setActiveSession","modal","setModal","taskToStart","setTaskToStart","taskToDelete","setTaskToDelete","filter","setFilter","isOnline","setIsOnline","navigator","onLine","loadInitialData","tasksData","sessionsData","targetData","Promise","all","getTasks","getSessions","getDailyTarget","target_minutes","console","localTasks","getLocalTasks","localSessions","getLocalSessions","handleOnline","syncLocalData","handleOffline","window","addEventListener","removeEventListener","filteredSessions","now","Date","today","getFullYear","getMonth","getDate","session","sessionDate","completed_at","oneWeekAgo","setDate","setHours","getTime","todayFocusTime","todaySessions","reduce","acc","duration","addTask","taskName","newTask","prev","deleteTask","taskId","task","id","task_id","addSession","newSession","handleAddTask","handleStartSession","handleAddSession","timeWorked","handleStopSession","handleDeleteTask","handleConfirmDelete","handleCancelDelete","handleSetDailyTarget","targetMinutes","handleErrorClose","handleRetry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSetTarget","onTaskClick","onTaskDelete","onClick","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onSessionEnd","onStop","onClose","onRetry","onStartSession","onAddTask","currentTarget","Math","round","onComplete","onPause","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/App.js"],"sourcesContent":["// src/App.jsx\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport {\n  TaskModal,\n  SessionEndModal,\n  ConfirmStopModal,\n  ConfirmDeleteModal,\n  DailyTargetModal,\n  LoadingModal,\n  ErrorModal,\n} from \"./components/Modals\";\nimport databaseService from \"./services/databaseService\";\n\nconst App = () => {\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([\n          databaseService.getTasks(),\n          databaseService.getSessions(),\n          databaseService.getDailyTarget(),\n        ]);\n        \n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.target_minutes * 60); // Convert to seconds\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setError('Không thể tải dữ liệu. Sử dụng dữ liệu offline.');\n        \n        // Fallback to localStorage\n        const localTasks = databaseService.getLocalTasks();\n        const localSessions = databaseService.getLocalSessions();\n        \n        setTasks(localTasks);\n        setSessions(localSessions);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // Listen for online/offline events\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      setError(null);\n      // Refresh data when coming back online\n      databaseService.syncLocalData();\n    };\n    \n    const handleOffline = () => {\n      setIsOnline(false);\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    return sessions.filter((session) => {\n      const sessionDate = new Date(session.completed_at);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return (\n            sessionDate.getMonth() === now.getMonth() &&\n            sessionDate.getFullYear() === now.getFullYear()\n          );\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const todaySessions = sessions.filter((session) => {\n      const sessionDate = new Date(session.completed_at);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n\n    return todaySessions.reduce((acc, session) => acc + session.duration, 0);\n  }, [sessions]);\n\n  // Task management functions\n  const addTask = async (taskName) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const newTask = await databaseService.addTask(taskName);\n      setTasks(prev => [...prev, newTask]);\n      return newTask;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setError('Không thể thêm task mới');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      await databaseService.deleteTask(taskId);\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.task_id !== taskId));\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Không thể xóa task');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addSession = async (taskId, duration) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const newSession = await databaseService.addSession(taskId, duration);\n      setSessions(prev => [...prev, newSession]);\n      return newSession;\n    } catch (error) {\n      console.error('Error adding session:', error);\n      setError('Không thể lưu phiên làm việc');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Event handlers\n  const handleAddTask = async (taskName) => {\n    try {\n      await addTask(taskName);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  };\n\n  const handleStartSession = (task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60,\n    };\n    setActiveSession(session);\n    setModal(null);\n  };\n\n  const handleAddSession = async (timeWorked) => {\n    if (!activeSession) return;\n\n    try {\n      await addSession(activeSession.task.id, timeWorked);\n      setActiveSession(null);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  };\n\n  const handleStopSession = () => {\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleDeleteTask = (task) => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!taskToDelete) return;\n\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setModal(null);\n    setTaskToDelete(null);\n  };\n\n  const handleSetDailyTarget = async (targetMinutes) => {\n    setLoading(true);\n    try {\n      await databaseService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60);\n      setModal(null);\n    } catch (error) {\n      console.error('Error setting daily target:', error);\n      setError('Không thể lưu mục tiêu hàng ngày');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleErrorClose = () => {\n    setModal(null);\n    setError(null);\n  };\n\n  const handleRetry = async () => {\n    setError(null);\n    setModal(null);\n    \n    // Try to refresh data\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([\n        databaseService.getTasks(),\n        databaseService.getSessions(),\n      ]);\n      \n      setTasks(tasksData);\n      setSessions(sessionsData);\n    } catch (error) {\n      console.error('Retry failed:', error);\n      setError('Vẫn không thể kết nối. Sử dụng chế độ offline.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\">\n      {/* Connection Status Indicator */}\n      {!isOnline && (\n        <div className=\"bg-yellow-500 text-white text-center py-1 text-sm font-medium\">\n          🚫 Offline - Dữ liệu sẽ được đồng bộ khi có kết nối\n        </div>\n      )}\n      \n      {!activeSession ? (\n        <>\n          <Header\n            sessions={filteredSessions}\n            filter={filter}\n            dailyTarget={dailyTarget}\n            todayFocusTime={todayFocusTime}\n            onSetTarget={() => setModal(\"dailyTarget\")}\n          />\n\n          <div className=\"flex-grow overflow-y-auto px-4 pb-24\">\n            <HistoryView\n              sessions={filteredSessions}\n              tasks={tasks}\n              filter={filter}\n              setFilter={setFilter}\n            />\n            <TaskList\n              tasks={tasks}\n              onTaskClick={(task) => {\n                setTaskToStart(task);\n                setModal(\"startTask\");\n              }}\n              onTaskDelete={handleDeleteTask}\n            />\n          </div>\n\n          <button\n            onClick={() => setModal(\"addTask\")}\n            className=\"fixed bottom-6 right-6 bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110 z-20\"\n            aria-label=\"Thêm task mới\"\n            disabled={loading}\n          >\n            <svg\n              className=\"w-7 h-7\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              ></path>\n            </svg>\n          </button>\n        </>\n      ) : (\n        <FocusView\n          session={activeSession}\n          onSessionEnd={handleAddSession}\n          onStop={() => setModal(\"confirmStop\")}\n        />\n      )}\n\n      {/* Loading Modal */}\n      {loading && <LoadingModal />}\n\n      {/* Error Modal */}\n      {modal === \"error\" && (\n        <ErrorModal\n          error={error}\n          onClose={handleErrorClose}\n          onRetry={handleRetry}\n        />\n      )}\n\n      {(modal === \"addTask\" || modal === \"startTask\") && (\n        <TaskModal\n          task={taskToStart}\n          onClose={() => {\n            setModal(null);\n            setTaskToStart(null);\n          }}\n          onStartSession={handleStartSession}\n          onAddTask={handleAddTask}\n        />\n      )}\n\n      {modal === \"dailyTarget\" && (\n        <DailyTargetModal\n          currentTarget={Math.round(dailyTarget / 60)}\n          onClose={() => setModal(null)}\n          onSetTarget={handleSetDailyTarget}\n        />\n      )}\n\n      {modal === \"sessionEnd\" && (\n        <SessionEndModal\n          onComplete={() => handleAddSession(activeSession.duration)}\n          onPause={handleStopSession}\n        />\n      )}\n\n      {modal === \"confirmStop\" && (\n        <ConfirmStopModal\n          onConfirm={handleStopSession}\n          onCancel={() => setModal(null)}\n        />\n      )}\n\n      {modal === \"confirmDelete\" && (\n        <ConfirmDeleteModal\n          task={taskToDelete}\n          onConfirm={handleConfirmDelete}\n          onCancel={handleCancelDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}