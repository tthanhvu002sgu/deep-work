{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport { TaskModal, SessionEndModal, ConfirmStopModal, ConfirmDeleteModal, DailyTargetModal, LoadingModal, ErrorModal } from \"./components/Modals\";\nimport { FileManagerModal } from \"./components/FileManagerModal\";\nimport fileStorageService from \"./services/fileStorageService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions(), fileStorageService.getDailyTarget()]);\n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.targetMinutes * 60); // Convert to seconds\n\n        console.log('Data loaded successfully:', {\n          tasks: tasksData.length,\n          sessions: sessionsData.length,\n          target: targetData.targetMinutes\n        });\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setError('Không thể tải dữ liệu: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Cleanup on unmount\n    return () => {\n      fileStorageService.cleanup();\n    };\n  }, []);\n\n  // Auto-refresh data when file changes (for manual sync)\n  useEffect(() => {\n    const refreshInterval = setInterval(async () => {\n      try {\n        const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n\n        // Only update if data actually changed to prevent unnecessary re-renders\n        if (JSON.stringify(tasksData) !== JSON.stringify(tasks)) {\n          setTasks(tasksData);\n        }\n        if (JSON.stringify(sessionsData) !== JSON.stringify(sessions)) {\n          setSessions(sessionsData);\n        }\n      } catch (error) {\n        console.warn('Error refreshing data:', error);\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(refreshInterval);\n  }, [tasks, sessions]);\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    return sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return sessionDate.getMonth() === now.getMonth() && sessionDate.getFullYear() === now.getFullYear();\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const todaySessions = sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n    return todaySessions.reduce((acc, session) => acc + session.duration, 0);\n  }, [sessions]);\n\n  // Task management functions with proper error handling\n  const addTask = useCallback(async taskName => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newTask = await fileStorageService.addTask(taskName);\n\n      // Update state with new task\n      setTasks(prev => [...prev, newTask]);\n      console.log('Task added successfully:', newTask);\n      return newTask;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setError('Không thể thêm task mới: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const deleteTask = useCallback(async taskId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await fileStorageService.deleteTask(taskId);\n\n      // Update state - remove task and related sessions\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.taskId !== taskId));\n      console.log('Task deleted successfully:', taskId);\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Không thể xóa task: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // FIX: Improved session handling to prevent double-counting\n  const addSession = useCallback(async (taskId, duration) => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Adding session:', {\n        taskId,\n        duration\n      });\n\n      // Add session to storage\n      const newSession = await fileStorageService.addSession(taskId, duration);\n\n      // Reload all sessions from storage to ensure consistency\n      // This prevents any state inconsistencies that could cause double-counting\n      const allSessions = await fileStorageService.getSessions();\n      setSessions(allSessions);\n      console.log('Session added and data refreshed:', {\n        newSessionId: newSession.id,\n        totalSessions: allSessions.length\n      });\n      return newSession;\n    } catch (error) {\n      console.error('Error adding session:', error);\n      setError('Không thể lưu phiên làm việc: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Event handlers with improved error handling\n  const handleAddTask = useCallback(async taskName => {\n    try {\n      await addTask(taskName);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [addTask]);\n  const handleStartSession = useCallback((task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60 // Convert minutes to seconds\n    };\n    setActiveSession(session);\n    setModal(null);\n    console.log('Starting session:', session);\n  }, []);\n\n  // FIX: Improved session end handling\n  const handleAddSession = useCallback(async timeWorked => {\n    if (!activeSession) {\n      console.warn('No active session when trying to add session');\n      return;\n    }\n    try {\n      console.log('Ending session:', {\n        taskId: activeSession.task.id,\n        timeWorked: timeWorked,\n        taskName: activeSession.task.name\n      });\n      await addSession(activeSession.task.id, timeWorked);\n\n      // Clear active session and close modals\n      setActiveSession(null);\n      setModal(null);\n      console.log('Session ended successfully');\n    } catch (error) {\n      console.error('Error ending session:', error);\n      setModal(\"error\");\n    }\n  }, [activeSession, addSession]);\n  const handleStopSession = useCallback(() => {\n    console.log('Stopping session without saving');\n    setActiveSession(null);\n    setModal(null);\n  }, []);\n  const handleDeleteTask = useCallback(task => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  }, []);\n  const handleConfirmDelete = useCallback(async () => {\n    if (!taskToDelete) return;\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [taskToDelete, deleteTask]);\n  const handleCancelDelete = useCallback(() => {\n    setModal(null);\n    setTaskToDelete(null);\n  }, []);\n  const handleSetDailyTarget = useCallback(async targetMinutes => {\n    setLoading(true);\n    try {\n      await fileStorageService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60); // Convert to seconds\n      setModal(null);\n      console.log('Daily target set:', targetMinutes);\n    } catch (error) {\n      console.error('Error setting daily target:', error);\n      setError('Không thể lưu mục tiêu hàng ngày: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleErrorClose = useCallback(() => {\n    setModal(null);\n    setError(null);\n  }, []);\n  const handleRetry = useCallback(async () => {\n    setError(null);\n    setModal(null);\n\n    // Try to reload data\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n      console.log('Data reloaded after retry');\n    } catch (error) {\n      console.error('Retry failed:', error);\n      setError('Vẫn không thể tải dữ liệu: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleFileManagerSuccess = useCallback(async () => {\n    // Reload data after file operations\n    try {\n      const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n      console.log('Data reloaded after file operation');\n    } catch (error) {\n      console.error('Error reloading after file operation:', error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\",\n    children: [!activeSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        sessions: filteredSessions,\n        filter: filter,\n        dailyTarget: dailyTarget,\n        todayFocusTime: todayFocusTime,\n        onSetTarget: () => setModal(\"dailyTarget\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto px-4 pb-24\",\n        children: [/*#__PURE__*/_jsxDEV(HistoryView, {\n          sessions: filteredSessions,\n          tasks: tasks,\n          filter: filter,\n          setFilter: setFilter,\n          dailyTargets: {} // Pass dailyTargets if available\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          onTaskClick: task => {\n            setTaskToStart(task);\n            setModal(\"startTask\");\n          },\n          onTaskDelete: handleDeleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed bottom-6 right-6 flex flex-col space-y-3 z-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(\"fileManager\"),\n          className: \"bg-green-600 text-white rounded-full w-12 h-12 flex items-center justify-center shadow-lg hover:bg-green-700 transition transform hover:scale-110\",\n          \"aria-label\": \"Qu\\u1EA3n l\\xFD file d\\u1EEF li\\u1EC7u\",\n          title: \"Qu\\u1EA3n l\\xFD file d\\u1EEF li\\u1EC7u\",\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(\"addTask\"),\n          className: \"bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110\",\n          \"aria-label\": \"Th\\xEAm task m\\u1EDBi\",\n          disabled: loading,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-7 h-7\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FocusView, {\n      session: activeSession,\n      onSessionEnd: handleAddSession,\n      onStop: () => setModal(\"confirmStop\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 19\n    }, this), modal === \"error\" && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClose: handleErrorClose,\n      onRetry: handleRetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this), modal === \"fileManager\" && /*#__PURE__*/_jsxDEV(FileManagerModal, {\n      onClose: () => setModal(null),\n      onSuccess: handleFileManagerSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this), (modal === \"addTask\" || modal === \"startTask\") && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: taskToStart,\n      onClose: () => {\n        setModal(null);\n        setTaskToStart(null);\n      },\n      onStartSession: handleStartSession,\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this), modal === \"dailyTarget\" && /*#__PURE__*/_jsxDEV(DailyTargetModal, {\n      currentTarget: Math.round(dailyTarget / 60),\n      onClose: () => setModal(null),\n      onSetTarget: handleSetDailyTarget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this), modal === \"sessionEnd\" && /*#__PURE__*/_jsxDEV(SessionEndModal, {\n      onComplete: () => handleAddSession(activeSession.duration),\n      onPause: handleStopSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }, this), modal === \"confirmStop\" && /*#__PURE__*/_jsxDEV(ConfirmStopModal, {\n      onConfirm: handleStopSession,\n      onCancel: () => setModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }, this), modal === \"confirmDelete\" && /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n      task: taskToDelete,\n      onConfirm: handleConfirmDelete,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dNxDMTKs0LtoB/lsrL+d/B22QWU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","useCallback","Header","TaskList","FocusView","HistoryView","TaskModal","SessionEndModal","ConfirmStopModal","ConfirmDeleteModal","DailyTargetModal","LoadingModal","ErrorModal","FileManagerModal","fileStorageService","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","sessions","setSessions","loading","setLoading","error","setError","dailyTarget","setDailyTarget","activeSession","setActiveSession","modal","setModal","taskToStart","setTaskToStart","taskToDelete","setTaskToDelete","filter","setFilter","loadInitialData","tasksData","sessionsData","targetData","Promise","all","getTasks","getSessions","getDailyTarget","targetMinutes","console","log","length","target","message","cleanup","refreshInterval","setInterval","JSON","stringify","warn","clearInterval","filteredSessions","now","Date","today","getFullYear","getMonth","getDate","session","sessionDate","completedAt","oneWeekAgo","setDate","setHours","getTime","todayFocusTime","todaySessions","reduce","acc","duration","addTask","taskName","newTask","prev","deleteTask","taskId","task","id","addSession","newSession","allSessions","newSessionId","totalSessions","handleAddTask","handleStartSession","handleAddSession","timeWorked","name","handleStopSession","handleDeleteTask","handleConfirmDelete","handleCancelDelete","handleSetDailyTarget","handleErrorClose","handleRetry","handleFileManagerSuccess","className","children","onSetTarget","fileName","_jsxFileName","lineNumber","columnNumber","dailyTargets","onTaskClick","onTaskDelete","onClick","title","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onSessionEnd","onStop","onClose","onRetry","onSuccess","onStartSession","onAddTask","currentTarget","Math","round","onComplete","onPause","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/App.js"],"sourcesContent":["// src/App.jsx\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport {\n  TaskModal,\n  SessionEndModal,\n  ConfirmStopModal,\n  ConfirmDeleteModal,\n  DailyTargetModal,\n  LoadingModal,\n  ErrorModal,\n} from \"./components/Modals\";\nimport { FileManagerModal } from \"./components/FileManagerModal\";\nimport fileStorageService from \"./services/fileStorageService\";\n\nconst App = () => {\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([\n          fileStorageService.getTasks(),\n          fileStorageService.getSessions(),\n          fileStorageService.getDailyTarget(),\n        ]);\n        \n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.targetMinutes * 60); // Convert to seconds\n        \n        console.log('Data loaded successfully:', {\n          tasks: tasksData.length,\n          sessions: sessionsData.length,\n          target: targetData.targetMinutes\n        });\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setError('Không thể tải dữ liệu: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInitialData();\n\n    // Cleanup on unmount\n    return () => {\n      fileStorageService.cleanup();\n    };\n  }, []);\n\n  // Auto-refresh data when file changes (for manual sync)\n  useEffect(() => {\n    const refreshInterval = setInterval(async () => {\n      try {\n        const [tasksData, sessionsData] = await Promise.all([\n          fileStorageService.getTasks(),\n          fileStorageService.getSessions(),\n        ]);\n        \n        // Only update if data actually changed to prevent unnecessary re-renders\n        if (JSON.stringify(tasksData) !== JSON.stringify(tasks)) {\n          setTasks(tasksData);\n        }\n        if (JSON.stringify(sessionsData) !== JSON.stringify(sessions)) {\n          setSessions(sessionsData);\n        }\n      } catch (error) {\n        console.warn('Error refreshing data:', error);\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(refreshInterval);\n  }, [tasks, sessions]);\n\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    return sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return (\n            sessionDate.getMonth() === now.getMonth() &&\n            sessionDate.getFullYear() === now.getFullYear()\n          );\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const todaySessions = sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n\n    return todaySessions.reduce((acc, session) => acc + session.duration, 0);\n  }, [sessions]);\n\n  // Task management functions with proper error handling\n  const addTask = useCallback(async (taskName) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const newTask = await fileStorageService.addTask(taskName);\n      \n      // Update state with new task\n      setTasks(prev => [...prev, newTask]);\n      \n      console.log('Task added successfully:', newTask);\n      return newTask;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setError('Không thể thêm task mới: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const deleteTask = useCallback(async (taskId) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      await fileStorageService.deleteTask(taskId);\n      \n      // Update state - remove task and related sessions\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.taskId !== taskId));\n      \n      console.log('Task deleted successfully:', taskId);\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Không thể xóa task: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // FIX: Improved session handling to prevent double-counting\n  const addSession = useCallback(async (taskId, duration) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log('Adding session:', { taskId, duration });\n      \n      // Add session to storage\n      const newSession = await fileStorageService.addSession(taskId, duration);\n      \n      // Reload all sessions from storage to ensure consistency\n      // This prevents any state inconsistencies that could cause double-counting\n      const allSessions = await fileStorageService.getSessions();\n      setSessions(allSessions);\n      \n      console.log('Session added and data refreshed:', {\n        newSessionId: newSession.id,\n        totalSessions: allSessions.length\n      });\n      \n      return newSession;\n    } catch (error) {\n      console.error('Error adding session:', error);\n      setError('Không thể lưu phiên làm việc: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Event handlers with improved error handling\n  const handleAddTask = useCallback(async (taskName) => {\n    try {\n      await addTask(taskName);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [addTask]);\n\n  const handleStartSession = useCallback((task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60, // Convert minutes to seconds\n    };\n    setActiveSession(session);\n    setModal(null);\n    \n    console.log('Starting session:', session);\n  }, []);\n\n  // FIX: Improved session end handling\n  const handleAddSession = useCallback(async (timeWorked) => {\n    if (!activeSession) {\n      console.warn('No active session when trying to add session');\n      return;\n    }\n\n    try {\n      console.log('Ending session:', {\n        taskId: activeSession.task.id,\n        timeWorked: timeWorked,\n        taskName: activeSession.task.name\n      });\n      \n      await addSession(activeSession.task.id, timeWorked);\n      \n      // Clear active session and close modals\n      setActiveSession(null);\n      setModal(null);\n      \n      console.log('Session ended successfully');\n    } catch (error) {\n      console.error('Error ending session:', error);\n      setModal(\"error\");\n    }\n  }, [activeSession, addSession]);\n\n  const handleStopSession = useCallback(() => {\n    console.log('Stopping session without saving');\n    setActiveSession(null);\n    setModal(null);\n  }, []);\n\n  const handleDeleteTask = useCallback((task) => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  }, []);\n\n  const handleConfirmDelete = useCallback(async () => {\n    if (!taskToDelete) return;\n\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [taskToDelete, deleteTask]);\n\n  const handleCancelDelete = useCallback(() => {\n    setModal(null);\n    setTaskToDelete(null);\n  }, []);\n\n  const handleSetDailyTarget = useCallback(async (targetMinutes) => {\n    setLoading(true);\n    try {\n      await fileStorageService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60); // Convert to seconds\n      setModal(null);\n      \n      console.log('Daily target set:', targetMinutes);\n    } catch (error) {\n      console.error('Error setting daily target:', error);\n      setError('Không thể lưu mục tiêu hàng ngày: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleErrorClose = useCallback(() => {\n    setModal(null);\n    setError(null);\n  }, []);\n\n  const handleRetry = useCallback(async () => {\n    setError(null);\n    setModal(null);\n    \n    // Try to reload data\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([\n        fileStorageService.getTasks(),\n        fileStorageService.getSessions(),\n      ]);\n      \n      setTasks(tasksData);\n      setSessions(sessionsData);\n      \n      console.log('Data reloaded after retry');\n    } catch (error) {\n      console.error('Retry failed:', error);\n      setError('Vẫn không thể tải dữ liệu: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleFileManagerSuccess = useCallback(async () => {\n    // Reload data after file operations\n    try {\n      const [tasksData, sessionsData] = await Promise.all([\n        fileStorageService.getTasks(),\n        fileStorageService.getSessions(),\n      ]);\n      \n      setTasks(tasksData);\n      setSessions(sessionsData);\n      \n      console.log('Data reloaded after file operation');\n    } catch (error) {\n      console.error('Error reloading after file operation:', error);\n    }\n  }, []);\n\n  return (\n    <div className=\"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\">\n      {!activeSession ? (\n        <>\n          <Header\n            sessions={filteredSessions}\n            filter={filter}\n            dailyTarget={dailyTarget}\n            todayFocusTime={todayFocusTime}\n            onSetTarget={() => setModal(\"dailyTarget\")}\n          />\n\n          <div className=\"flex-grow overflow-y-auto px-4 pb-24\">\n            <HistoryView\n              sessions={filteredSessions}\n              tasks={tasks}\n              filter={filter}\n              setFilter={setFilter}\n              dailyTargets={{}} // Pass dailyTargets if available\n            />\n            <TaskList\n              tasks={tasks}\n              onTaskClick={(task) => {\n                setTaskToStart(task);\n                setModal(\"startTask\");\n              }}\n              onTaskDelete={handleDeleteTask}\n            />\n          </div>\n\n          {/* Floating Action Buttons */}\n          <div className=\"fixed bottom-6 right-6 flex flex-col space-y-3 z-20\">\n            {/* File Manager Button */}\n            <button\n              onClick={() => setModal(\"fileManager\")}\n              className=\"bg-green-600 text-white rounded-full w-12 h-12 flex items-center justify-center shadow-lg hover:bg-green-700 transition transform hover:scale-110\"\n              aria-label=\"Quản lý file dữ liệu\"\n              title=\"Quản lý file dữ liệu\"\n            >\n              📁\n            </button>\n            \n            {/* Add Task Button */}\n            <button\n              onClick={() => setModal(\"addTask\")}\n              className=\"bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110\"\n              aria-label=\"Thêm task mới\"\n              disabled={loading}\n            >\n              <svg\n                className=\"w-7 h-7\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </>\n      ) : (\n        <FocusView\n          session={activeSession}\n          onSessionEnd={handleAddSession}\n          onStop={() => setModal(\"confirmStop\")}\n        />\n      )}\n\n      {/* Loading Modal */}\n      {loading && <LoadingModal />}\n\n      {/* Error Modal */}\n      {modal === \"error\" && (\n        <ErrorModal\n          error={error}\n          onClose={handleErrorClose}\n          onRetry={handleRetry}\n        />\n      )}\n\n      {/* File Manager Modal */}\n      {modal === \"fileManager\" && (\n        <FileManagerModal\n          onClose={() => setModal(null)}\n          onSuccess={handleFileManagerSuccess}\n        />\n      )}\n\n      {(modal === \"addTask\" || modal === \"startTask\") && (\n        <TaskModal\n          task={taskToStart}\n          onClose={() => {\n            setModal(null);\n            setTaskToStart(null);\n          }}\n          onStartSession={handleStartSession}\n          onAddTask={handleAddTask}\n        />\n      )}\n\n      {modal === \"dailyTarget\" && (\n        <DailyTargetModal\n          currentTarget={Math.round(dailyTarget / 60)}\n          onClose={() => setModal(null)}\n          onSetTarget={handleSetDailyTarget}\n        />\n      )}\n\n      {modal === \"sessionEnd\" && (\n        <SessionEndModal\n          onComplete={() => handleAddSession(activeSession.duration)}\n          onPause={handleStopSession}\n        />\n      )}\n\n      {modal === \"confirmStop\" && (\n        <ConfirmStopModal\n          onConfirm={handleStopSession}\n          onCancel={() => setModal(null)}\n        />\n      )}\n\n      {modal === \"confirmDelete\" && (\n        <ConfirmDeleteModal\n          task={taskToDelete}\n          onConfirm={handleConfirmDelete}\n          onCancel={handleCancelDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}