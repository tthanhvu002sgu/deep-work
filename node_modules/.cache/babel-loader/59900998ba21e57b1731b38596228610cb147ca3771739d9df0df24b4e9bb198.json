{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport { TaskModal, SessionEndModal, ConfirmStopModal, ConfirmDeleteModal, DailyTargetModal } from \"./components/Modals\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"deepwork_tasks_v3\");\n      return saved ? JSON.parse(saved) : [];\n    } catch {\n      return [];\n    }\n  });\n  const [sessions, setSessions] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"deepwork_sessions_v3\");\n      return saved ? JSON.parse(saved) : [];\n    } catch {\n      return [];\n    }\n  });\n\n  // Daily target state - not saved to localStorage, resets daily\n  const [dailyTarget, setDailyTarget] = useState(() => {\n    const today = new Date().toDateString();\n    const savedTarget = localStorage.getItem(\"deepwork_daily_target\");\n    const savedDate = localStorage.getItem(\"deepwork_daily_target_date\");\n\n    // Reset target if it's a new day\n    if (savedDate !== today) {\n      localStorage.removeItem(\"deepwork_daily_target\");\n      localStorage.removeItem(\"deepwork_daily_target_date\");\n      return 0;\n    }\n    return savedTarget ? parseInt(savedTarget) : 0;\n  });\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n  useEffect(() => {\n    localStorage.setItem(\"deepwork_tasks_v3\", JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    localStorage.setItem(\"deepwork_sessions_v3\", JSON.stringify(sessions));\n  }, [sessions]);\n\n  // Save daily target but check for date changes\n  useEffect(() => {\n    const today = new Date().toDateString();\n    if (dailyTarget > 0) {\n      localStorage.setItem(\"deepwork_daily_target\", dailyTarget.toString());\n      localStorage.setItem(\"deepwork_daily_target_date\", today);\n    }\n  }, [dailyTarget]);\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    return sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return sessionDate.getMonth() === now.getMonth() && sessionDate.getFullYear() === now.getFullYear();\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n\n  // Calculate today's total focus time\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const todaySessions = sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n    return todaySessions.reduce((acc, session) => acc + session.duration, 0);\n  }, [sessions]);\n  const handleAddTask = taskName => {\n    const newTask = {\n      id: Date.now(),\n      name: taskName\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setModal(null);\n  };\n  const handleStartSession = (task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60 // Keep 0 for free mode\n    };\n    setActiveSession(session);\n    setModal(null);\n  };\n  const handleAddSession = timeWorked => {\n    if (!activeSession) return;\n    const newSession = {\n      id: Date.now(),\n      taskId: activeSession.task.id,\n      duration: timeWorked,\n      completedAt: new Date().toISOString()\n    };\n    setSessions(prevSessions => [...prevSessions, newSession]);\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleStopSession = () => {\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleDeleteTask = task => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  };\n  const handleConfirmDelete = () => {\n    if (!taskToDelete) return;\n\n    // Remove the task\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskToDelete.id));\n\n    // Remove all sessions related to this task\n    setSessions(prevSessions => prevSessions.filter(session => session.taskId !== taskToDelete.id));\n\n    // Close modal and reset state\n    setModal(null);\n    setTaskToDelete(null);\n  };\n  const handleCancelDelete = () => {\n    setModal(null);\n    setTaskToDelete(null);\n  };\n  const handleSetDailyTarget = targetMinutes => {\n    setDailyTarget(targetMinutes * 60); // Convert minutes to seconds\n    setModal(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\",\n    children: [!activeSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        sessions: filteredSessions,\n        filter: filter,\n        dailyTarget: dailyTarget,\n        todayFocusTime: todayFocusTime,\n        onSetTarget: () => setModal(\"dailyTarget\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto px-4 pb-24\",\n        children: [/*#__PURE__*/_jsxDEV(HistoryView, {\n          sessions: filteredSessions,\n          tasks: tasks,\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          onTaskClick: task => {\n            setTaskToStart(task);\n            setModal(\"startTask\");\n          },\n          onTaskDelete: handleDeleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModal(\"addTask\"),\n        className: \"fixed bottom-6 right-6 bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110 z-20\",\n        \"aria-label\": \"Th\\xEAm task m\\u1EDBi\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-7 h-7\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FocusView, {\n      session: activeSession,\n      onSessionEnd: handleAddSession,\n      onStop: () => setModal(\"confirmStop\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), (modal === \"addTask\" || modal === \"startTask\") && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: taskToStart,\n      onClose: () => {\n        setModal(null);\n        setTaskToStart(null);\n      },\n      onStartSession: handleStartSession,\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), modal === \"dailyTarget\" && /*#__PURE__*/_jsxDEV(DailyTargetModal, {\n      currentTarget: Math.round(dailyTarget / 60) // Convert seconds to minutes\n      ,\n      onClose: () => setModal(null),\n      onSetTarget: handleSetDailyTarget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), modal === \"sessionEnd\" && /*#__PURE__*/_jsxDEV(SessionEndModal, {\n      onComplete: () => handleAddSession(activeSession.duration),\n      onPause: handleStopSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), modal === \"confirmStop\" && /*#__PURE__*/_jsxDEV(ConfirmStopModal, {\n      onConfirm: handleStopSession,\n      onCancel: () => setModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), modal === \"confirmDelete\" && /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n      task: taskToDelete,\n      onConfirm: handleConfirmDelete,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J/DRvDK+8eyiJDdjG2gMC4WUG7I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","Header","TaskList","FocusView","HistoryView","TaskModal","SessionEndModal","ConfirmStopModal","ConfirmDeleteModal","DailyTargetModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","saved","localStorage","getItem","JSON","parse","sessions","setSessions","dailyTarget","setDailyTarget","today","Date","toDateString","savedTarget","savedDate","removeItem","parseInt","activeSession","setActiveSession","modal","setModal","taskToStart","setTaskToStart","taskToDelete","setTaskToDelete","filter","setFilter","setItem","stringify","toString","filteredSessions","now","getFullYear","getMonth","getDate","session","sessionDate","completedAt","oneWeekAgo","setDate","setHours","getTime","todayFocusTime","todaySessions","reduce","acc","duration","handleAddTask","taskName","newTask","id","name","prevTasks","handleStartSession","task","handleAddSession","timeWorked","newSession","taskId","toISOString","prevSessions","handleStopSession","handleDeleteTask","handleConfirmDelete","handleCancelDelete","handleSetDailyTarget","targetMinutes","className","children","onSetTarget","fileName","_jsxFileName","lineNumber","columnNumber","onTaskClick","onTaskDelete","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onSessionEnd","onStop","onClose","onStartSession","onAddTask","currentTarget","Math","round","onComplete","onPause","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/App.js"],"sourcesContent":["// src/App.jsx\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport {\n  TaskModal,\n  SessionEndModal,\n  ConfirmStopModal,\n  ConfirmDeleteModal,\n  DailyTargetModal,\n} from \"./components/Modals\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"deepwork_tasks_v3\");\n      return saved ? JSON.parse(saved) : [];\n    } catch {\n      return [];\n    }\n  });\n\n  const [sessions, setSessions] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"deepwork_sessions_v3\");\n      return saved ? JSON.parse(saved) : [];\n    } catch {\n      return [];\n    }\n  });\n\n  // Daily target state - not saved to localStorage, resets daily\n  const [dailyTarget, setDailyTarget] = useState(() => {\n    const today = new Date().toDateString();\n    const savedTarget = localStorage.getItem(\"deepwork_daily_target\");\n    const savedDate = localStorage.getItem(\"deepwork_daily_target_date\");\n\n    // Reset target if it's a new day\n    if (savedDate !== today) {\n      localStorage.removeItem(\"deepwork_daily_target\");\n      localStorage.removeItem(\"deepwork_daily_target_date\");\n      return 0;\n    }\n\n    return savedTarget ? parseInt(savedTarget) : 0;\n  });\n\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n\n  useEffect(() => {\n    localStorage.setItem(\"deepwork_tasks_v3\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem(\"deepwork_sessions_v3\", JSON.stringify(sessions));\n  }, [sessions]);\n\n  // Save daily target but check for date changes\n  useEffect(() => {\n    const today = new Date().toDateString();\n    if (dailyTarget > 0) {\n      localStorage.setItem(\"deepwork_daily_target\", dailyTarget.toString());\n      localStorage.setItem(\"deepwork_daily_target_date\", today);\n    }\n  }, [dailyTarget]);\n\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    return sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return (\n            sessionDate.getMonth() === now.getMonth() &&\n            sessionDate.getFullYear() === now.getFullYear()\n          );\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n\n  // Calculate today's total focus time\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const todaySessions = sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n\n    return todaySessions.reduce((acc, session) => acc + session.duration, 0);\n  }, [sessions]);\n\n  const handleAddTask = (taskName) => {\n    const newTask = { id: Date.now(), name: taskName };\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n    setModal(null);\n  };\n\n  const handleStartSession = (task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60, // Keep 0 for free mode\n    };\n    setActiveSession(session);\n    setModal(null);\n  };\n\n  const handleAddSession = (timeWorked) => {\n    if (!activeSession) return;\n    const newSession = {\n      id: Date.now(),\n      taskId: activeSession.task.id,\n      duration: timeWorked,\n      completedAt: new Date().toISOString(),\n    };\n    setSessions((prevSessions) => [...prevSessions, newSession]);\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleStopSession = () => {\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleDeleteTask = (task) => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  };\n\n  const handleConfirmDelete = () => {\n    if (!taskToDelete) return;\n\n    // Remove the task\n    setTasks((prevTasks) =>\n      prevTasks.filter((task) => task.id !== taskToDelete.id)\n    );\n\n    // Remove all sessions related to this task\n    setSessions((prevSessions) =>\n      prevSessions.filter((session) => session.taskId !== taskToDelete.id)\n    );\n\n    // Close modal and reset state\n    setModal(null);\n    setTaskToDelete(null);\n  };\n\n  const handleCancelDelete = () => {\n    setModal(null);\n    setTaskToDelete(null);\n  };\n\n  const handleSetDailyTarget = (targetMinutes) => {\n    setDailyTarget(targetMinutes * 60); // Convert minutes to seconds\n    setModal(null);\n  };\n\n  return (\n    <div className=\"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\">\n      {!activeSession ? (\n        <>\n          <Header\n            sessions={filteredSessions}\n            filter={filter}\n            dailyTarget={dailyTarget}\n            todayFocusTime={todayFocusTime}\n            onSetTarget={() => setModal(\"dailyTarget\")}\n          />\n\n          <div className=\"flex-grow overflow-y-auto px-4 pb-24\">\n            <HistoryView\n              sessions={filteredSessions}\n              tasks={tasks}\n              filter={filter}\n              setFilter={setFilter}\n            />\n            <TaskList\n              tasks={tasks}\n              onTaskClick={(task) => {\n                setTaskToStart(task);\n                setModal(\"startTask\");\n              }}\n              onTaskDelete={handleDeleteTask}\n            />\n          </div>\n\n          <button\n            onClick={() => setModal(\"addTask\")}\n            className=\"fixed bottom-6 right-6 bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110 z-20\"\n            aria-label=\"Thêm task mới\"\n          >\n            <svg\n              className=\"w-7 h-7\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              ></path>\n            </svg>\n          </button>\n        </>\n      ) : (\n        <FocusView\n          session={activeSession}\n          onSessionEnd={handleAddSession}\n          onStop={() => setModal(\"confirmStop\")}\n        />\n      )}\n\n      {(modal === \"addTask\" || modal === \"startTask\") && (\n        <TaskModal\n          task={taskToStart}\n          onClose={() => {\n            setModal(null);\n            setTaskToStart(null);\n          }}\n          onStartSession={handleStartSession}\n          onAddTask={handleAddTask}\n        />\n      )}\n\n      {modal === \"dailyTarget\" && (\n        <DailyTargetModal\n          currentTarget={Math.round(dailyTarget / 60)} // Convert seconds to minutes\n          onClose={() => setModal(null)}\n          onSetTarget={handleSetDailyTarget}\n        />\n      )}\n\n      {modal === \"sessionEnd\" && (\n        <SessionEndModal\n          onComplete={() => handleAddSession(activeSession.duration)}\n          onPause={handleStopSession}\n        />\n      )}\n\n      {modal === \"confirmStop\" && (\n        <ConfirmStopModal\n          onConfirm={handleStopSession}\n          onCancel={() => setModal(null)}\n        />\n      )}\n\n      {modal === \"confirmDelete\" && (\n        <ConfirmDeleteModal\n          task={taskToDelete}\n          onConfirm={handleConfirmDelete}\n          onCancel={handleCancelDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}