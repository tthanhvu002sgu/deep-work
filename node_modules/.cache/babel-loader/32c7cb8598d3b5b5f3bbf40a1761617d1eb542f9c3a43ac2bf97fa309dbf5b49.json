{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport { useState, useEffect, useMemo } from 'react';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport FocusView from './components/FocusView';\nimport BreakView from './components/BreakView';\nimport HistoryView from './components/HistoryView';\nimport { TaskModal, SessionEndModal, BreakModal, ConfirmStopModal, ConfirmDeleteModal } from './components/Modals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    try {\n      const saved = localStorage.getItem('deepwork_tasks_v3');\n      return saved ? JSON.parse(saved) : [];\n    } catch {\n      return [];\n    }\n  });\n  const [sessions, setSessions] = useState(() => {\n    try {\n      const saved = localStorage.getItem('deepwork_sessions_v3');\n      return saved ? JSON.parse(saved) : [];\n    } catch {\n      return [];\n    }\n  });\n  const [activeSession, setActiveSession] = useState(null);\n  const [activeBreak, setActiveBreak] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState('day');\n  useEffect(() => {\n    localStorage.setItem('deepwork_tasks_v3', JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    localStorage.setItem('deepwork_sessions_v3', JSON.stringify(sessions));\n  }, [sessions]);\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    return sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case 'week':\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case 'month':\n          return sessionDate.getMonth() === now.getMonth() && sessionDate.getFullYear() === now.getFullYear();\n        case 'day':\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n  const handleAddTask = taskName => {\n    const newTask = {\n      id: Date.now(),\n      name: taskName\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setModal(null);\n  };\n  const handleStartSession = (task, duration) => {\n    const session = {\n      task: task,\n      duration: duration * 60\n    };\n    setActiveSession(session);\n    setModal(null);\n  };\n  const handleSessionEnd = timeWorked => {\n    if (!activeSession) return;\n\n    // Save the completed session\n    const newSession = {\n      id: Date.now(),\n      taskId: activeSession.task.id,\n      duration: timeWorked,\n      completedAt: new Date().toISOString()\n    };\n    setSessions(prevSessions => [...prevSessions, newSession]);\n\n    // Show session end modal with options\n    setModal('sessionEnd');\n  };\n  const handleBreakAndContinue = () => {\n    // Start a 5-minute break\n    setActiveBreak({\n      duration: 5 * 60,\n      // 5 minutes in seconds\n      nextTask: activeSession.task\n    });\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleBreakEnd = () => {\n    if (!activeBreak) return;\n\n    // Continue with the same task after break\n    const session = {\n      task: activeBreak.nextTask,\n      duration: 25 * 60 // Default 25 minutes\n    };\n    setActiveSession(session);\n    setActiveBreak(null);\n  };\n  const handleSkipBreak = () => {\n    // Go back to dashboard\n    setActiveBreak(null);\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleCompleteAndChooseNew = () => {\n    // Go back to dashboard to choose new task\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleBackToDashboard = () => {\n    // Go back to dashboard\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleStopSession = () => {\n    setActiveSession(null);\n    setModal(null);\n  };\n  const handleDeleteTask = task => {\n    setTaskToDelete(task);\n    setModal('confirmDelete');\n  };\n  const handleConfirmDelete = () => {\n    if (!taskToDelete) return;\n\n    // Remove the task\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskToDelete.id));\n\n    // Remove all sessions related to this task\n    setSessions(prevSessions => prevSessions.filter(session => session.taskId !== taskToDelete.id));\n\n    // Close modal and reset state\n    setModal(null);\n    setTaskToDelete(null);\n  };\n  const handleCancelDelete = () => {\n    setModal(null);\n    setTaskToDelete(null);\n  };\n\n  // Render break view\n  if (activeBreak) {\n    return /*#__PURE__*/_jsxDEV(BreakView, {\n      duration: activeBreak.duration,\n      onBreakEnd: handleBreakEnd,\n      onSkipBreak: handleSkipBreak\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render focus view\n  if (activeSession) {\n    return /*#__PURE__*/_jsxDEV(FocusView, {\n      session: activeSession,\n      onSessionEnd: handleSessionEnd,\n      onStop: () => setModal('confirmStop')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render dashboard (default view)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      sessions: filteredSessions,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto px-4 pb-24\",\n      children: [/*#__PURE__*/_jsxDEV(HistoryView, {\n        sessions: filteredSessions,\n        tasks: tasks,\n        filter: filter,\n        setFilter: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onTaskClick: task => {\n          setTaskToStart(task);\n          setModal('startTask');\n        },\n        onTaskDelete: handleDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModal('addTask'),\n      className: \"fixed bottom-6 right-6 bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110 z-20\",\n      \"aria-label\": \"Th\\xEAm task m\\u1EDBi\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-7 h-7\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: \"2\",\n          d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), (modal === 'addTask' || modal === 'startTask') && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: taskToStart,\n      onClose: () => {\n        setModal(null);\n        setTaskToStart(null);\n      },\n      onStartSession: handleStartSession,\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), modal === 'sessionEnd' && /*#__PURE__*/_jsxDEV(SessionEndModal, {\n      session: activeSession,\n      onBreakAndContinue: handleBreakAndContinue,\n      onComplete: handleCompleteAndChooseNew,\n      onBackToDashboard: handleBackToDashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), modal === 'confirmStop' && /*#__PURE__*/_jsxDEV(ConfirmStopModal, {\n      onConfirm: handleStopSession,\n      onCancel: () => setModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), modal === 'confirmDelete' && /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n      task: taskToDelete,\n      onConfirm: handleConfirmDelete,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LOk8JuDqWDai1v3xvDgT8jx3gwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","Header","TaskList","FocusView","BreakView","HistoryView","TaskModal","SessionEndModal","BreakModal","ConfirmStopModal","ConfirmDeleteModal","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","saved","localStorage","getItem","JSON","parse","sessions","setSessions","activeSession","setActiveSession","activeBreak","setActiveBreak","modal","setModal","taskToStart","setTaskToStart","taskToDelete","setTaskToDelete","filter","setFilter","setItem","stringify","filteredSessions","now","Date","today","getFullYear","getMonth","getDate","session","sessionDate","completedAt","oneWeekAgo","setDate","setHours","getTime","handleAddTask","taskName","newTask","id","name","prevTasks","handleStartSession","task","duration","handleSessionEnd","timeWorked","newSession","taskId","toISOString","prevSessions","handleBreakAndContinue","nextTask","handleBreakEnd","handleSkipBreak","handleCompleteAndChooseNew","handleBackToDashboard","handleStopSession","handleDeleteTask","handleConfirmDelete","handleCancelDelete","onBreakEnd","onSkipBreak","fileName","_jsxFileName","lineNumber","columnNumber","onSessionEnd","onStop","className","children","onTaskClick","onTaskDelete","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClose","onStartSession","onAddTask","onBreakAndContinue","onComplete","onBackToDashboard","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/App.js"],"sourcesContent":["// src/App.jsx\n\nimport { useState, useEffect, useMemo } from 'react';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport FocusView from './components/FocusView';\nimport BreakView from './components/BreakView';\nimport HistoryView from './components/HistoryView';\nimport { TaskModal, SessionEndModal, BreakModal, ConfirmStopModal, ConfirmDeleteModal } from './components/Modals';\n\nconst App = () => {\n  const [tasks, setTasks] = useState(() => {\n    try {\n      const saved = localStorage.getItem('deepwork_tasks_v3');\n      return saved ? JSON.parse(saved) : [];\n    } catch { return []; }\n  });\n\n  const [sessions, setSessions] = useState(() => {\n    try {\n      const saved = localStorage.getItem('deepwork_sessions_v3');\n      return saved ? JSON.parse(saved) : [];\n    } catch { return []; }\n  });\n\n  const [activeSession, setActiveSession] = useState(null);\n  const [activeBreak, setActiveBreak] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState('day');\n\n  useEffect(() => {\n    localStorage.setItem('deepwork_tasks_v3', JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem('deepwork_sessions_v3', JSON.stringify(sessions));\n  }, [sessions]);\n\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    return sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case 'week':\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case 'month':\n          return sessionDate.getMonth() === now.getMonth() && sessionDate.getFullYear() === now.getFullYear();\n        case 'day':\n        default:\n          return sessionDate.setHours(0,0,0,0) === today.getTime();\n      }\n    });\n  }, [sessions, filter]);\n  \n  const handleAddTask = (taskName) => {\n    const newTask = { id: Date.now(), name: taskName };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setModal(null);\n  };\n  \n  const handleStartSession = (task, duration) => {\n    const session = { \n      task: task, \n      duration: duration * 60,\n    };\n    setActiveSession(session);\n    setModal(null);\n  };\n\n  const handleSessionEnd = (timeWorked) => {\n    if (!activeSession) return;\n    \n    // Save the completed session\n    const newSession = {\n      id: Date.now(),\n      taskId: activeSession.task.id,\n      duration: timeWorked,\n      completedAt: new Date().toISOString(),\n    };\n    setSessions(prevSessions => [...prevSessions, newSession]);\n    \n    // Show session end modal with options\n    setModal('sessionEnd');\n  };\n\n  const handleBreakAndContinue = () => {\n    // Start a 5-minute break\n    setActiveBreak({\n      duration: 5 * 60, // 5 minutes in seconds\n      nextTask: activeSession.task\n    });\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleBreakEnd = () => {\n    if (!activeBreak) return;\n    \n    // Continue with the same task after break\n    const session = {\n      task: activeBreak.nextTask,\n      duration: 25 * 60, // Default 25 minutes\n    };\n    setActiveSession(session);\n    setActiveBreak(null);\n  };\n\n  const handleSkipBreak = () => {\n    // Go back to dashboard\n    setActiveBreak(null);\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleCompleteAndChooseNew = () => {\n    // Go back to dashboard to choose new task\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleBackToDashboard = () => {\n    // Go back to dashboard\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleStopSession = () => {\n    setActiveSession(null);\n    setModal(null);\n  };\n\n  const handleDeleteTask = (task) => {\n    setTaskToDelete(task);\n    setModal('confirmDelete');\n  };\n\n  const handleConfirmDelete = () => {\n    if (!taskToDelete) return;\n    \n    // Remove the task\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskToDelete.id));\n    \n    // Remove all sessions related to this task\n    setSessions(prevSessions => prevSessions.filter(session => session.taskId !== taskToDelete.id));\n\n    // Close modal and reset state\n    setModal(null);\n    setTaskToDelete(null);\n  };\n\n  const handleCancelDelete = () => {\n    setModal(null);\n    setTaskToDelete(null);\n  };\n\n  // Render break view\n  if (activeBreak) {\n    return (\n      <BreakView \n        duration={activeBreak.duration}\n        onBreakEnd={handleBreakEnd}\n        onSkipBreak={handleSkipBreak}\n      />\n    );\n  }\n\n  // Render focus view\n  if (activeSession) {\n    return (\n      <FocusView \n        session={activeSession} \n        onSessionEnd={handleSessionEnd}\n        onStop={() => setModal('confirmStop')}\n      />\n    );\n  }\n  \n  // Render dashboard (default view)\n  return (\n    <div className=\"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\">\n      <Header sessions={filteredSessions} filter={filter} />\n      \n      <div className=\"flex-grow overflow-y-auto px-4 pb-24\">\n        <HistoryView \n          sessions={filteredSessions} \n          tasks={tasks}\n          filter={filter}\n          setFilter={setFilter}\n        />\n        <TaskList \n          tasks={tasks} \n          onTaskClick={(task) => {\n            setTaskToStart(task);\n            setModal('startTask');\n          }}\n          onTaskDelete={handleDeleteTask}\n        />\n      </div>\n      \n      <button \n        onClick={() => setModal('addTask')}\n        className=\"fixed bottom-6 right-6 bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110 z-20\"\n        aria-label=\"Thêm task mới\"\n      >\n        <svg className=\"w-7 h-7\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\n        </svg>\n      </button>\n\n      {/* Modals */}\n      {(modal === 'addTask' || modal === 'startTask') && (\n        <TaskModal \n          task={taskToStart}\n          onClose={() => { setModal(null); setTaskToStart(null); }}\n          onStartSession={handleStartSession}\n          onAddTask={handleAddTask}\n        />\n      )}\n      \n      {modal === 'sessionEnd' && (\n        <SessionEndModal \n          session={activeSession}\n          onBreakAndContinue={handleBreakAndContinue}\n          onComplete={handleCompleteAndChooseNew}\n          onBackToDashboard={handleBackToDashboard}\n        />\n      )}\n\n      {modal === 'confirmStop' && (\n        <ConfirmStopModal \n          onConfirm={handleStopSession}\n          onCancel={() => setModal(null)}\n        />\n      )}\n\n      {modal === 'confirmDelete' && (\n        <ConfirmDeleteModal \n          task={taskToDelete}\n          onConfirm={handleConfirmDelete}\n          onCancel={handleCancelDelete}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}