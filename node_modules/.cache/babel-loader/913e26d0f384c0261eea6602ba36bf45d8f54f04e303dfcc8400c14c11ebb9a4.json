{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useGoogleSheets.js\nimport { useState, useEffect, useCallback } from 'react';\nimport googleSheetsService from '../services/googleSheetsService';\nexport const useGoogleSheets = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load initial data\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [tasksData, sessionsData] = await Promise.all([googleSheetsService.getTasks(), googleSheetsService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n    } catch (err) {\n      setError('Không thể tải dữ liệu từ Google Sheets');\n      console.error('Error loading data:', err);\n\n      // Fallback to localStorage if Google Sheets fails\n      try {\n        const savedTasks = localStorage.getItem(\"deepwork_tasks_v3\");\n        const savedSessions = localStorage.getItem(\"deepwork_sessions_v3\");\n        setTasks(savedTasks ? JSON.parse(savedTasks) : []);\n        setSessions(savedSessions ? JSON.parse(savedSessions) : []);\n      } catch (localError) {\n        console.error('Error loading from localStorage:', localError);\n        setTasks([]);\n        setSessions([]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Add task\n  const addTask = useCallback(async taskName => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newTask = await googleSheetsService.addTask(taskName);\n      setTasks(prev => [...prev, newTask]);\n\n      // Also save to localStorage as backup\n      const updatedTasks = [...tasks, newTask];\n      localStorage.setItem(\"deepwork_tasks_v3\", JSON.stringify(updatedTasks));\n      return newTask;\n    } catch (err) {\n      setError('Không thể thêm task mới');\n      console.error('Error adding task:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [tasks]);\n\n  // Delete task\n  const deleteTask = useCallback(async taskId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await googleSheetsService.deleteTask(taskId);\n      await googleSheetsService.deleteSessionsByTaskId(taskId);\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.taskId !== taskId));\n\n      // Update localStorage backup\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\n      const updatedSessions = sessions.filter(session => session.taskId !== taskId);\n      localStorage.setItem(\"deepwork_tasks_v3\", JSON.stringify(updatedTasks));\n      localStorage.setItem(\"deepwork_sessions_v3\", JSON.stringify(updatedSessions));\n      return true;\n    } catch (err) {\n      setError('Không thể xóa task');\n      console.error('Error deleting task:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [tasks, sessions]);\n\n  // Add session\n  const addSession = useCallback(async (taskId, duration) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newSession = await googleSheetsService.addSession(taskId, duration);\n      setSessions(prev => [...prev, newSession]);\n\n      // Update localStorage backup\n      const updatedSessions = [...sessions, newSession];\n      localStorage.setItem(\"deepwork_sessions_v3\", JSON.stringify(updatedSessions));\n      return newSession;\n    } catch (err) {\n      setError('Không thể lưu phiên làm việc');\n      console.error('Error adding session:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [sessions]);\n\n  // Initial load\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n  return {\n    tasks,\n    sessions,\n    loading,\n    error,\n    addTask,\n    deleteTask,\n    addSession,\n    refreshData: loadData\n  };\n};\n_s(useGoogleSheets, \"ULXXorcED5c0jokQ+q1PxQNjWDU=\");","map":{"version":3,"names":["useState","useEffect","useCallback","googleSheetsService","useGoogleSheets","_s","tasks","setTasks","sessions","setSessions","loading","setLoading","error","setError","loadData","tasksData","sessionsData","Promise","all","getTasks","getSessions","err","console","savedTasks","localStorage","getItem","savedSessions","JSON","parse","localError","addTask","taskName","newTask","prev","updatedTasks","setItem","stringify","deleteTask","taskId","deleteSessionsByTaskId","filter","task","id","session","updatedSessions","addSession","duration","newSession","refreshData"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/hooks/useGoogleSheets.js"],"sourcesContent":["// src/hooks/useGoogleSheets.js\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport googleSheetsService from '../services/googleSheetsService';\r\n\r\nexport const useGoogleSheets = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [sessions, setSessions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load initial data\r\n  const loadData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const [tasksData, sessionsData] = await Promise.all([\r\n        googleSheetsService.getTasks(),\r\n        googleSheetsService.getSessions(),\r\n      ]);\r\n      \r\n      setTasks(tasksData);\r\n      setSessions(sessionsData);\r\n    } catch (err) {\r\n      setError('Không thể tải dữ liệu từ Google Sheets');\r\n      console.error('Error loading data:', err);\r\n      \r\n      // Fallback to localStorage if Google Sheets fails\r\n      try {\r\n        const savedTasks = localStorage.getItem(\"deepwork_tasks_v3\");\r\n        const savedSessions = localStorage.getItem(\"deepwork_sessions_v3\");\r\n        \r\n        setTasks(savedTasks ? JSON.parse(savedTasks) : []);\r\n        setSessions(savedSessions ? JSON.parse(savedSessions) : []);\r\n      } catch (localError) {\r\n        console.error('Error loading from localStorage:', localError);\r\n        setTasks([]);\r\n        setSessions([]);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Add task\r\n  const addTask = useCallback(async (taskName) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const newTask = await googleSheetsService.addTask(taskName);\r\n      setTasks(prev => [...prev, newTask]);\r\n      \r\n      // Also save to localStorage as backup\r\n      const updatedTasks = [...tasks, newTask];\r\n      localStorage.setItem(\"deepwork_tasks_v3\", JSON.stringify(updatedTasks));\r\n      \r\n      return newTask;\r\n    } catch (err) {\r\n      setError('Không thể thêm task mới');\r\n      console.error('Error adding task:', err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tasks]);\r\n\r\n  // Delete task\r\n  const deleteTask = useCallback(async (taskId) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      await googleSheetsService.deleteTask(taskId);\r\n      await googleSheetsService.deleteSessionsByTaskId(taskId);\r\n      \r\n      setTasks(prev => prev.filter(task => task.id !== taskId));\r\n      setSessions(prev => prev.filter(session => session.taskId !== taskId));\r\n      \r\n      // Update localStorage backup\r\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\r\n      const updatedSessions = sessions.filter(session => session.taskId !== taskId);\r\n      localStorage.setItem(\"deepwork_tasks_v3\", JSON.stringify(updatedTasks));\r\n      localStorage.setItem(\"deepwork_sessions_v3\", JSON.stringify(updatedSessions));\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError('Không thể xóa task');\r\n      console.error('Error deleting task:', err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tasks, sessions]);\r\n\r\n  // Add session\r\n  const addSession = useCallback(async (taskId, duration) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const newSession = await googleSheetsService.addSession(taskId, duration);\r\n      setSessions(prev => [...prev, newSession]);\r\n      \r\n      // Update localStorage backup\r\n      const updatedSessions = [...sessions, newSession];\r\n      localStorage.setItem(\"deepwork_sessions_v3\", JSON.stringify(updatedSessions));\r\n      \r\n      return newSession;\r\n    } catch (err) {\r\n      setError('Không thể lưu phiên làm việc');\r\n      console.error('Error adding session:', err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [sessions]);\r\n\r\n  // Initial load\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  return {\r\n    tasks,\r\n    sessions,\r\n    loading,\r\n    error,\r\n    addTask,\r\n    deleteTask,\r\n    addSession,\r\n    refreshData: loadData,\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}