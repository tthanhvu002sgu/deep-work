{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport { TaskModal, SessionEndModal, ConfirmStopModal, ConfirmDeleteModal, DailyTargetModal, LoadingModal, ErrorModal } from \"./components/Modals\";\nimport { FileManagerModal } from \"./components/FileManagerModal\";\nimport fileStorageService from \"./services/fileStorageService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n  const [isTransitioning, setIsTransitioning] = useState(false); // Track transition state\n  // FIX: Add state to track the current date and trigger updates\n  const [currentDateKey, setCurrentDateKey] = useState(new Date().toDateString());\n\n  // FIX: Add effect to detect when a new day starts\n  useEffect(() => {\n    const dayCheckInterval = setInterval(() => {\n      const newDateKey = new Date().toDateString();\n      if (newDateKey !== currentDateKey) {\n        console.log(\"🎉 New day detected! Refreshing daily stats...\");\n        setCurrentDateKey(newDateKey);\n      }\n    }, 30 * 1000); // Check every 30 seconds\n\n    return () => clearInterval(dayCheckInterval);\n  }, [currentDateKey]);\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions(), fileStorageService.getDailyTarget()]);\n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.targetMinutes * 60); // Convert to seconds\n\n        console.log(\"Initial data loaded:\", {\n          tasks: tasksData.length,\n          sessions: sessionsData.length,\n          target: targetData.targetMinutes\n        });\n      } catch (error) {\n        console.error(\"Error loading initial data:\", error);\n        setError(\"Không thể tải dữ liệu: \" + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n    return () => {\n      fileStorageService.cleanup();\n    };\n  }, []);\n\n  // Auto-refresh data when file changes (for manual sync)\n  useEffect(() => {\n    const refreshInterval = setInterval(async () => {\n      if (isTransitioning || activeSession) return; // Skip during session or transition\n\n      try {\n        const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n        const tasksChanged = JSON.stringify(tasksData) !== JSON.stringify(tasks);\n        const sessionsChanged = JSON.stringify(sessionsData) !== JSON.stringify(sessions);\n        if (tasksChanged || sessionsChanged) {\n          console.log(\"Auto-refresh: External data changed\");\n          if (tasksChanged) setTasks(tasksData);\n          if (sessionsChanged) setSessions(sessionsData);\n        }\n      } catch (error) {\n        console.warn(\"Error auto-refreshing data:\", error);\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(refreshInterval);\n  }, [tasks, sessions, isTransitioning, activeSession]);\n\n  // Memoized filtered sessions\n  const filteredSessions = useMemo(() => {\n    var _sessions;\n    const now = new Date();\n\n    // FIX: Consistent week calculation (Monday to Sunday)\n    const getStartOfWeek = date => {\n      const d = new Date(date);\n      const day = d.getDay(); // 0=Sun, 1=Mon, ..., 6=Sat\n      const diff = d.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n      return new Date(d.setDate(diff));\n    };\n    const startOfThisWeek = getStartOfWeek(now);\n    startOfThisWeek.setHours(0, 0, 0, 0);\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const filtered = sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          // Filter for the current week from Monday to Sunday\n          return sessionDate >= startOfThisWeek;\n        case \"month\":\n          return sessionDate.getMonth() === now.getMonth() && sessionDate.getFullYear() === now.getFullYear();\n        case \"day\":\n        default:\n          return sessionDate.toDateString() === today.toDateString();\n      }\n    });\n    console.log(\"Filtered sessions:\", {\n      filter,\n      totalSessions: sessions.length,\n      filteredCount: filtered.length,\n      latestSession: (_sessions = sessions[sessions.length - 1]) === null || _sessions === void 0 ? void 0 : _sessions.completedAt\n    });\n    return filtered;\n    // FIX: Add currentDateKey to dependency array to re-calculate on new day\n  }, [sessions, filter, currentDateKey]);\n\n  // Memoized today focus time\n  const todayFocusTime = useMemo(() => {\n    const today = new Date();\n    const todaySessions = sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.toDateString() === today.toDateString();\n    });\n    const totalTime = todaySessions.reduce((acc, session) => acc + session.duration, 0);\n    console.log(\"Today focus time:\", {\n      todaySessionsCount: todaySessions.length,\n      totalTime: totalTime\n    });\n    return totalTime;\n    // FIX: Add currentDateKey to dependency array to re-calculate on new day\n  }, [sessions, currentDateKey]);\n\n  // Task management functions\n  const addTask = useCallback(async taskName => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newTask = await fileStorageService.addTask(taskName);\n      setTasks(prev => [...prev, newTask]);\n      console.log(\"Task added:\", newTask);\n      return newTask;\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      setError(\"Không thể thêm task mới: \" + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const deleteTask = useCallback(async taskId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await fileStorageService.deleteTask(taskId);\n\n      // Update state immediately\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.taskId !== taskId));\n      console.log(\"Task deleted:\", taskId);\n      return true;\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      setError(\"Không thể xóa task: \" + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // CRITICAL FIX: Đảm bảo dữ liệu được lưu và UI được cập nhật ngay lập tức\n  const addSession = useCallback(async (taskId, duration) => {\n    console.log(\"🔄 Bắt đầu lưu phiên:\", {\n      taskId,\n      duration\n    });\n    try {\n      // Lưu phiên làm việc\n      const newSession = await fileStorageService.addSession(taskId, duration);\n      console.log(\"💾 Phiên làm việc đã lưu:\", newSession);\n\n      // Thêm session mới vào state NGAY LẬP TỨC để UI cập nhật ngay\n      // (sử dụng functional update để tránh stale state)\n      setSessions(prevSessions => {\n        // Kiểm tra trùng lặp để tránh double counting\n        if (prevSessions.some(s => s.id === newSession.id)) {\n          return prevSessions;\n        }\n        // Thêm session mới vào danh sách\n        return [...prevSessions, newSession];\n      });\n\n      // Đảm bảo lưu xuống storage hoàn tất\n      if (typeof fileStorageService.forceSave === \"function\") {\n        await fileStorageService.forceSave();\n        console.log(\"✅ Đã lưu dữ liệu vào storage\");\n      }\n\n      // BUGFIX: Trả về session mới để tham chiếu bên ngoài\n      return newSession;\n    } catch (error) {\n      console.error(\"❌ Lỗi khi lưu phiên làm việc:\", error);\n      setError(\"Không thể lưu phiên làm việc: \" + error.message);\n      throw error;\n    }\n  }, []);\n\n  // Phiên làm việc kết thúc - cập nhật để đảm bảo UI refresh đúng thời điểm\n  const handleAddSession = useCallback(async timeWorked => {\n    if (!activeSession) {\n      console.warn(\"⚠️ Không có phiên làm việc đang hoạt động\");\n      return;\n    }\n    console.log(\"🏁 Kết thúc phiên làm việc:\", {\n      taskId: activeSession.task.id,\n      timeWorked: timeWorked,\n      taskName: activeSession.task.name\n    });\n    try {\n      setIsTransitioning(true);\n\n      // Lưu phiên làm việc vào storage và cập nhật state\n      await addSession(activeSession.task.id, timeWorked);\n\n      // Đảm bảo state sessions đã được cập nhật trước khi reset activeSession\n      await new Promise(resolve => setTimeout(resolve, 50));\n\n      // Sau khi dữ liệu đã được cập nhật, chuyển về màn hình chính\n      setActiveSession(null);\n      setModal(null);\n\n      // BUGFIX: Trigger re-render sau khi đã về màn hình chính\n      setTimeout(() => {\n        // Trick để force re-render HistoryView\n        setSessions(prevSessions => [...prevSessions]);\n        console.log(\"🔄 Đã force re-render sau khi về màn hình chính\");\n      }, 100);\n      console.log(\"✅ Hoàn tất quá trình kết thúc phiên làm việc\");\n    } catch (error) {\n      console.error(\"❌ Lỗi khi kết thúc phiên làm việc:\", error);\n      setModal(\"error\");\n    } finally {\n      setTimeout(() => setIsTransitioning(false), 150);\n    }\n  }, [activeSession, addSession]);\n\n  // Bỏ qua phiên làm việc, không lưu dữ liệu\n  const handleStopSession = useCallback(() => {\n    console.log(\"⏹️ Dừng phiên làm việc mà không lưu\");\n    setActiveSession(null);\n    setModal(null);\n  }, []);\n  const handleDeleteTask = useCallback(task => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  }, []);\n  const handleConfirmDelete = useCallback(async () => {\n    if (!taskToDelete) return;\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [taskToDelete, deleteTask]);\n  const handleCancelDelete = useCallback(() => {\n    setModal(null);\n    setTaskToDelete(null);\n  }, []);\n  const handleSetDailyTarget = useCallback(async targetMinutes => {\n    setLoading(true);\n    try {\n      await fileStorageService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60);\n      setModal(null);\n      console.log(\"🎯 Daily target set:\", targetMinutes);\n    } catch (error) {\n      console.error(\"Error setting daily target:\", error);\n      setError(\"Không thể lưu mục tiêu hàng ngày: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleErrorClose = useCallback(() => {\n    setModal(null);\n    setError(null);\n  }, []);\n  const handleRetry = useCallback(async () => {\n    setError(null);\n    setModal(null);\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n      console.log(\"🔄 Data reloaded after retry\");\n    } catch (error) {\n      console.error(\"Retry failed:\", error);\n      setError(\"Vẫn không thể tải dữ liệu: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleFileManagerSuccess = useCallback(async () => {\n    try {\n      const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n      console.log(\"📁 Data reloaded after file operation\");\n    } catch (error) {\n      console.error(\"Error reloading after file operation:\", error);\n    }\n  }, []);\n\n  // Debug effect\n  useEffect(() => {\n    console.log(\"📈 Current state:\", {\n      totalSessions: sessions.length,\n      filteredSessions: filteredSessions.length,\n      todayFocusTime: todayFocusTime,\n      isTransitioning: isTransitioning,\n      hasActiveSession: !!activeSession\n    });\n  }, [sessions.length, filteredSessions.length, todayFocusTime, isTransitioning, activeSession]);\n\n  // Function to handle starting a session when user selects a task\n  const handleStartSession = useCallback((task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60 // Convert minutes to seconds\n    };\n    setActiveSession(session);\n    setModal(null);\n    console.log(\"Starting session:\", session);\n  }, []);\n\n  // Function to handle adding a new task\n  const handleAddTask = useCallback(async taskName => {\n    try {\n      await addTask(taskName);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [addTask]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\",\n    children: [!activeSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        sessions: filteredSessions,\n        filter: filter,\n        dailyTarget: dailyTarget,\n        todayFocusTime: todayFocusTime,\n        onSetTarget: () => setModal(\"dailyTarget\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto px-4 pb-24\",\n        children: [/*#__PURE__*/_jsxDEV(HistoryView, {\n          sessions: filteredSessions,\n          tasks: tasks,\n          filter: filter,\n          setFilter: setFilter,\n          dailyTargets: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          onTaskClick: task => {\n            setTaskToStart(task);\n            setModal(\"startTask\");\n          },\n          onTaskDelete: handleDeleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed bottom-6 right-6 flex flex-col space-y-3 z-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(\"fileManager\"),\n          className: \"bg-green-600 text-white rounded-full w-12 h-12 flex items-center justify-center shadow-lg hover:bg-green-700 transition transform hover:scale-110\",\n          \"aria-label\": \"Qu\\u1EA3n l\\xFD file d\\u1EEF li\\u1EC7u\",\n          title: \"Qu\\u1EA3n l\\xFD file d\\u1EEF li\\u1EC7u\",\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(\"addTask\"),\n          className: \"bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110\",\n          \"aria-label\": \"Th\\xEAm task m\\u1EDBi\",\n          disabled: loading || isTransitioning,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-7 h-7\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FocusView, {\n      session: activeSession,\n      onSessionEnd: handleAddSession,\n      onStop: () => setModal(\"confirmStop\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 19\n    }, this), modal === \"error\" && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClose: handleErrorClose,\n      onRetry: handleRetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this), modal === \"fileManager\" && /*#__PURE__*/_jsxDEV(FileManagerModal, {\n      onClose: () => setModal(null),\n      onSuccess: handleFileManagerSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }, this), (modal === \"addTask\" || modal === \"startTask\") && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: taskToStart,\n      onClose: () => {\n        setModal(null);\n        setTaskToStart(null);\n      },\n      onStartSession: handleStartSession,\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 9\n    }, this), modal === \"dailyTarget\" && /*#__PURE__*/_jsxDEV(DailyTargetModal, {\n      currentTarget: Math.round(dailyTarget / 60),\n      onClose: () => setModal(null),\n      onSetTarget: handleSetDailyTarget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }, this), modal === \"sessionEnd\" && /*#__PURE__*/_jsxDEV(SessionEndModal, {\n      onComplete: () => handleAddSession(activeSession.duration),\n      onPause: handleStopSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }, this), modal === \"confirmStop\" && /*#__PURE__*/_jsxDEV(ConfirmStopModal, {\n      onConfirm: handleStopSession,\n      onCancel: () => setModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this), modal === \"confirmDelete\" && /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n      task: taskToDelete,\n      onConfirm: handleConfirmDelete,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"asAkECYt6rtIl+uKspz++tiCphU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Header","TaskList","FocusView","HistoryView","TaskModal","SessionEndModal","ConfirmStopModal","ConfirmDeleteModal","DailyTargetModal","LoadingModal","ErrorModal","FileManagerModal","fileStorageService","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","sessions","setSessions","loading","setLoading","error","setError","dailyTarget","setDailyTarget","activeSession","setActiveSession","modal","setModal","taskToStart","setTaskToStart","taskToDelete","setTaskToDelete","filter","setFilter","isTransitioning","setIsTransitioning","currentDateKey","setCurrentDateKey","Date","toDateString","dayCheckInterval","setInterval","newDateKey","console","log","clearInterval","loadInitialData","tasksData","sessionsData","targetData","Promise","all","getTasks","getSessions","getDailyTarget","targetMinutes","length","target","message","cleanup","refreshInterval","tasksChanged","JSON","stringify","sessionsChanged","warn","filteredSessions","_sessions","now","getStartOfWeek","date","d","day","getDay","diff","getDate","setDate","startOfThisWeek","setHours","today","getFullYear","getMonth","filtered","session","sessionDate","completedAt","totalSessions","filteredCount","latestSession","todayFocusTime","todaySessions","totalTime","reduce","acc","duration","todaySessionsCount","addTask","taskName","newTask","prev","deleteTask","taskId","task","id","addSession","newSession","prevSessions","some","s","forceSave","handleAddSession","timeWorked","name","resolve","setTimeout","handleStopSession","handleDeleteTask","handleConfirmDelete","handleCancelDelete","handleSetDailyTarget","handleErrorClose","handleRetry","handleFileManagerSuccess","hasActiveSession","handleStartSession","handleAddTask","className","children","onSetTarget","fileName","_jsxFileName","lineNumber","columnNumber","dailyTargets","onTaskClick","onTaskDelete","onClick","title","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","onSessionEnd","onStop","onClose","onRetry","onSuccess","onStartSession","onAddTask","currentTarget","Math","round","onComplete","onPause","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["c:/Users/Vu/Documents/vscode/deepwork/deepwork/src/App.js"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport {\n  TaskModal,\n  SessionEndModal,\n  ConfirmStopModal,\n  ConfirmDeleteModal,\n  DailyTargetModal,\n  LoadingModal,\n  ErrorModal,\n} from \"./components/Modals\";\nimport { FileManagerModal } from \"./components/FileManagerModal\";\nimport fileStorageService from \"./services/fileStorageService\";\n\nconst App = () => {\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n  const [isTransitioning, setIsTransitioning] = useState(false); // Track transition state\n  // FIX: Add state to track the current date and trigger updates\n  const [currentDateKey, setCurrentDateKey] = useState(\n    new Date().toDateString()\n  );\n\n  // FIX: Add effect to detect when a new day starts\n  useEffect(() => {\n    const dayCheckInterval = setInterval(() => {\n      const newDateKey = new Date().toDateString();\n      if (newDateKey !== currentDateKey) {\n        console.log(\"🎉 New day detected! Refreshing daily stats...\");\n        setCurrentDateKey(newDateKey);\n      }\n    }, 30 * 1000); // Check every 30 seconds\n\n    return () => clearInterval(dayCheckInterval);\n  }, [currentDateKey]);\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([\n          fileStorageService.getTasks(),\n          fileStorageService.getSessions(),\n          fileStorageService.getDailyTarget(),\n        ]);\n\n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.targetMinutes * 60); // Convert to seconds\n\n        console.log(\"Initial data loaded:\", {\n          tasks: tasksData.length,\n          sessions: sessionsData.length,\n          target: targetData.targetMinutes,\n        });\n      } catch (error) {\n        console.error(\"Error loading initial data:\", error);\n        setError(\"Không thể tải dữ liệu: \" + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInitialData();\n\n    return () => {\n      fileStorageService.cleanup();\n    };\n  }, []);\n\n  // Auto-refresh data when file changes (for manual sync)\n  useEffect(() => {\n    const refreshInterval = setInterval(async () => {\n      if (isTransitioning || activeSession) return; // Skip during session or transition\n\n      try {\n        const [tasksData, sessionsData] = await Promise.all([\n          fileStorageService.getTasks(),\n          fileStorageService.getSessions(),\n        ]);\n\n        const tasksChanged =\n          JSON.stringify(tasksData) !== JSON.stringify(tasks);\n        const sessionsChanged =\n          JSON.stringify(sessionsData) !== JSON.stringify(sessions);\n\n        if (tasksChanged || sessionsChanged) {\n          console.log(\"Auto-refresh: External data changed\");\n          if (tasksChanged) setTasks(tasksData);\n          if (sessionsChanged) setSessions(sessionsData);\n        }\n      } catch (error) {\n        console.warn(\"Error auto-refreshing data:\", error);\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(refreshInterval);\n  }, [tasks, sessions, isTransitioning, activeSession]);\n\n  // Memoized filtered sessions\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n\n    // FIX: Consistent week calculation (Monday to Sunday)\n    const getStartOfWeek = (date) => {\n      const d = new Date(date);\n      const day = d.getDay(); // 0=Sun, 1=Mon, ..., 6=Sat\n      const diff = d.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n      return new Date(d.setDate(diff));\n    };\n\n    const startOfThisWeek = getStartOfWeek(now);\n    startOfThisWeek.setHours(0, 0, 0, 0);\n\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const filtered = sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          // Filter for the current week from Monday to Sunday\n          return sessionDate >= startOfThisWeek;\n        case \"month\":\n          return (\n            sessionDate.getMonth() === now.getMonth() &&\n            sessionDate.getFullYear() === now.getFullYear()\n          );\n        case \"day\":\n        default:\n          return sessionDate.toDateString() === today.toDateString();\n      }\n    });\n\n    console.log(\"Filtered sessions:\", {\n      filter,\n      totalSessions: sessions.length,\n      filteredCount: filtered.length,\n      latestSession: sessions[sessions.length - 1]?.completedAt,\n    });\n\n    return filtered;\n    // FIX: Add currentDateKey to dependency array to re-calculate on new day\n  }, [sessions, filter, currentDateKey]);\n\n  // Memoized today focus time\n  const todayFocusTime = useMemo(() => {\n    const today = new Date();\n\n    const todaySessions = sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.toDateString() === today.toDateString();\n    });\n\n    const totalTime = todaySessions.reduce(\n      (acc, session) => acc + session.duration,\n      0\n    );\n\n    console.log(\"Today focus time:\", {\n      todaySessionsCount: todaySessions.length,\n      totalTime: totalTime,\n    });\n\n    return totalTime;\n    // FIX: Add currentDateKey to dependency array to re-calculate on new day\n  }, [sessions, currentDateKey]);\n\n  // Task management functions\n  const addTask = useCallback(async (taskName) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const newTask = await fileStorageService.addTask(taskName);\n      setTasks((prev) => [...prev, newTask]);\n\n      console.log(\"Task added:\", newTask);\n      return newTask;\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      setError(\"Không thể thêm task mới: \" + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const deleteTask = useCallback(async (taskId) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      await fileStorageService.deleteTask(taskId);\n\n      // Update state immediately\n      setTasks((prev) => prev.filter((task) => task.id !== taskId));\n      setSessions((prev) =>\n        prev.filter((session) => session.taskId !== taskId)\n      );\n\n      console.log(\"Task deleted:\", taskId);\n      return true;\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      setError(\"Không thể xóa task: \" + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // CRITICAL FIX: Đảm bảo dữ liệu được lưu và UI được cập nhật ngay lập tức\n  const addSession = useCallback(async (taskId, duration) => {\n    console.log(\"🔄 Bắt đầu lưu phiên:\", { taskId, duration });\n\n    try {\n      // Lưu phiên làm việc\n      const newSession = await fileStorageService.addSession(taskId, duration);\n      console.log(\"💾 Phiên làm việc đã lưu:\", newSession);\n\n      // Thêm session mới vào state NGAY LẬP TỨC để UI cập nhật ngay\n      // (sử dụng functional update để tránh stale state)\n      setSessions((prevSessions) => {\n        // Kiểm tra trùng lặp để tránh double counting\n        if (prevSessions.some((s) => s.id === newSession.id)) {\n          return prevSessions;\n        }\n        // Thêm session mới vào danh sách\n        return [...prevSessions, newSession];\n      });\n\n      // Đảm bảo lưu xuống storage hoàn tất\n      if (typeof fileStorageService.forceSave === \"function\") {\n        await fileStorageService.forceSave();\n        console.log(\"✅ Đã lưu dữ liệu vào storage\");\n      }\n\n      // BUGFIX: Trả về session mới để tham chiếu bên ngoài\n      return newSession;\n    } catch (error) {\n      console.error(\"❌ Lỗi khi lưu phiên làm việc:\", error);\n      setError(\"Không thể lưu phiên làm việc: \" + error.message);\n      throw error;\n    }\n  }, []);\n\n  // Phiên làm việc kết thúc - cập nhật để đảm bảo UI refresh đúng thời điểm\n  const handleAddSession = useCallback(\n    async (timeWorked) => {\n      if (!activeSession) {\n        console.warn(\"⚠️ Không có phiên làm việc đang hoạt động\");\n        return;\n      }\n\n      console.log(\"🏁 Kết thúc phiên làm việc:\", {\n        taskId: activeSession.task.id,\n        timeWorked: timeWorked,\n        taskName: activeSession.task.name,\n      });\n\n      try {\n        setIsTransitioning(true);\n\n        // Lưu phiên làm việc vào storage và cập nhật state\n        await addSession(activeSession.task.id, timeWorked);\n\n        // Đảm bảo state sessions đã được cập nhật trước khi reset activeSession\n        await new Promise((resolve) => setTimeout(resolve, 50));\n\n        // Sau khi dữ liệu đã được cập nhật, chuyển về màn hình chính\n        setActiveSession(null);\n        setModal(null);\n\n        // BUGFIX: Trigger re-render sau khi đã về màn hình chính\n        setTimeout(() => {\n          // Trick để force re-render HistoryView\n          setSessions((prevSessions) => [...prevSessions]);\n          console.log(\"🔄 Đã force re-render sau khi về màn hình chính\");\n        }, 100);\n\n        console.log(\"✅ Hoàn tất quá trình kết thúc phiên làm việc\");\n      } catch (error) {\n        console.error(\"❌ Lỗi khi kết thúc phiên làm việc:\", error);\n        setModal(\"error\");\n      } finally {\n        setTimeout(() => setIsTransitioning(false), 150);\n      }\n    },\n    [activeSession, addSession]\n  );\n\n  // Bỏ qua phiên làm việc, không lưu dữ liệu\n  const handleStopSession = useCallback(() => {\n    console.log(\"⏹️ Dừng phiên làm việc mà không lưu\");\n    setActiveSession(null);\n    setModal(null);\n  }, []);\n\n  const handleDeleteTask = useCallback((task) => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  }, []);\n\n  const handleConfirmDelete = useCallback(async () => {\n    if (!taskToDelete) return;\n\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [taskToDelete, deleteTask]);\n\n  const handleCancelDelete = useCallback(() => {\n    setModal(null);\n    setTaskToDelete(null);\n  }, []);\n\n  const handleSetDailyTarget = useCallback(async (targetMinutes) => {\n    setLoading(true);\n    try {\n      await fileStorageService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60);\n      setModal(null);\n\n      console.log(\"🎯 Daily target set:\", targetMinutes);\n    } catch (error) {\n      console.error(\"Error setting daily target:\", error);\n      setError(\"Không thể lưu mục tiêu hàng ngày: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleErrorClose = useCallback(() => {\n    setModal(null);\n    setError(null);\n  }, []);\n\n  const handleRetry = useCallback(async () => {\n    setError(null);\n    setModal(null);\n\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([\n        fileStorageService.getTasks(),\n        fileStorageService.getSessions(),\n      ]);\n\n      setTasks(tasksData);\n      setSessions(sessionsData);\n\n      console.log(\"🔄 Data reloaded after retry\");\n    } catch (error) {\n      console.error(\"Retry failed:\", error);\n      setError(\"Vẫn không thể tải dữ liệu: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleFileManagerSuccess = useCallback(async () => {\n    try {\n      const [tasksData, sessionsData] = await Promise.all([\n        fileStorageService.getTasks(),\n        fileStorageService.getSessions(),\n      ]);\n\n      setTasks(tasksData);\n      setSessions(sessionsData);\n\n      console.log(\"📁 Data reloaded after file operation\");\n    } catch (error) {\n      console.error(\"Error reloading after file operation:\", error);\n    }\n  }, []);\n\n  // Debug effect\n  useEffect(() => {\n    console.log(\"📈 Current state:\", {\n      totalSessions: sessions.length,\n      filteredSessions: filteredSessions.length,\n      todayFocusTime: todayFocusTime,\n      isTransitioning: isTransitioning,\n      hasActiveSession: !!activeSession,\n    });\n  }, [\n    sessions.length,\n    filteredSessions.length,\n    todayFocusTime,\n    isTransitioning,\n    activeSession,\n  ]);\n\n  // Function to handle starting a session when user selects a task\n  const handleStartSession = useCallback((task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60, // Convert minutes to seconds\n    };\n    setActiveSession(session);\n    setModal(null);\n\n    console.log(\"Starting session:\", session);\n  }, []);\n\n  // Function to handle adding a new task\n  const handleAddTask = useCallback(\n    async (taskName) => {\n      try {\n        await addTask(taskName);\n        setModal(null);\n      } catch (error) {\n        setModal(\"error\");\n      }\n    },\n    [addTask]\n  );\n\n  return (\n    <div className=\"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\">\n      {!activeSession ? (\n        <>\n          <Header\n            sessions={filteredSessions}\n            filter={filter}\n            dailyTarget={dailyTarget}\n            todayFocusTime={todayFocusTime}\n            onSetTarget={() => setModal(\"dailyTarget\")}\n          />\n\n          <div className=\"flex-grow overflow-y-auto px-4 pb-24\">\n            <HistoryView\n              sessions={filteredSessions}\n              tasks={tasks}\n              filter={filter}\n              setFilter={setFilter}\n              dailyTargets={{}}\n            />\n            <TaskList\n              tasks={tasks}\n              onTaskClick={(task) => {\n                setTaskToStart(task);\n                setModal(\"startTask\");\n              }}\n              onTaskDelete={handleDeleteTask}\n            />\n          </div>\n\n          {/* Floating Action Buttons */}\n          <div className=\"fixed bottom-6 right-6 flex flex-col space-y-3 z-20\">\n            <button\n              onClick={() => setModal(\"fileManager\")}\n              className=\"bg-green-600 text-white rounded-full w-12 h-12 flex items-center justify-center shadow-lg hover:bg-green-700 transition transform hover:scale-110\"\n              aria-label=\"Quản lý file dữ liệu\"\n              title=\"Quản lý file dữ liệu\"\n            >\n              📁\n            </button>\n\n            <button\n              onClick={() => setModal(\"addTask\")}\n              className=\"bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110\"\n              aria-label=\"Thêm task mới\"\n              disabled={loading || isTransitioning}\n            >\n              <svg\n                className=\"w-7 h-7\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </>\n      ) : (\n        <FocusView\n          session={activeSession}\n          onSessionEnd={handleAddSession}\n          onStop={() => setModal(\"confirmStop\")}\n        />\n      )}\n\n      {/* Loading Modal */}\n      {loading && <LoadingModal />}\n\n      {/* Error Modal */}\n      {modal === \"error\" && (\n        <ErrorModal\n          error={error}\n          onClose={handleErrorClose}\n          onRetry={handleRetry}\n        />\n      )}\n\n      {/* File Manager Modal */}\n      {modal === \"fileManager\" && (\n        <FileManagerModal\n          onClose={() => setModal(null)}\n          onSuccess={handleFileManagerSuccess}\n        />\n      )}\n\n      {(modal === \"addTask\" || modal === \"startTask\") && (\n        <TaskModal\n          task={taskToStart}\n          onClose={() => {\n            setModal(null);\n            setTaskToStart(null);\n          }}\n          onStartSession={handleStartSession}\n          onAddTask={handleAddTask}\n        />\n      )}\n\n      {modal === \"dailyTarget\" && (\n        <DailyTargetModal\n          currentTarget={Math.round(dailyTarget / 60)}\n          onClose={() => setModal(null)}\n          onSetTarget={handleSetDailyTarget}\n        />\n      )}\n\n      {modal === \"sessionEnd\" && (\n        <SessionEndModal\n          onComplete={() => handleAddSession(activeSession.duration)}\n          onPause={handleStopSession}\n        />\n      )}\n\n      {modal === \"confirmStop\" && (\n        <ConfirmStopModal\n          onConfirm={handleStopSession}\n          onCancel={() => setModal(null)}\n        />\n      )}\n\n      {modal === \"confirmDelete\" && (\n        <ConfirmDeleteModal\n          task={taskToDelete}\n          onConfirm={handleConfirmDelete}\n          onCancel={handleCancelDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}