{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\components\\\\FocusView.js\",\n  _s = $RefreshSig$();\n// src/components/FocusView.jsx\n\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatTimer = seconds => {\n  const m = Math.floor(seconds / 60).toString().padStart(2, '0');\n  const s = (seconds % 60).toString().padStart(2, '0');\n  return `${m}:${s}`;\n};\n\n// Create notification sound player using HTML5 Audio\nconst createNotificationSound = () => {\n  try {\n    // Function to play notification sound multiple times\n    const playNotificationSound = async (times = 3, interval = 500) => {\n      for (let i = 0; i < times; i++) {\n        try {\n          const audio = new Audio('/noti.mp3');\n          audio.volume = 0.7; // Set volume to 70%\n\n          // Create promise to wait for audio to finish\n          const playPromise = new Promise((resolve, reject) => {\n            audio.onended = resolve;\n            audio.onerror = reject;\n            audio.oncanplaythrough = () => {\n              audio.play().catch(reject);\n            };\n          });\n\n          // Load and play audio\n          audio.load();\n          await playPromise;\n\n          // Wait before playing next sound (except for last iteration)\n          if (i < times - 1) {\n            await new Promise(resolve => setTimeout(resolve, interval));\n          }\n        } catch (error) {\n          console.warn(`Failed to play notification sound ${i + 1}:`, error);\n          // Continue with next iteration even if one fails\n        }\n      }\n    };\n    return playNotificationSound;\n  } catch (error) {\n    console.log('Audio not supported:', error);\n    return () => Promise.resolve(); // Return empty async function if audio not supported\n  }\n};\n\n// Tab focus management utility\nconst TabFocusManager = {\n  // Store original title to restore later\n  originalTitle: document.title,\n  // Focus tab with visual indicators\n  focusTab: () => {\n    try {\n      // Change document title to grab attention\n      document.title = '🎉 DeepWork - Phiên hoàn thành!';\n\n      // Focus the window if possible\n      if (window.focus) {\n        window.focus();\n      }\n\n      // Try to bring tab to front (limited by browser security)\n      if (window.parent && window.parent.focus) {\n        window.parent.focus();\n      }\n\n      // Flash the page title for attention (blinking effect)\n      let blinkCount = 0;\n      const blinkInterval = setInterval(() => {\n        document.title = blinkCount % 2 === 0 ? '🎉 DeepWork - Phiên hoàn thành!' : '⭐ Quay lại để xem kết quả!';\n        blinkCount++;\n        if (blinkCount >= 10) {\n          // Blink 5 times\n          clearInterval(blinkInterval);\n          document.title = '🎉 DeepWork - Phiên hoàn thành!';\n        }\n      }, 1000);\n      console.log('Tab focus requested - title changed and window focused');\n    } catch (error) {\n      console.warn('Could not fully focus tab:', error);\n    }\n  },\n  // Restore original title when user returns\n  restoreTitle: () => {\n    try {\n      document.title = TabFocusManager.originalTitle;\n    } catch (error) {\n      console.warn('Could not restore title:', error);\n    }\n  },\n  // Setup visibility change listener\n  setupVisibilityListener: () => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        // User returned to tab, restore original title\n        TabFocusManager.restoreTitle();\n      }\n    };\n\n    // Listen for tab becoming visible\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    // Listen for window focus\n    window.addEventListener('focus', TabFocusManager.restoreTitle);\n\n    // Cleanup function\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('focus', TabFocusManager.restoreTitle);\n    };\n  }\n};\nconst FocusView = ({\n  session,\n  onSessionEnd,\n  onStop\n}) => {\n  _s();\n  const isFreeMode = session.duration === 0;\n  const [timeLeft, setTimeLeft] = useState(session.duration);\n  const [timeElapsed, setTimeElapsed] = useState(0); // For free mode\n  const [isPaused, setIsPaused] = useState(false);\n  const [isBreakTime, setIsBreakTime] = useState(false);\n  const [breakTimeLeft, setBreakTimeLeft] = useState(300); // 5 minutes = 300 seconds\n  const [showTransition, setShowTransition] = useState(false);\n  const [isPlayingSound, setIsPlayingSound] = useState(false);\n  const timerRef = useRef(null);\n  const playNotificationRef = useRef(null);\n  const cleanupVisibilityListenerRef = useRef(null);\n\n  // Initialize notification sound and tab focus management\n  useEffect(() => {\n    playNotificationRef.current = createNotificationSound();\n\n    // Setup visibility change listener\n    cleanupVisibilityListenerRef.current = TabFocusManager.setupVisibilityListener();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n\n      // Cleanup visibility listener\n      if (cleanupVisibilityListenerRef.current) {\n        cleanupVisibilityListenerRef.current();\n      }\n\n      // Restore original title when component unmounts\n      TabFocusManager.restoreTitle();\n    };\n  }, []);\n\n  // Timer effect for work session (both countdown and count up)\n  useEffect(() => {\n    if (!isBreakTime && !isPaused && !showTransition) {\n      if (isFreeMode) {\n        // Count up mode\n        timerRef.current = setInterval(() => {\n          setTimeElapsed(prev => prev + 1);\n        }, 1000);\n      } else {\n        // Count down mode\n        if (timeLeft > 0) {\n          timerRef.current = setInterval(() => {\n            setTimeLeft(prev => {\n              if (prev <= 1) {\n                return 0;\n              }\n              return prev - 1;\n            });\n          }, 1000);\n        }\n      }\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isPaused, timeLeft, isBreakTime, isFreeMode, showTransition]);\n\n  // Timer effect for break session\n  useEffect(() => {\n    if (isBreakTime && !isPaused && breakTimeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setBreakTimeLeft(prev => {\n          if (prev <= 1) {\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (isBreakTime) {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isPaused, breakTimeLeft, isBreakTime]);\n\n  // Show transition animation and notifications\n  const showSessionEndNotification = async () => {\n    // Show transition screen\n    setShowTransition(true);\n    setIsPlayingSound(true);\n\n    // Focus tab immediately when session ends\n    TabFocusManager.focusTab();\n    try {\n      // Play notification sound 3 times with 500ms interval\n      if (playNotificationRef.current) {\n        await playNotificationRef.current(3, 500);\n      }\n    } catch (error) {\n      console.warn('Failed to play notification sounds:', error);\n    } finally {\n      setIsPlayingSound(false);\n    }\n\n    // Show browser notification if permission granted\n    if (Notification.permission === 'granted') {\n      const notification = new Notification('🎉 Phiên làm việc hoàn thành!', {\n        body: 'Thời gian nghỉ ngơi 5 phút bắt đầu',\n        icon: '/favicon.ico',\n        requireInteraction: true,\n        tag: 'session-complete' // Prevent duplicate notifications\n      });\n\n      // Focus tab when notification is clicked\n      notification.onclick = () => {\n        TabFocusManager.focusTab();\n        notification.close();\n      };\n    }\n\n    // Vibrate if supported (mobile devices)\n    if (navigator.vibrate) {\n      navigator.vibrate([200, 100, 200, 100, 400]);\n    }\n\n    // Auto transition to break after 3 seconds\n    setTimeout(() => {\n      setShowTransition(false);\n      setIsBreakTime(true);\n      setBreakTimeLeft(300);\n    }, 3000);\n  };\n\n  // Effect để xử lý khi work session kết thúc (countdown mode only)\n  useEffect(() => {\n    if (!isBreakTime && !isFreeMode && timeLeft <= 0 && !showTransition) {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n      showSessionEndNotification();\n    }\n  }, [timeLeft, isBreakTime, isFreeMode, showTransition]);\n\n  // Effect để xử lý khi break time kết thúc\n  useEffect(() => {\n    if (isBreakTime && breakTimeLeft <= 0) {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n\n      // Focus tab when break ends\n      TabFocusManager.focusTab();\n\n      // Play notification sound 2 times for break end\n      const playBreakEndSound = async () => {\n        try {\n          if (playNotificationRef.current) {\n            await playNotificationRef.current(2, 300);\n          }\n        } catch (error) {\n          console.warn('Failed to play break end notification:', error);\n        }\n      };\n      playBreakEndSound();\n\n      // Show browser notification\n      if (Notification.permission === 'granted') {\n        const notification = new Notification('⏰ Hết giờ nghỉ!', {\n          body: 'Sẵn sàng cho phiên làm việc tiếp theo?',\n          icon: '/favicon.ico',\n          requireInteraction: true,\n          tag: 'break-complete'\n        });\n\n        // Focus tab when notification is clicked\n        notification.onclick = () => {\n          TabFocusManager.focusTab();\n          notification.close();\n        };\n      }\n\n      // Vibrate if supported\n      if (navigator.vibrate) {\n        navigator.vibrate([300, 100, 300]);\n      }\n\n      // Return to home view and save the session\n      const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\n      onSessionEnd(actualWorkTime);\n    }\n  }, [breakTimeLeft, isBreakTime, onSessionEnd, session.duration, isFreeMode, timeElapsed]);\n\n  // Request notification permission on component mount\n  useEffect(() => {\n    if (Notification.permission === 'default') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          new Notification('🎯 DeepWork sẵn sàng!', {\n            body: 'Bạn sẽ nhận được thông báo khi phiên làm việc kết thúc',\n            icon: '/favicon.ico'\n          });\n        }\n      });\n    }\n  }, []);\n  const handleFinishFreeMode = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    showSessionEndNotification();\n  };\n  const handleSkipBreak = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    // Restore title before ending\n    TabFocusManager.restoreTitle();\n\n    // BUGFIX: Đảm bảo UI không bị đóng băng khi đang xử lý\n    const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\n\n    // Thêm thông báo visual để người dùng biết đang xử lý\n    if (typeof window !== 'undefined') {\n      const processingDiv = document.createElement('div');\n      processingDiv.id = 'processing-overlay';\n      processingDiv.style.cssText = 'position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.7);z-index:9999;display:flex;align-items:center;justify-content:center;';\n      processingDiv.innerHTML = '<div style=\"background:white;border-radius:8px;padding:16px;box-shadow:0 4px 12px rgba(0,0,0,0.2);\"><div style=\"display:flex;align-items:center;\"><div style=\"border:3px solid #eee;border-top:3px solid #3498db;border-radius:50%;width:24px;height:24px;margin-right:12px;animation:spin 1s linear infinite;\"></div><span style=\"font-weight:500;color:#333;\">Đang lưu kết quả...</span></div></div>';\n\n      // Add spinning animation\n      const style = document.createElement('style');\n      style.innerHTML = '@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }';\n      document.head.appendChild(style);\n      document.body.appendChild(processingDiv);\n\n      // Remove after a short delay\n      setTimeout(() => {\n        if (document.body.contains(processingDiv)) {\n          document.body.removeChild(processingDiv);\n        }\n        if (document.head.contains(style)) {\n          document.head.removeChild(style);\n        }\n      }, 2000);\n    }\n\n    // Gọi hàm kết thúc session\n    onSessionEnd(actualWorkTime);\n  };\n  const handleSkipTransition = () => {\n    setShowTransition(false);\n    setIsBreakTime(true);\n    setBreakTimeLeft(300);\n  };\n  const handleStop = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    // Restore title before stopping\n    TabFocusManager.restoreTitle();\n    onStop();\n  };\n  const progress = isBreakTime ? (300 - breakTimeLeft) / 300 * 100 : isFreeMode ? Math.min(timeElapsed / 1800 * 100, 100) // Cap at 30 minutes for visual purposes\n  : (session.duration - timeLeft) / session.duration * 100;\n  const currentTime = isBreakTime ? breakTimeLeft : isFreeMode ? timeElapsed : timeLeft;\n  const bgColor = isBreakTime ? 'bg-green-900' : isFreeMode ? 'bg-purple-900' : 'bg-slate-900';\n  const progressColor = isBreakTime ? 'bg-green-400' : isFreeMode ? 'bg-purple-400' : 'bg-blue-500';\n  const progressBg = isBreakTime ? 'bg-green-700' : isFreeMode ? 'bg-purple-700' : 'bg-slate-700';\n  const buttonBg = isBreakTime ? 'bg-green-800' : isFreeMode ? 'bg-purple-800' : 'bg-slate-800';\n  const textColor = isBreakTime ? 'text-green-300' : isFreeMode ? 'text-purple-300' : 'text-slate-300';\n\n  // Transition screen when session ends\n  if (showTransition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center w-full h-full bg-gradient-to-br from-green-900 to-blue-900 text-white p-6 animate-pulse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-9xl mb-8 animate-bounce\",\n        children: \"\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-4 text-center\",\n        children: \"Tuy\\u1EC7t v\\u1EDDi!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-center mb-4 text-green-300\",\n        children: \"B\\u1EA1n \\u0111\\xE3 ho\\xE0n th\\xE0nh phi\\xEAn l\\xE0m vi\\u1EC7c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-center mb-6 text-yellow-300\",\n        children: \"\\u2728 Tab \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c t\\u1EF1 \\u0111\\u1ED9ng focus \\u0111\\u1EC3 th\\xF4ng b\\xE1o cho b\\u1EA1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this), isPlayingSound && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-center mb-6 text-yellow-300 animate-pulse\",\n        children: \"\\uD83D\\uDD0A \\u0110ang ph\\xE1t \\xE2m thanh th\\xF4ng b\\xE1o...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl font-bold mb-8 text-yellow-300\",\n        children: formatTimer(isFreeMode ? timeElapsed : session.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-center mb-8 text-blue-200\",\n        children: \"Chu\\u1EA9n b\\u1ECB ngh\\u1EC9 ng\\u01A1i 5 ph\\xFAt...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSkipTransition,\n        className: \"px-6 py-3 bg-white text-green-900 font-semibold rounded-lg hover:bg-gray-100 transition-colors\",\n        disabled: isPlayingSound,\n        children: isPlayingSound ? '🔊 Đang phát âm thanh...' : '⏭️ Bỏ qua'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center w-full h-full ${bgColor} text-white p-6`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-full h-1 ${progressBg} fixed top-0 left-0`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-1 ${progressColor} transition-all duration-1000 ease-out`,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this), isBreakTime ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-8xl mb-6 animate-bounce\",\n        children: \"\\u2615\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-xl font-semibold ${textColor} mb-4 text-center`,\n        children: \"Th\\u1EDDi gian ngh\\u1EC9 ng\\u01A1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-8xl font-extrabold tracking-tighter mb-8\",\n        children: formatTimer(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${textColor} text-center mb-12 max-w-md`,\n        children: \"H\\xE3y th\\u01B0 gi\\xE3n, u\\u1ED1ng n\\u01B0\\u1EDBc, ho\\u1EB7c l\\xE0m c\\xE1c b\\xE0i t\\u1EADp nh\\u1EB9 nh\\xE0ng \\u0111\\u1EC3 ph\\u1EE5c h\\u1ED3i n\\u0103ng l\\u01B0\\u1EE3ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isFreeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl mb-4\",\n        children: \"\\u23F1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-xl font-semibold ${textColor} mb-4 text-center`,\n        children: [session.task.name, isFreeMode && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block text-sm mt-1\",\n          children: \"Ch\\u1EBF \\u0111\\u1ED9 t\\u1EF1 do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-8xl font-extrabold tracking-tighter\",\n        children: formatTimer(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-10 flex space-x-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPaused(!isPaused),\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        disabled: showTransition || isPlayingSound,\n        children: isPaused ? '▶️ Tiếp tục' : '⏸️ Tạm dừng'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), isBreakTime ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSkipBreak,\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        children: \"\\u23ED\\uFE0F B\\u1ECF qua ngh\\u1EC9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 21\n      }, this) : isFreeMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinishFreeMode,\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        disabled: showTransition || isPlayingSound,\n        children: \"\\u2705 K\\u1EBFt th\\xFAc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        disabled: showTransition || isPlayingSound,\n        children: \"\\u23F9\\uFE0F D\\u1EEBng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 9\n  }, this);\n};\n_s(FocusView, \"lz9w9V66PRAHJtgoemqL6MyjHUY=\");\n_c = FocusView;\nexport default FocusView;\nvar _c;\n$RefreshReg$(_c, \"FocusView\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","formatTimer","seconds","m","Math","floor","toString","padStart","s","createNotificationSound","playNotificationSound","times","interval","i","audio","Audio","volume","playPromise","Promise","resolve","reject","onended","onerror","oncanplaythrough","play","catch","load","setTimeout","error","console","warn","log","TabFocusManager","originalTitle","document","title","focusTab","window","focus","parent","blinkCount","blinkInterval","setInterval","clearInterval","restoreTitle","setupVisibilityListener","handleVisibilityChange","hidden","addEventListener","removeEventListener","FocusView","session","onSessionEnd","onStop","_s","isFreeMode","duration","timeLeft","setTimeLeft","timeElapsed","setTimeElapsed","isPaused","setIsPaused","isBreakTime","setIsBreakTime","breakTimeLeft","setBreakTimeLeft","showTransition","setShowTransition","isPlayingSound","setIsPlayingSound","timerRef","playNotificationRef","cleanupVisibilityListenerRef","current","prev","showSessionEndNotification","Notification","permission","notification","body","icon","requireInteraction","tag","onclick","close","navigator","vibrate","playBreakEndSound","actualWorkTime","requestPermission","then","handleFinishFreeMode","handleSkipBreak","processingDiv","createElement","id","style","cssText","innerHTML","head","appendChild","contains","removeChild","handleSkipTransition","handleStop","progress","min","currentTime","bgColor","progressColor","progressBg","buttonBg","textColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","width","task","name","_c","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/components/FocusView.js"],"sourcesContent":["// src/components/FocusView.jsx\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\nconst formatTimer = (seconds) => {\r\n    const m = Math.floor(seconds / 60).toString().padStart(2, '0');\r\n    const s = (seconds % 60).toString().padStart(2, '0');\r\n    return `${m}:${s}`;\r\n};\r\n\r\n// Create notification sound player using HTML5 Audio\r\nconst createNotificationSound = () => {\r\n    try {\r\n        // Function to play notification sound multiple times\r\n        const playNotificationSound = async (times = 3, interval = 500) => {\r\n            for (let i = 0; i < times; i++) {\r\n                try {\r\n                    const audio = new Audio('/noti.mp3');\r\n                    audio.volume = 0.7; // Set volume to 70%\r\n                    \r\n                    // Create promise to wait for audio to finish\r\n                    const playPromise = new Promise((resolve, reject) => {\r\n                        audio.onended = resolve;\r\n                        audio.onerror = reject;\r\n                        audio.oncanplaythrough = () => {\r\n                            audio.play().catch(reject);\r\n                        };\r\n                    });\r\n                    \r\n                    // Load and play audio\r\n                    audio.load();\r\n                    await playPromise;\r\n                    \r\n                    // Wait before playing next sound (except for last iteration)\r\n                    if (i < times - 1) {\r\n                        await new Promise(resolve => setTimeout(resolve, interval));\r\n                    }\r\n                } catch (error) {\r\n                    console.warn(`Failed to play notification sound ${i + 1}:`, error);\r\n                    // Continue with next iteration even if one fails\r\n                }\r\n            }\r\n        };\r\n        \r\n        return playNotificationSound;\r\n    } catch (error) {\r\n        console.log('Audio not supported:', error);\r\n        return () => Promise.resolve(); // Return empty async function if audio not supported\r\n    }\r\n};\r\n\r\n// Tab focus management utility\r\nconst TabFocusManager = {\r\n    // Store original title to restore later\r\n    originalTitle: document.title,\r\n    \r\n    // Focus tab with visual indicators\r\n    focusTab: () => {\r\n        try {\r\n            // Change document title to grab attention\r\n            document.title = '🎉 DeepWork - Phiên hoàn thành!';\r\n            \r\n            // Focus the window if possible\r\n            if (window.focus) {\r\n                window.focus();\r\n            }\r\n            \r\n            // Try to bring tab to front (limited by browser security)\r\n            if (window.parent && window.parent.focus) {\r\n                window.parent.focus();\r\n            }\r\n            \r\n            // Flash the page title for attention (blinking effect)\r\n            let blinkCount = 0;\r\n            const blinkInterval = setInterval(() => {\r\n                document.title = blinkCount % 2 === 0 \r\n                    ? '🎉 DeepWork - Phiên hoàn thành!' \r\n                    : '⭐ Quay lại để xem kết quả!';\r\n                blinkCount++;\r\n                \r\n                if (blinkCount >= 10) { // Blink 5 times\r\n                    clearInterval(blinkInterval);\r\n                    document.title = '🎉 DeepWork - Phiên hoàn thành!';\r\n                }\r\n            }, 1000);\r\n            \r\n            console.log('Tab focus requested - title changed and window focused');\r\n        } catch (error) {\r\n            console.warn('Could not fully focus tab:', error);\r\n        }\r\n    },\r\n    \r\n    // Restore original title when user returns\r\n    restoreTitle: () => {\r\n        try {\r\n            document.title = TabFocusManager.originalTitle;\r\n        } catch (error) {\r\n            console.warn('Could not restore title:', error);\r\n        }\r\n    },\r\n    \r\n    // Setup visibility change listener\r\n    setupVisibilityListener: () => {\r\n        const handleVisibilityChange = () => {\r\n            if (!document.hidden) {\r\n                // User returned to tab, restore original title\r\n                TabFocusManager.restoreTitle();\r\n            }\r\n        };\r\n        \r\n        // Listen for tab becoming visible\r\n        document.addEventListener('visibilitychange', handleVisibilityChange);\r\n        \r\n        // Listen for window focus\r\n        window.addEventListener('focus', TabFocusManager.restoreTitle);\r\n        \r\n        // Cleanup function\r\n        return () => {\r\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n            window.removeEventListener('focus', TabFocusManager.restoreTitle);\r\n        };\r\n    }\r\n};\r\n\r\nconst FocusView = ({ session, onSessionEnd, onStop }) => {\r\n    const isFreeMode = session.duration === 0;\r\n    const [timeLeft, setTimeLeft] = useState(session.duration);\r\n    const [timeElapsed, setTimeElapsed] = useState(0); // For free mode\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const [isBreakTime, setIsBreakTime] = useState(false);\r\n    const [breakTimeLeft, setBreakTimeLeft] = useState(300); // 5 minutes = 300 seconds\r\n    const [showTransition, setShowTransition] = useState(false);\r\n    const [isPlayingSound, setIsPlayingSound] = useState(false);\r\n    const timerRef = useRef(null);\r\n    const playNotificationRef = useRef(null);\r\n    const cleanupVisibilityListenerRef = useRef(null);\r\n    \r\n    // Initialize notification sound and tab focus management\r\n    useEffect(() => {\r\n        playNotificationRef.current = createNotificationSound();\r\n        \r\n        // Setup visibility change listener\r\n        cleanupVisibilityListenerRef.current = TabFocusManager.setupVisibilityListener();\r\n        \r\n        return () => {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n            \r\n            // Cleanup visibility listener\r\n            if (cleanupVisibilityListenerRef.current) {\r\n                cleanupVisibilityListenerRef.current();\r\n            }\r\n            \r\n            // Restore original title when component unmounts\r\n            TabFocusManager.restoreTitle();\r\n        };\r\n    }, []);\r\n\r\n    // Timer effect for work session (both countdown and count up)\r\n    useEffect(() => {\r\n        if (!isBreakTime && !isPaused && !showTransition) {\r\n            if (isFreeMode) {\r\n                // Count up mode\r\n                timerRef.current = setInterval(() => {\r\n                    setTimeElapsed(prev => prev + 1);\r\n                }, 1000);\r\n            } else {\r\n                // Count down mode\r\n                if (timeLeft > 0) {\r\n                    timerRef.current = setInterval(() => {\r\n                        setTimeLeft(prev => {\r\n                            if (prev <= 1) {\r\n                                return 0;\r\n                            }\r\n                            return prev - 1;\r\n                        });\r\n                    }, 1000);\r\n                }\r\n            }\r\n        } else {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        };\r\n    }, [isPaused, timeLeft, isBreakTime, isFreeMode, showTransition]);\r\n\r\n    // Timer effect for break session\r\n    useEffect(() => {\r\n        if (isBreakTime && !isPaused && breakTimeLeft > 0) {\r\n            timerRef.current = setInterval(() => {\r\n                setBreakTimeLeft(prev => {\r\n                    if (prev <= 1) {\r\n                        return 0;\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n        } else if (isBreakTime) {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        };\r\n    }, [isPaused, breakTimeLeft, isBreakTime]);\r\n\r\n    // Show transition animation and notifications\r\n    const showSessionEndNotification = async () => {\r\n        // Show transition screen\r\n        setShowTransition(true);\r\n        setIsPlayingSound(true);\r\n        \r\n        // Focus tab immediately when session ends\r\n        TabFocusManager.focusTab();\r\n        \r\n        try {\r\n            // Play notification sound 3 times with 500ms interval\r\n            if (playNotificationRef.current) {\r\n                await playNotificationRef.current(3, 500);\r\n            }\r\n        } catch (error) {\r\n            console.warn('Failed to play notification sounds:', error);\r\n        } finally {\r\n            setIsPlayingSound(false);\r\n        }\r\n        \r\n        // Show browser notification if permission granted\r\n        if (Notification.permission === 'granted') {\r\n            const notification = new Notification('🎉 Phiên làm việc hoàn thành!', {\r\n                body: 'Thời gian nghỉ ngơi 5 phút bắt đầu',\r\n                icon: '/favicon.ico',\r\n                requireInteraction: true,\r\n                tag: 'session-complete' // Prevent duplicate notifications\r\n            });\r\n            \r\n            // Focus tab when notification is clicked\r\n            notification.onclick = () => {\r\n                TabFocusManager.focusTab();\r\n                notification.close();\r\n            };\r\n        }\r\n        \r\n        // Vibrate if supported (mobile devices)\r\n        if (navigator.vibrate) {\r\n            navigator.vibrate([200, 100, 200, 100, 400]);\r\n        }\r\n        \r\n        // Auto transition to break after 3 seconds\r\n        setTimeout(() => {\r\n            setShowTransition(false);\r\n            setIsBreakTime(true);\r\n            setBreakTimeLeft(300);\r\n        }, 3000);\r\n    };\r\n\r\n    // Effect để xử lý khi work session kết thúc (countdown mode only)\r\n    useEffect(() => {\r\n        if (!isBreakTime && !isFreeMode && timeLeft <= 0 && !showTransition) {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n            showSessionEndNotification();\r\n        }\r\n    }, [timeLeft, isBreakTime, isFreeMode, showTransition]);\r\n\r\n    // Effect để xử lý khi break time kết thúc\r\n    useEffect(() => {\r\n        if (isBreakTime && breakTimeLeft <= 0) {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n            \r\n            // Focus tab when break ends\r\n            TabFocusManager.focusTab();\r\n            \r\n            // Play notification sound 2 times for break end\r\n            const playBreakEndSound = async () => {\r\n                try {\r\n                    if (playNotificationRef.current) {\r\n                        await playNotificationRef.current(2, 300);\r\n                    }\r\n                } catch (error) {\r\n                    console.warn('Failed to play break end notification:', error);\r\n                }\r\n            };\r\n            \r\n            playBreakEndSound();\r\n            \r\n            // Show browser notification\r\n            if (Notification.permission === 'granted') {\r\n                const notification = new Notification('⏰ Hết giờ nghỉ!', {\r\n                    body: 'Sẵn sàng cho phiên làm việc tiếp theo?',\r\n                    icon: '/favicon.ico',\r\n                    requireInteraction: true,\r\n                    tag: 'break-complete'\r\n                });\r\n                \r\n                // Focus tab when notification is clicked\r\n                notification.onclick = () => {\r\n                    TabFocusManager.focusTab();\r\n                    notification.close();\r\n                };\r\n            }\r\n            \r\n            // Vibrate if supported\r\n            if (navigator.vibrate) {\r\n                navigator.vibrate([300, 100, 300]);\r\n            }\r\n            \r\n            // Return to home view and save the session\r\n            const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\r\n            onSessionEnd(actualWorkTime);\r\n        }\r\n    }, [breakTimeLeft, isBreakTime, onSessionEnd, session.duration, isFreeMode, timeElapsed]);\r\n\r\n    // Request notification permission on component mount\r\n    useEffect(() => {\r\n        if (Notification.permission === 'default') {\r\n            Notification.requestPermission().then(permission => {\r\n                if (permission === 'granted') {\r\n                    new Notification('🎯 DeepWork sẵn sàng!', {\r\n                        body: 'Bạn sẽ nhận được thông báo khi phiên làm việc kết thúc',\r\n                        icon: '/favicon.ico'\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const handleFinishFreeMode = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n        }\r\n        showSessionEndNotification();\r\n    };\r\n\r\n    const handleSkipBreak = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n        }\r\n        \r\n        // Restore title before ending\r\n        TabFocusManager.restoreTitle();\r\n        \r\n        // BUGFIX: Đảm bảo UI không bị đóng băng khi đang xử lý\r\n        const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\r\n        \r\n        // Thêm thông báo visual để người dùng biết đang xử lý\r\n        if (typeof window !== 'undefined') {\r\n            const processingDiv = document.createElement('div');\r\n            processingDiv.id = 'processing-overlay';\r\n            processingDiv.style.cssText = 'position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.7);z-index:9999;display:flex;align-items:center;justify-content:center;';\r\n            processingDiv.innerHTML = '<div style=\"background:white;border-radius:8px;padding:16px;box-shadow:0 4px 12px rgba(0,0,0,0.2);\"><div style=\"display:flex;align-items:center;\"><div style=\"border:3px solid #eee;border-top:3px solid #3498db;border-radius:50%;width:24px;height:24px;margin-right:12px;animation:spin 1s linear infinite;\"></div><span style=\"font-weight:500;color:#333;\">Đang lưu kết quả...</span></div></div>';\r\n            \r\n            // Add spinning animation\r\n            const style = document.createElement('style');\r\n            style.innerHTML = '@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }';\r\n            document.head.appendChild(style);\r\n            document.body.appendChild(processingDiv);\r\n            \r\n            // Remove after a short delay\r\n            setTimeout(() => {\r\n                if (document.body.contains(processingDiv)) {\r\n                    document.body.removeChild(processingDiv);\r\n                }\r\n                if (document.head.contains(style)) {\r\n                    document.head.removeChild(style);\r\n                }\r\n            }, 2000);\r\n        }\r\n        \r\n        // Gọi hàm kết thúc session\r\n        onSessionEnd(actualWorkTime);\r\n    };\r\n\r\n    const handleSkipTransition = () => {\r\n        setShowTransition(false);\r\n        setIsBreakTime(true);\r\n        setBreakTimeLeft(300);\r\n    };\r\n\r\n    const handleStop = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n        }\r\n        // Restore title before stopping\r\n        TabFocusManager.restoreTitle();\r\n        onStop();\r\n    };\r\n    \r\n    const progress = isBreakTime \r\n        ? ((300 - breakTimeLeft) / 300) * 100 \r\n        : (isFreeMode \r\n            ? Math.min((timeElapsed / 1800) * 100, 100) // Cap at 30 minutes for visual purposes\r\n            : ((session.duration - timeLeft) / session.duration) * 100);\r\n\r\n    const currentTime = isBreakTime \r\n        ? breakTimeLeft \r\n        : (isFreeMode ? timeElapsed : timeLeft);\r\n    \r\n    const bgColor = isBreakTime ? 'bg-green-900' : (isFreeMode ? 'bg-purple-900' : 'bg-slate-900');\r\n    const progressColor = isBreakTime ? 'bg-green-400' : (isFreeMode ? 'bg-purple-400' : 'bg-blue-500');\r\n    const progressBg = isBreakTime ? 'bg-green-700' : (isFreeMode ? 'bg-purple-700' : 'bg-slate-700');\r\n    const buttonBg = isBreakTime ? 'bg-green-800' : (isFreeMode ? 'bg-purple-800' : 'bg-slate-800');\r\n    const textColor = isBreakTime ? 'text-green-300' : (isFreeMode ? 'text-purple-300' : 'text-slate-300');\r\n\r\n    // Transition screen when session ends\r\n    if (showTransition) {\r\n        return (\r\n            <div className=\"flex flex-col items-center justify-center w-full h-full bg-gradient-to-br from-green-900 to-blue-900 text-white p-6 animate-pulse\">\r\n                <div className=\"text-9xl mb-8 animate-bounce\">🎉</div>\r\n                <h1 className=\"text-4xl font-bold mb-4 text-center\">Tuyệt vời!</h1>\r\n                <p className=\"text-xl text-center mb-4 text-green-300\">\r\n                    Bạn đã hoàn thành phiên làm việc\r\n                </p>\r\n                <p className=\"text-sm text-center mb-6 text-yellow-300\">\r\n                    ✨ Tab đã được tự động focus để thông báo cho bạn\r\n                </p>\r\n                {isPlayingSound && (\r\n                    <p className=\"text-sm text-center mb-6 text-yellow-300 animate-pulse\">\r\n                        🔊 Đang phát âm thanh thông báo...\r\n                    </p>\r\n                )}\r\n                <div className=\"text-6xl font-bold mb-8 text-yellow-300\">\r\n                    {formatTimer(isFreeMode ? timeElapsed : session.duration)}\r\n                </div>\r\n                <p className=\"text-lg text-center mb-8 text-blue-200\">\r\n                    Chuẩn bị nghỉ ngơi 5 phút...\r\n                </p>\r\n                <button \r\n                    onClick={handleSkipTransition}\r\n                    className=\"px-6 py-3 bg-white text-green-900 font-semibold rounded-lg hover:bg-gray-100 transition-colors\"\r\n                    disabled={isPlayingSound}\r\n                >\r\n                    {isPlayingSound ? '🔊 Đang phát âm thanh...' : '⏭️ Bỏ qua'}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={`flex flex-col items-center justify-center w-full h-full ${bgColor} text-white p-6`}>\r\n            <div className={`w-full h-1 ${progressBg} fixed top-0 left-0`}>\r\n                <div className={`h-1 ${progressColor} transition-all duration-1000 ease-out`} style={{ width: `${progress}%` }}></div>\r\n            </div>\r\n            \r\n            {isBreakTime ? (\r\n                <>\r\n                    <div className=\"text-8xl mb-6 animate-bounce\">☕</div>\r\n                    <p className={`text-xl font-semibold ${textColor} mb-4 text-center`}>\r\n                        Thời gian nghỉ ngơi\r\n                    </p>\r\n                    <h2 className=\"text-8xl font-extrabold tracking-tighter mb-8\">\r\n                        {formatTimer(currentTime)}\r\n                    </h2>\r\n                    <p className={`${textColor} text-center mb-12 max-w-md`}>\r\n                        Hãy thư giãn, uống nước, hoặc làm các bài tập nhẹ nhàng để phục hồi năng lượng\r\n                    </p>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {isFreeMode && (\r\n                        <div className=\"text-6xl mb-4\">⏱️</div>\r\n                    )}\r\n                    <p className={`text-xl font-semibold ${textColor} mb-4 text-center`}>\r\n                        {session.task.name}\r\n                        {isFreeMode && <span className=\"block text-sm mt-1\">Chế độ tự do</span>}\r\n                    </p>\r\n                    <h2 className=\"text-8xl font-extrabold tracking-tighter\">\r\n                        {formatTimer(currentTime)}\r\n                    </h2>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"fixed bottom-10 flex space-x-6\">\r\n                <button \r\n                    onClick={() => setIsPaused(!isPaused)} \r\n                    className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                    disabled={showTransition || isPlayingSound}\r\n                >\r\n                    {isPaused ? '▶️ Tiếp tục' : '⏸️ Tạm dừng'}\r\n                </button>\r\n                \r\n                {isBreakTime ? (\r\n                    <button \r\n                        onClick={handleSkipBreak} \r\n                        className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                    >\r\n                        ⏭️ Bỏ qua nghỉ\r\n                    </button>\r\n                ) : isFreeMode ? (\r\n                    <button \r\n                        onClick={handleFinishFreeMode} \r\n                        className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                        disabled={showTransition || isPlayingSound}\r\n                    >\r\n                        ✅ Kết thúc\r\n                    </button>\r\n                ) : (\r\n                    <button \r\n                        onClick={handleStop} \r\n                        className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                        disabled={showTransition || isPlayingSound}\r\n                    >\r\n                        ⏹️ Dừng\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FocusView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}