{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\components\\\\FocusView.js\",\n  _s = $RefreshSig$();\n// src/components/FocusView.jsx\n\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatTimer = seconds => {\n  const m = Math.floor(seconds / 60).toString().padStart(2, '0');\n  const s = (seconds % 60).toString().padStart(2, '0');\n  return `${m}:${s}`;\n};\n\n// Create notification sound using Web Audio API\nconst createNotificationSound = () => {\n  try {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const playBeep = (frequency = 800, duration = 400, startTime = 0) => {\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n      oscillator.frequency.value = frequency;\n      oscillator.type = 'sine';\n\n      // Smooth attack and release for better sound quality\n      const currentTime = audioContext.currentTime + startTime;\n      gainNode.gain.setValueAtTime(0, currentTime);\n      gainNode.gain.linearRampToValueAtTime(0.3, currentTime + 0.1);\n      gainNode.gain.linearRampToValueAtTime(0.3, currentTime + duration / 1000 - 0.1);\n      gainNode.gain.linearRampToValueAtTime(0, currentTime + duration / 1000);\n      oscillator.start(currentTime);\n      oscillator.stop(currentTime + duration / 1000);\n    };\n    const playNotificationSound = () => {\n      // Play a 2-second notification sequence\n      // First tone: E note (659 Hz) - 0.4s\n      playBeep(659, 400, 0);\n\n      // Second tone: C note (523 Hz) - 0.4s\n      playBeep(523, 400, 0.5);\n\n      // Third tone: G note (784 Hz) - 0.4s  \n      playBeep(784, 400, 1.0);\n\n      // Fourth tone: E note (659 Hz) - 0.8s (longer final note)\n      playBeep(659, 800, 1.5);\n    };\n    return playNotificationSound;\n  } catch (error) {\n    console.log('Web Audio API not supported:', error);\n    return () => {}; // Return empty function if audio not supported\n  }\n};\nconst FocusView = ({\n  session,\n  onSessionEnd,\n  onStop\n}) => {\n  _s();\n  const isFreeMode = session.duration === 0;\n  const [timeLeft, setTimeLeft] = useState(session.duration);\n  const [timeElapsed, setTimeElapsed] = useState(0); // For free mode\n  const [isPaused, setIsPaused] = useState(false);\n  const [isBreakTime, setIsBreakTime] = useState(false);\n  const [breakTimeLeft, setBreakTimeLeft] = useState(300); // 5 minutes = 300 seconds\n  const [showTransition, setShowTransition] = useState(false);\n  const timerRef = useRef(null);\n  const playNotificationRef = useRef(null);\n\n  // Initialize notification sound\n  useEffect(() => {\n    playNotificationRef.current = createNotificationSound();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  // Timer effect for work session (both countdown and count up)\n  useEffect(() => {\n    if (!isBreakTime && !isPaused && !showTransition) {\n      if (isFreeMode) {\n        // Count up mode\n        timerRef.current = setInterval(() => {\n          setTimeElapsed(prev => prev + 1);\n        }, 1000);\n      } else {\n        // Count down mode\n        if (timeLeft > 0) {\n          timerRef.current = setInterval(() => {\n            setTimeLeft(prev => {\n              if (prev <= 1) {\n                return 0;\n              }\n              return prev - 1;\n            });\n          }, 1000);\n        }\n      }\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isPaused, timeLeft, isBreakTime, isFreeMode, showTransition]);\n\n  // Timer effect for break session\n  useEffect(() => {\n    if (isBreakTime && !isPaused && breakTimeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setBreakTimeLeft(prev => {\n          if (prev <= 1) {\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (isBreakTime) {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isPaused, breakTimeLeft, isBreakTime]);\n\n  // Show transition animation and notifications\n  const showSessionEndNotification = () => {\n    // Show transition screen\n    setShowTransition(true);\n\n    // Play notification sound\n    if (playNotificationRef.current) {\n      playNotificationRef.current();\n    }\n\n    // Show browser notification if permission granted\n    if (Notification.permission === 'granted') {\n      new Notification('🎉 Phiên làm việc hoàn thành!', {\n        body: 'Thời gian nghỉ ngơi 5 phút bắt đầu',\n        icon: '/favicon.ico',\n        requireInteraction: true\n      });\n    }\n\n    // Vibrate if supported (mobile devices)\n    if (navigator.vibrate) {\n      navigator.vibrate([200, 100, 200, 100, 400]);\n    }\n\n    // Auto transition to break after 3 seconds\n    setTimeout(() => {\n      setShowTransition(false);\n      setIsBreakTime(true);\n      setBreakTimeLeft(300);\n    }, 3000);\n  };\n\n  // Effect để xử lý khi work session kết thúc (countdown mode only)\n  useEffect(() => {\n    if (!isBreakTime && !isFreeMode && timeLeft <= 0 && !showTransition) {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n      showSessionEndNotification();\n    }\n  }, [timeLeft, isBreakTime, isFreeMode, showTransition]);\n\n  // Effect để xử lý khi break time kết thúc\n  useEffect(() => {\n    if (isBreakTime && breakTimeLeft <= 0) {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n\n      // Play notification sound\n      if (playNotificationRef.current) {\n        playNotificationRef.current();\n      }\n\n      // Show browser notification\n      if (Notification.permission === 'granted') {\n        new Notification('⏰ Hết giờ nghỉ!', {\n          body: 'Sẵn sàng cho phiên làm việc tiếp theo?',\n          icon: '/favicon.ico',\n          requireInteraction: true\n        });\n      }\n\n      // Vibrate if supported\n      if (navigator.vibrate) {\n        navigator.vibrate([300, 100, 300]);\n      }\n\n      // Return to home view and save the session\n      const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\n      onSessionEnd(actualWorkTime);\n    }\n  }, [breakTimeLeft, isBreakTime, onSessionEnd, session.duration, isFreeMode, timeElapsed]);\n\n  // Request notification permission on component mount\n  useEffect(() => {\n    if (Notification.permission === 'default') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          new Notification('🎯 DeepWork sẵn sàng!', {\n            body: 'Bạn sẽ nhận được thông báo khi phiên làm việc kết thúc',\n            icon: '/favicon.ico'\n          });\n        }\n      });\n    }\n  }, []);\n  const handleFinishFreeMode = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    showSessionEndNotification();\n  };\n  const handleSkipBreak = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\n    onSessionEnd(actualWorkTime);\n  };\n  const handleSkipTransition = () => {\n    setShowTransition(false);\n    setIsBreakTime(true);\n    setBreakTimeLeft(300);\n  };\n  const handleStop = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    onStop();\n  };\n  const progress = isBreakTime ? (300 - breakTimeLeft) / 300 * 100 : isFreeMode ? Math.min(timeElapsed / 1800 * 100, 100) // Cap at 30 minutes for visual purposes\n  : (session.duration - timeLeft) / session.duration * 100;\n  const currentTime = isBreakTime ? breakTimeLeft : isFreeMode ? timeElapsed : timeLeft;\n  const bgColor = isBreakTime ? 'bg-green-900' : isFreeMode ? 'bg-purple-900' : 'bg-slate-900';\n  const progressColor = isBreakTime ? 'bg-green-400' : isFreeMode ? 'bg-purple-400' : 'bg-blue-500';\n  const progressBg = isBreakTime ? 'bg-green-700' : isFreeMode ? 'bg-purple-700' : 'bg-slate-700';\n  const buttonBg = isBreakTime ? 'bg-green-800' : isFreeMode ? 'bg-purple-800' : 'bg-slate-800';\n  const textColor = isBreakTime ? 'text-green-300' : isFreeMode ? 'text-purple-300' : 'text-slate-300';\n\n  // Transition screen when session ends\n  if (showTransition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center w-full h-full bg-gradient-to-br from-green-900 to-blue-900 text-white p-6 animate-pulse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-9xl mb-8 animate-bounce\",\n        children: \"\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-4 text-center\",\n        children: \"Tuy\\u1EC7t v\\u1EDDi!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-center mb-8 text-green-300\",\n        children: \"B\\u1EA1n \\u0111\\xE3 ho\\xE0n th\\xE0nh phi\\xEAn l\\xE0m vi\\u1EC7c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl font-bold mb-8 text-yellow-300\",\n        children: formatTimer(isFreeMode ? timeElapsed : session.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-center mb-8 text-blue-200\",\n        children: \"Chu\\u1EA9n b\\u1ECB ngh\\u1EC9 ng\\u01A1i 5 ph\\xFAt...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSkipTransition,\n        className: \"px-6 py-3 bg-white text-green-900 font-semibold rounded-lg hover:bg-gray-100 transition-colors\",\n        children: \"\\u23ED\\uFE0F B\\u1ECF qua\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center w-full h-full ${bgColor} text-white p-6`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-full h-1 ${progressBg} fixed top-0 left-0`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-1 ${progressColor}`,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), isBreakTime ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-8xl mb-6 animate-bounce\",\n        children: \"\\u2615\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-xl font-semibold ${textColor} mb-4 text-center`,\n        children: \"Th\\u1EDDi gian ngh\\u1EC9 ng\\u01A1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-8xl font-extrabold tracking-tighter mb-8\",\n        children: formatTimer(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${textColor} text-center mb-12 max-w-md`,\n        children: \"H\\xE3y th\\u01B0 gi\\xE3n, u\\u1ED1ng n\\u01B0\\u1EDBc, ho\\u1EB7c l\\xE0m c\\xE1c b\\xE0i t\\u1EADp nh\\u1EB9 nh\\xE0ng \\u0111\\u1EC3 ph\\u1EE5c h\\u1ED3i n\\u0103ng l\\u01B0\\u1EE3ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isFreeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl mb-4\",\n        children: \"\\u23F1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-xl font-semibold ${textColor} mb-4 text-center`,\n        children: [session.task.name, isFreeMode && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block text-sm mt-1\",\n          children: \"Ch\\u1EBF \\u0111\\u1ED9 t\\u1EF1 do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-8xl font-extrabold tracking-tighter\",\n        children: formatTimer(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-10 flex space-x-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPaused(!isPaused),\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        disabled: showTransition,\n        children: isPaused ? '▶️ Tiếp tục' : '⏸️ Tạm dừng'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), isBreakTime ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSkipBreak,\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        children: \"\\u23ED\\uFE0F B\\u1ECF qua ngh\\u1EC9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this) : isFreeMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinishFreeMode,\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        disabled: showTransition,\n        children: \"\\u2705 K\\u1EBFt th\\xFAc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        className: `text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`,\n        disabled: showTransition,\n        children: \"\\u23F9\\uFE0F D\\u1EEBng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 9\n  }, this);\n};\n_s(FocusView, \"27NRU2D5I3tqCP8McOziw54XFXg=\");\n_c = FocusView;\nexport default FocusView;\nvar _c;\n$RefreshReg$(_c, \"FocusView\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","formatTimer","seconds","m","Math","floor","toString","padStart","s","createNotificationSound","audioContext","window","AudioContext","webkitAudioContext","playBeep","frequency","duration","startTime","oscillator","createOscillator","gainNode","createGain","connect","destination","value","type","currentTime","gain","setValueAtTime","linearRampToValueAtTime","start","stop","playNotificationSound","error","console","log","FocusView","session","onSessionEnd","onStop","_s","isFreeMode","timeLeft","setTimeLeft","timeElapsed","setTimeElapsed","isPaused","setIsPaused","isBreakTime","setIsBreakTime","breakTimeLeft","setBreakTimeLeft","showTransition","setShowTransition","timerRef","playNotificationRef","current","clearInterval","setInterval","prev","showSessionEndNotification","Notification","permission","body","icon","requireInteraction","navigator","vibrate","setTimeout","actualWorkTime","requestPermission","then","handleFinishFreeMode","handleSkipBreak","handleSkipTransition","handleStop","progress","min","bgColor","progressColor","progressBg","buttonBg","textColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","task","name","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/components/FocusView.js"],"sourcesContent":["// src/components/FocusView.jsx\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\nconst formatTimer = (seconds) => {\r\n    const m = Math.floor(seconds / 60).toString().padStart(2, '0');\r\n    const s = (seconds % 60).toString().padStart(2, '0');\r\n    return `${m}:${s}`;\r\n};\r\n\r\n// Create notification sound using Web Audio API\r\nconst createNotificationSound = () => {\r\n    try {\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        \r\n        const playBeep = (frequency = 800, duration = 400, startTime = 0) => {\r\n            const oscillator = audioContext.createOscillator();\r\n            const gainNode = audioContext.createGain();\r\n            \r\n            oscillator.connect(gainNode);\r\n            gainNode.connect(audioContext.destination);\r\n            \r\n            oscillator.frequency.value = frequency;\r\n            oscillator.type = 'sine';\r\n            \r\n            // Smooth attack and release for better sound quality\r\n            const currentTime = audioContext.currentTime + startTime;\r\n            gainNode.gain.setValueAtTime(0, currentTime);\r\n            gainNode.gain.linearRampToValueAtTime(0.3, currentTime + 0.1);\r\n            gainNode.gain.linearRampToValueAtTime(0.3, currentTime + duration / 1000 - 0.1);\r\n            gainNode.gain.linearRampToValueAtTime(0, currentTime + duration / 1000);\r\n            \r\n            oscillator.start(currentTime);\r\n            oscillator.stop(currentTime + duration / 1000);\r\n        };\r\n        \r\n        const playNotificationSound = () => {\r\n            // Play a 2-second notification sequence\r\n            // First tone: E note (659 Hz) - 0.4s\r\n            playBeep(659, 400, 0);\r\n            \r\n            // Second tone: C note (523 Hz) - 0.4s\r\n            playBeep(523, 400, 0.5);\r\n            \r\n            // Third tone: G note (784 Hz) - 0.4s  \r\n            playBeep(784, 400, 1.0);\r\n            \r\n            // Fourth tone: E note (659 Hz) - 0.8s (longer final note)\r\n            playBeep(659, 800, 1.5);\r\n        };\r\n        \r\n        return playNotificationSound;\r\n    } catch (error) {\r\n        console.log('Web Audio API not supported:', error);\r\n        return () => {}; // Return empty function if audio not supported\r\n    }\r\n};\r\n\r\nconst FocusView = ({ session, onSessionEnd, onStop }) => {\r\n    const isFreeMode = session.duration === 0;\r\n    const [timeLeft, setTimeLeft] = useState(session.duration);\r\n    const [timeElapsed, setTimeElapsed] = useState(0); // For free mode\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const [isBreakTime, setIsBreakTime] = useState(false);\r\n    const [breakTimeLeft, setBreakTimeLeft] = useState(300); // 5 minutes = 300 seconds\r\n    const [showTransition, setShowTransition] = useState(false);\r\n    const timerRef = useRef(null);\r\n    const playNotificationRef = useRef(null);\r\n    \r\n    // Initialize notification sound\r\n    useEffect(() => {\r\n        playNotificationRef.current = createNotificationSound();\r\n        \r\n        return () => {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Timer effect for work session (both countdown and count up)\r\n    useEffect(() => {\r\n        if (!isBreakTime && !isPaused && !showTransition) {\r\n            if (isFreeMode) {\r\n                // Count up mode\r\n                timerRef.current = setInterval(() => {\r\n                    setTimeElapsed(prev => prev + 1);\r\n                }, 1000);\r\n            } else {\r\n                // Count down mode\r\n                if (timeLeft > 0) {\r\n                    timerRef.current = setInterval(() => {\r\n                        setTimeLeft(prev => {\r\n                            if (prev <= 1) {\r\n                                return 0;\r\n                            }\r\n                            return prev - 1;\r\n                        });\r\n                    }, 1000);\r\n                }\r\n            }\r\n        } else {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        };\r\n    }, [isPaused, timeLeft, isBreakTime, isFreeMode, showTransition]);\r\n\r\n    // Timer effect for break session\r\n    useEffect(() => {\r\n        if (isBreakTime && !isPaused && breakTimeLeft > 0) {\r\n            timerRef.current = setInterval(() => {\r\n                setBreakTimeLeft(prev => {\r\n                    if (prev <= 1) {\r\n                        return 0;\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n        } else if (isBreakTime) {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n        };\r\n    }, [isPaused, breakTimeLeft, isBreakTime]);\r\n\r\n    // Show transition animation and notifications\r\n    const showSessionEndNotification = () => {\r\n        // Show transition screen\r\n        setShowTransition(true);\r\n        \r\n        // Play notification sound\r\n        if (playNotificationRef.current) {\r\n            playNotificationRef.current();\r\n        }\r\n        \r\n        // Show browser notification if permission granted\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('🎉 Phiên làm việc hoàn thành!', {\r\n                body: 'Thời gian nghỉ ngơi 5 phút bắt đầu',\r\n                icon: '/favicon.ico',\r\n                requireInteraction: true\r\n            });\r\n        }\r\n        \r\n        // Vibrate if supported (mobile devices)\r\n        if (navigator.vibrate) {\r\n            navigator.vibrate([200, 100, 200, 100, 400]);\r\n        }\r\n        \r\n        // Auto transition to break after 3 seconds\r\n        setTimeout(() => {\r\n            setShowTransition(false);\r\n            setIsBreakTime(true);\r\n            setBreakTimeLeft(300);\r\n        }, 3000);\r\n    };\r\n\r\n    // Effect để xử lý khi work session kết thúc (countdown mode only)\r\n    useEffect(() => {\r\n        if (!isBreakTime && !isFreeMode && timeLeft <= 0 && !showTransition) {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n            showSessionEndNotification();\r\n        }\r\n    }, [timeLeft, isBreakTime, isFreeMode, showTransition]);\r\n\r\n    // Effect để xử lý khi break time kết thúc\r\n    useEffect(() => {\r\n        if (isBreakTime && breakTimeLeft <= 0) {\r\n            if (timerRef.current) {\r\n                clearInterval(timerRef.current);\r\n            }\r\n            \r\n            // Play notification sound\r\n            if (playNotificationRef.current) {\r\n                playNotificationRef.current();\r\n            }\r\n            \r\n            // Show browser notification\r\n            if (Notification.permission === 'granted') {\r\n                new Notification('⏰ Hết giờ nghỉ!', {\r\n                    body: 'Sẵn sàng cho phiên làm việc tiếp theo?',\r\n                    icon: '/favicon.ico',\r\n                    requireInteraction: true\r\n                });\r\n            }\r\n            \r\n            // Vibrate if supported\r\n            if (navigator.vibrate) {\r\n                navigator.vibrate([300, 100, 300]);\r\n            }\r\n            \r\n            // Return to home view and save the session\r\n            const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\r\n            onSessionEnd(actualWorkTime);\r\n        }\r\n    }, [breakTimeLeft, isBreakTime, onSessionEnd, session.duration, isFreeMode, timeElapsed]);\r\n\r\n    // Request notification permission on component mount\r\n    useEffect(() => {\r\n        if (Notification.permission === 'default') {\r\n            Notification.requestPermission().then(permission => {\r\n                if (permission === 'granted') {\r\n                    new Notification('🎯 DeepWork sẵn sàng!', {\r\n                        body: 'Bạn sẽ nhận được thông báo khi phiên làm việc kết thúc',\r\n                        icon: '/favicon.ico'\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const handleFinishFreeMode = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n        }\r\n        showSessionEndNotification();\r\n    };\r\n\r\n    const handleSkipBreak = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n        }\r\n        const actualWorkTime = isFreeMode ? timeElapsed : session.duration;\r\n        onSessionEnd(actualWorkTime);\r\n    };\r\n\r\n    const handleSkipTransition = () => {\r\n        setShowTransition(false);\r\n        setIsBreakTime(true);\r\n        setBreakTimeLeft(300);\r\n    };\r\n\r\n    const handleStop = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n        }\r\n        onStop();\r\n    };\r\n    \r\n    const progress = isBreakTime \r\n        ? ((300 - breakTimeLeft) / 300) * 100 \r\n        : (isFreeMode \r\n            ? Math.min((timeElapsed / 1800) * 100, 100) // Cap at 30 minutes for visual purposes\r\n            : ((session.duration - timeLeft) / session.duration) * 100);\r\n\r\n    const currentTime = isBreakTime \r\n        ? breakTimeLeft \r\n        : (isFreeMode ? timeElapsed : timeLeft);\r\n    \r\n    const bgColor = isBreakTime ? 'bg-green-900' : (isFreeMode ? 'bg-purple-900' : 'bg-slate-900');\r\n    const progressColor = isBreakTime ? 'bg-green-400' : (isFreeMode ? 'bg-purple-400' : 'bg-blue-500');\r\n    const progressBg = isBreakTime ? 'bg-green-700' : (isFreeMode ? 'bg-purple-700' : 'bg-slate-700');\r\n    const buttonBg = isBreakTime ? 'bg-green-800' : (isFreeMode ? 'bg-purple-800' : 'bg-slate-800');\r\n    const textColor = isBreakTime ? 'text-green-300' : (isFreeMode ? 'text-purple-300' : 'text-slate-300');\r\n\r\n    // Transition screen when session ends\r\n    if (showTransition) {\r\n        return (\r\n            <div className=\"flex flex-col items-center justify-center w-full h-full bg-gradient-to-br from-green-900 to-blue-900 text-white p-6 animate-pulse\">\r\n                <div className=\"text-9xl mb-8 animate-bounce\">🎉</div>\r\n                <h1 className=\"text-4xl font-bold mb-4 text-center\">Tuyệt vời!</h1>\r\n                <p className=\"text-xl text-center mb-8 text-green-300\">\r\n                    Bạn đã hoàn thành phiên làm việc\r\n                </p>\r\n                <div className=\"text-6xl font-bold mb-8 text-yellow-300\">\r\n                    {formatTimer(isFreeMode ? timeElapsed : session.duration)}\r\n                </div>\r\n                <p className=\"text-lg text-center mb-8 text-blue-200\">\r\n                    Chuẩn bị nghỉ ngơi 5 phút...\r\n                </p>\r\n                <button \r\n                    onClick={handleSkipTransition}\r\n                    className=\"px-6 py-3 bg-white text-green-900 font-semibold rounded-lg hover:bg-gray-100 transition-colors\"\r\n                >\r\n                    ⏭️ Bỏ qua\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={`flex flex-col items-center justify-center w-full h-full ${bgColor} text-white p-6`}>\r\n            <div className={`w-full h-1 ${progressBg} fixed top-0 left-0`}>\r\n                <div className={`h-1 ${progressColor}`} style={{ width: `${progress}%` }}></div>\r\n            </div>\r\n            \r\n            {isBreakTime ? (\r\n                <>\r\n                    <div className=\"text-8xl mb-6 animate-bounce\">☕</div>\r\n                    <p className={`text-xl font-semibold ${textColor} mb-4 text-center`}>\r\n                        Thời gian nghỉ ngơi\r\n                    </p>\r\n                    <h2 className=\"text-8xl font-extrabold tracking-tighter mb-8\">\r\n                        {formatTimer(currentTime)}\r\n                    </h2>\r\n                    <p className={`${textColor} text-center mb-12 max-w-md`}>\r\n                        Hãy thư giãn, uống nước, hoặc làm các bài tập nhẹ nhàng để phục hồi năng lượng\r\n                    </p>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {isFreeMode && (\r\n                        <div className=\"text-6xl mb-4\">⏱️</div>\r\n                    )}\r\n                    <p className={`text-xl font-semibold ${textColor} mb-4 text-center`}>\r\n                        {session.task.name}\r\n                        {isFreeMode && <span className=\"block text-sm mt-1\">Chế độ tự do</span>}\r\n                    </p>\r\n                    <h2 className=\"text-8xl font-extrabold tracking-tighter\">\r\n                        {formatTimer(currentTime)}\r\n                    </h2>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"fixed bottom-10 flex space-x-6\">\r\n                <button \r\n                    onClick={() => setIsPaused(!isPaused)} \r\n                    className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                    disabled={showTransition}\r\n                >\r\n                    {isPaused ? '▶️ Tiếp tục' : '⏸️ Tạm dừng'}\r\n                </button>\r\n                \r\n                {isBreakTime ? (\r\n                    <button \r\n                        onClick={handleSkipBreak} \r\n                        className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                    >\r\n                        ⏭️ Bỏ qua nghỉ\r\n                    </button>\r\n                ) : isFreeMode ? (\r\n                    <button \r\n                        onClick={handleFinishFreeMode} \r\n                        className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                        disabled={showTransition}\r\n                    >\r\n                        ✅ Kết thúc\r\n                    </button>\r\n                ) : (\r\n                    <button \r\n                        onClick={handleStop} \r\n                        className={`text-slate-400 font-semibold py-3 px-6 rounded-lg ${buttonBg} hover:opacity-80 transition-opacity`}\r\n                        disabled={showTransition}\r\n                    >\r\n                        ⏹️ Dừng\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FocusView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}