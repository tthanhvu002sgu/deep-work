{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\components\\\\HistoryView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useMemo } from \"react\";\n// import { Bar } from \"react-chartjs-2\";\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from \"chart.js\";\n\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// // Heatmap Component\n// const FocusHeatmap = ({ sessions, tasks, filter, dailyTargets = {} }) => {\n//   const [hoveredDate, setHoveredDate] = useState(null);\n//   const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n//   // Calculate data for heatmap\n//   const heatmapData = useMemo(() => {\n//     const now = new Date();\n//     const dates = [];\n\n//     // Generate date range based on filter\n//     if (filter === \"week\") {\n//       // Get last 7 days\n//       for (let i = 6; i >= 0; i--) {\n//         const date = new Date(now);\n//         date.setDate(now.getDate() - i);\n//         dates.push(new Date(date));\n//       }\n//     } else if (filter === \"month\") {\n//       // Get all days in current month\n//       const year = now.getFullYear();\n//       const month = now.getMonth();\n//       const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n//       for (let day = 1; day <= daysInMonth; day++) {\n//         dates.push(new Date(year, month, day));\n//       }\n//     }\n\n//     // Calculate focus time for each date\n//     return dates.map((date) => {\n//       const dateKey = date.toISOString().split(\"T\")[0];\n//       const dayStart = new Date(date);\n//       dayStart.setHours(0, 0, 0, 0);\n//       const dayEnd = new Date(date);\n//       dayEnd.setHours(23, 59, 59, 999);\n\n//       // Get sessions for this date\n//       const daySessions = sessions.filter((session) => {\n//         const sessionDate = new Date(session.completedAt);\n//         return sessionDate >= dayStart && sessionDate <= dayEnd;\n//       });\n\n//       const totalMinutes =\n//         daySessions.reduce((acc, session) => acc + session.duration, 0) / 60;\n//       const totalHours = totalMinutes / 60;\n//       const target = dailyTargets[dateKey];\n//       const targetMinutes = target?.targetMinutes || 0;\n//       const targetHours = targetMinutes / 60;\n\n//       // Determine color based on conditions\n//       let color = \"bg-gray-100\"; // Default: no activity\n//       let intensity = 0;\n\n//       if (target && targetMinutes > 0) {\n//         // Has target set\n//         if (totalMinutes >= targetMinutes) {\n//           // Target completed - green\n//           color = \"bg-green-500\";\n//           intensity = Math.min(totalHours / targetHours, 2); // Max intensity at 2x target\n//         } else {\n//           // Target not completed - red\n//           color = \"bg-red-500\";\n//           intensity = Math.max(0.3, totalMinutes / targetMinutes); // Min 30% intensity\n//         }\n//       } else {\n//         // No target set\n//         if (totalHours >= 1) {\n//           // >= 1h without target - blue\n//           color = \"bg-blue-500\";\n//           intensity = Math.min(totalHours / 3, 1); // Max intensity at 3h\n//         } else if (totalMinutes > 0) {\n//           // < 1h without target - orange-red\n//           color = \"bg-orange-600\";\n//           intensity = Math.max(0.2, totalMinutes / 60); // Min 20% intensity\n//         }\n//       }\n\n//       return {\n//         date,\n//         dateKey,\n//         totalMinutes: Math.round(totalMinutes),\n//         totalHours: Math.round(totalHours * 10) / 10,\n//         sessionCount: daySessions.length,\n//         target: targetMinutes,\n//         targetAchieved: targetMinutes > 0 && totalMinutes >= targetMinutes,\n//         color,\n//         intensity: Math.max(0.2, Math.min(intensity, 1)),\n//         tasks: [...new Set(daySessions.map((s) => s.taskId))].map(\n//           (taskId) => tasks.find((t) => t.id === taskId)?.name || \"Task ƒë√£ x√≥a\"\n//         ),\n//       };\n//     });\n//   }, [sessions, tasks, filter, dailyTargets]);\n\n//   const handleMouseEnter = (dayData, event) => {\n//     setHoveredDate(dayData);\n//     setTooltipPosition({ x: event.clientX, y: event.clientY });\n//   };\n\n//   const handleMouseMove = (event) => {\n//     if (hoveredDate) {\n//       setTooltipPosition({ x: event.clientX, y: event.clientY });\n//     }\n//   };\n\n//   const handleMouseLeave = () => {\n//     setHoveredDate(null);\n//   };\n\n//   const formatDate = (date) => {\n//     return date.toLocaleDateString(\"vi-VN\", {\n//       day: \"2-digit\",\n//       month: \"2-digit\",\n//     });\n//   };\n\n//   const formatTime = (minutes) => {\n//     if (minutes >= 60) {\n//       const hours = Math.floor(minutes / 60);\n//       const mins = minutes % 60;\n//       return mins > 0 ? `${hours}h ${mins}p` : `${hours}h`;\n//     }\n//     return `${minutes}p`;\n//   };\n\n//   if (filter === \"day\") {\n//     return null; // Don't show heatmap for day filter\n//   }\n\n//   return (\n//     <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n//       <h3 className=\"text-md font-semibold text-gray-800 mb-3\">\n//         üî• Heatmap t·∫≠p trung {filter === \"week\" ? \"tu·∫ßn n√†y\" : \"th√°ng n√†y\"}\n//       </h3>\n\n//       {/* Legend */}\n//       <div className=\"flex items-center space-x-4 mb-4 text-xs\">\n//         <span className=\"text-gray-600\">√çt</span>\n//         <div className=\"flex space-x-1\">\n//           <div className=\"w-3 h-3 bg-gray-100 rounded border\"></div>\n//           <div className=\"w-3 h-3 bg-orange-600 opacity-30 rounded\"></div>\n//           <div className=\"w-3 h-3 bg-blue-500 opacity-50 rounded\"></div>\n//           <div className=\"w-3 h-3 bg-green-500 opacity-70 rounded\"></div>\n//           <div className=\"w-3 h-3 bg-green-500 rounded\"></div>\n//           <div className=\"w-3 h-3 bg-red-500 rounded\"></div>\n//         </div>\n//         <span className=\"text-gray-600\">Nhi·ªÅu</span>\n//         <div className=\"flex items-center space-x-2 ml-4 text-xs\">\n//           <div className=\"flex items-center space-x-1\">\n//             <div className=\"w-2 h-2 bg-green-500 rounded\"></div>\n//             <span>ƒê·∫°t m·ª•c ti√™u</span>\n//           </div>\n//           <div className=\"flex items-center space-x-1\">\n//             <div className=\"w-2 h-2 bg-red-500 rounded\"></div>\n//             <span>Ch∆∞a ƒë·∫°t m·ª•c ti√™u</span>\n//           </div>\n//           <div className=\"flex items-center space-x-1\">\n//             <div className=\"w-2 h-2 bg-blue-500 rounded\"></div>\n//             <span>Kh√¥ng m·ª•c ti√™u ‚â•1h</span>\n//           </div>\n//           <div className=\"flex items-center space-x-1\">\n//             <div className=\"w-2 h-2 bg-orange-600 rounded\"></div>\n//             <span>Kh√¥ng m·ª•c ti√™u {\"<\"} 1h</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Heatmap Grid */}\n//       <div\n//         className={`grid gap-1 ${\n//           filter === \"week\"\n//             ? \"grid-cols-7\"\n//             : \"grid-cols-7 lg:grid-cols-10 xl:grid-cols-15\"\n//         }`}\n//       >\n//         {filter === \"week\" &&\n//           // Week day headers\n//           [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"].map((day) => (\n//             <div\n//               key={day}\n//               className=\"text-xs font-medium text-gray-500 text-center py-1\"\n//             >\n//               {day}\n//             </div>\n//           ))}\n\n//         {heatmapData.map((dayData, index) => (\n//           <div\n//             key={dayData.dateKey}\n//             className={`\n//               w-6 h-6 rounded cursor-pointer border border-gray-200\n//               ${dayData.color} hover:ring-2 hover:ring-gray-400 transition-all\n//               flex items-center justify-center text-xs font-medium\n//             `}\n//             style={{\n//               opacity: dayData.totalMinutes > 0 ? dayData.intensity : 0.1,\n//               color: dayData.totalMinutes > 0 ? \"white\" : \"#6b7280\",\n//             }}\n//             onMouseEnter={(e) => handleMouseEnter(dayData, e)}\n//             onMouseMove={handleMouseMove}\n//             onMouseLeave={handleMouseLeave}\n//             title={`${formatDate(dayData.date)}: ${formatTime(\n//               dayData.totalMinutes\n//             )}`}\n//           >\n//             {dayData.date.getDate()}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Tooltip */}\n//       {hoveredDate && (\n//         <div\n//           className=\"fixed z-50 bg-gray-900 text-white text-xs rounded-lg p-3 shadow-lg pointer-events-none max-w-xs\"\n//           style={{\n//             left: tooltipPosition.x + 10,\n//             top: tooltipPosition.y - 10,\n//             transform: \"translateY(-100%)\",\n//           }}\n//         >\n//           <div className=\"font-semibold mb-1\">\n//             {hoveredDate.date.toLocaleDateString(\"vi-VN\", {\n//               weekday: \"long\",\n//               day: \"numeric\",\n//               month: \"long\",\n//             })}\n//           </div>\n\n//           <div className=\"space-y-1\">\n//             <div>\n//               ‚è±Ô∏è Th·ªùi gian t·∫≠p trung:{\" \"}\n//               <span className=\"font-semibold text-blue-300\">\n//                 {formatTime(hoveredDate.totalMinutes)}\n//               </span>\n//             </div>\n\n//             <div>\n//               üìä S·ªë phi√™n:{\" \"}\n//               <span className=\"font-semibold\">{hoveredDate.sessionCount}</span>\n//             </div>\n\n//             {hoveredDate.target > 0 ? (\n//               <div>\n//                 üéØ M·ª•c ti√™u:{\" \"}\n//                 <span className=\"font-semibold\">\n//                   {formatTime(hoveredDate.target)}\n//                 </span>\n//                 <span\n//                   className={`ml-1 ${\n//                     hoveredDate.targetAchieved\n//                       ? \"text-green-400\"\n//                       : \"text-red-400\"\n//                   }`}\n//                 >\n//                   {hoveredDate.targetAchieved ? \"‚úÖ ƒê·∫°t\" : \"‚ùå Ch∆∞a ƒë·∫°t\"}\n//                 </span>\n//               </div>\n//             ) : (\n//               <div className=\"text-gray-400\">üéØ Kh√¥ng ƒë·∫∑t m·ª•c ti√™u</div>\n//             )}\n\n//             {hoveredDate.tasks.length > 0 && (\n//               <div>\n//                 üìù Tasks:{\" \"}\n//                 <span className=\"text-green-300\">\n//                   {hoveredDate.tasks.slice(0, 2).join(\", \")}\n//                   {hoveredDate.tasks.length > 2 &&\n//                     ` +${hoveredDate.tasks.length - 2} kh√°c`}\n//                 </span>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const HistoryView = ({\n//   sessions,\n//   tasks,\n//   filter,\n//   setFilter,\n//   dailyTargets = {},\n// }) => {\n//   // Existing chart data logic\n//   const chartData = React.useMemo(() => {\n//     const dataByTask = sessions.reduce((acc, session) => {\n//       const taskId = session.taskId;\n//       acc[taskId] = (acc[taskId] || 0) + session.duration;\n//       return acc;\n//     }, {});\n\n//     const taskMap = tasks.reduce((map, task) => {\n//       map[task.id] = task.name;\n//       return map;\n//     }, {});\n\n//     const labels = Object.keys(dataByTask).map(\n//       (taskId) => taskMap[taskId] || \"Task ƒë√£ x√≥a\"\n//     );\n//     const data = Object.values(dataByTask).map((totalSeconds) =>\n//       Math.round(totalSeconds / 60)\n//     );\n\n//     return {\n//       labels,\n//       datasets: [\n//         {\n//           label: \"Th·ªùi gian t·∫≠p trung (ph√∫t)\",\n//           data,\n//           backgroundColor: \"rgba(59, 130, 246, 0.8)\",\n//           borderColor: \"rgba(59, 130, 246, 1)\",\n//           borderWidth: 1,\n//           borderRadius: 4,\n//           borderSkipped: false,\n//         },\n//       ],\n//     };\n//   }, [sessions, tasks]);\n\n//   const chartOptions = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     indexAxis: \"y\",\n//     plugins: {\n//       legend: {\n//         display: false,\n//       },\n//       title: {\n//         display: false,\n//       },\n//       tooltip: {\n//         callbacks: {\n//           label: function (context) {\n//             return `${context.parsed.x} ph√∫t`;\n//           },\n//         },\n//       },\n//     },\n//     scales: {\n//       x: {\n//         beginAtZero: true,\n//         ticks: {\n//           callback: function (value) {\n//             return value + \"p\";\n//           },\n//         },\n//         grid: {\n//           color: \"rgba(0, 0, 0, 0.1)\",\n//         },\n//       },\n//       y: {\n//         ticks: {\n//           maxRotation: 0,\n//           minRotation: 0,\n//           font: {\n//             size: 12,\n//           },\n//         },\n//         grid: {\n//           display: false,\n//         },\n//       },\n//     },\n//     elements: {\n//       bar: {\n//         borderWidth: 1,\n//       },\n//     },\n//   };\n\n//   const getFilterText = (filter) => {\n//     if (filter === \"day\") return \"h√¥m nay\";\n//     if (filter === \"week\") return \"tu·∫ßn n√†y\";\n//     if (filter === \"month\") return \"th√°ng n√†y\";\n//     return \"\";\n//   };\n\n//   // Calculate total focus time for current filter\n//   const totalMinutes =\n//     sessions.reduce((acc, session) => acc + session.duration, 0) / 60;\n//   const totalHours = Math.floor(totalMinutes / 60);\n//   const remainingMinutes = Math.round(totalMinutes % 60);\n\n//   const formatTotalTime = () => {\n//     if (totalHours > 0) {\n//       return `${totalHours} gi·ªù ${remainingMinutes} ph√∫t`;\n//     }\n//     return `${Math.round(totalMinutes)} ph√∫t`;\n//   };\n\n//   return (\n//     <div className=\"bg-white rounded-lg p-4 mb-4 shadow-sm border border-gray-200\">\n//       {/* Header */}\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <div>\n//           <h2 className=\"text-lg font-semibold text-gray-900\">\n//             üìä Th·ªëng k√™ {getFilterText(filter)}\n//           </h2>\n//           {sessions.length > 0 && (\n//             <p className=\"text-sm text-gray-600 mt-1\">\n//               T·ªïng c·ªông:{\" \"}\n//               <span className=\"font-semibold text-blue-600\">\n//                 {formatTotalTime()}\n//               </span>{\" \"}\n//               ({sessions.length} phi√™n)\n//             </p>\n//           )}\n//         </div>\n\n//         <div className=\"flex space-x-1 bg-gray-100 rounded-lg p-1\">\n//           {[\"day\", \"week\", \"month\"].map((f) => (\n//             <button\n//               key={f}\n//               onClick={() => setFilter(f)}\n//               className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\n//                 filter === f\n//                   ? \"bg-white text-blue-600 shadow-sm\"\n//                   : \"text-gray-600 hover:text-gray-900\"\n//               }`}\n//             >\n//               {f === \"day\" ? \"Ng√†y\" : f === \"week\" ? \"Tu·∫ßn\" : \"Th√°ng\"}\n//             </button>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* Chart */}\n//       {sessions.length > 0 ? (\n//         <div style={{ height: \"250px\" }}>\n//           <Bar data={chartData} options={chartOptions} />\n//         </div>\n//       ) : (\n//         <div className=\"text-center py-12 text-gray-500\">\n//           <div className=\"text-5xl mb-3\">üìà</div>\n//           <h3 className=\"text-lg font-medium text-gray-700 mb-2\">\n//             Ch∆∞a c√≥ d·ªØ li·ªáu {getFilterText(filter)}\n//           </h3>\n//           <p className=\"text-sm\">\n//             B·∫Øt ƒë·∫ßu m·ªôt phi√™n l√†m vi·ªác ƒë·ªÉ xem th·ªëng k√™ t·∫°i ƒë√¢y\n//           </p>\n//         </div>\n//       )}\n\n//       {/* Quick Stats */}\n//       {sessions.length > 0 && (\n//         <div className=\"mt-4 grid grid-cols-3 gap-4 pt-4 border-t border-gray-100\">\n//           <div className=\"text-center\">\n//             <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\n//               Phi√™n\n//             </p>\n//             <p className=\"text-lg font-bold text-gray-900\">{sessions.length}</p>\n//           </div>\n//           <div className=\"text-center\">\n//             <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\n//               Trung b√¨nh\n//             </p>\n//             <p className=\"text-lg font-bold text-gray-900\">\n//               {Math.round(totalMinutes / sessions.length)}p\n//             </p>\n//           </div>\n//           <div className=\"text-center\">\n//             <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\n//               Tasks\n//             </p>\n//             <p className=\"text-lg font-bold text-gray-900\">\n//               {new Set(sessions.map((s) => s.taskId)).size}\n//             </p>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Focus Heatmap - only show for week and month filters */}\n//       <FocusHeatmap\n//         sessions={sessions}\n//         tasks={tasks}\n//         filter={filter}\n//         dailyTargets={dailyTargets}\n//       />\n//     </div>\n//   );\n// };\n\n// export default HistoryView;\nimport React, { useState, useMemo } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Heatmap Component\nconst FocusHeatmap = ({\n  sessions,\n  tasks,\n  filter,\n  dailyTargets = {}\n}) => {\n  _s();\n  const [hoveredDate, setHoveredDate] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Calculate data for heatmap\n  const heatmapData = useMemo(() => {\n    const now = new Date();\n    const dates = [];\n\n    // Generate date range based on filter\n    if (filter === \"week\") {\n      // FIX: Start week from Monday instead of Sunday\n      const today = new Date(now);\n      const currentDay = today.getDay(); // 0 = Sunday, 1 = Monday, etc.\n\n      // Calculate the start of the week (Monday)\n      const startOfWeek = new Date(today);\n      // If today is Sunday (0), go back 6 days. Otherwise, go back (currentDay - 1) days.\n      const daysToSubtract = currentDay === 0 ? 6 : currentDay - 1;\n      startOfWeek.setDate(today.getDate() - daysToSubtract);\n      startOfWeek.setHours(0, 0, 0, 0);\n\n      // Generate 7 days from Monday\n      for (let i = 0; i < 7; i++) {\n        const date = new Date(startOfWeek);\n        date.setDate(startOfWeek.getDate() + i);\n        dates.push(date);\n      }\n    } else if (filter === \"month\") {\n      // Get all days in current month\n      const year = now.getFullYear();\n      const month = now.getMonth();\n      const daysInMonth = new Date(year, month + 1, 0).getDate();\n      for (let day = 1; day <= daysInMonth; day++) {\n        dates.push(new Date(year, month, day));\n      }\n    }\n\n    // Calculate focus time for each date\n    return dates.map(date => {\n      const dateKey = date.toISOString().split(\"T\")[0];\n      const dayStart = new Date(date);\n      dayStart.setHours(0, 0, 0, 0);\n      const dayEnd = new Date(date);\n      dayEnd.setHours(23, 59, 59, 999);\n\n      // Get sessions for this date\n      const daySessions = sessions.filter(session => {\n        const sessionDate = new Date(session.completedAt);\n        return sessionDate >= dayStart && sessionDate <= dayEnd;\n      });\n      const totalMinutes = daySessions.reduce((acc, session) => acc + session.duration, 0) / 60;\n      const totalHours = totalMinutes / 60;\n      const target = dailyTargets[dateKey];\n      const targetMinutes = (target === null || target === void 0 ? void 0 : target.targetMinutes) || 0;\n      const targetHours = targetMinutes / 60;\n\n      // Determine color based on conditions\n      let color = \"bg-gray-100\"; // Default: no activity\n      let intensity = 0;\n      if (target && targetMinutes > 0) {\n        // Has target set\n        if (totalMinutes >= targetMinutes) {\n          // Target completed - green\n          color = \"bg-green-500\";\n          intensity = Math.min(totalHours / targetHours, 2); // Max intensity at 2x target\n        } else {\n          // Target not completed - red\n          color = \"bg-red-500\";\n          intensity = Math.max(0.3, totalMinutes / targetMinutes); // Min 30% intensity\n        }\n      } else {\n        // No target set\n        if (totalHours >= 1) {\n          // >= 1h without target - blue\n          color = \"bg-blue-500\";\n          intensity = Math.min(totalHours / 3, 1); // Max intensity at 3h\n        } else if (totalMinutes > 0) {\n          // < 1h without target - orange-red\n          color = \"bg-orange-600\";\n          intensity = Math.max(0.2, totalMinutes / 60); // Min 20% intensity\n        }\n      }\n      return {\n        date,\n        dateKey,\n        totalMinutes: Math.round(totalMinutes),\n        totalHours: Math.round(totalHours * 10) / 10,\n        sessionCount: daySessions.length,\n        target: targetMinutes,\n        targetAchieved: targetMinutes > 0 && totalMinutes >= targetMinutes,\n        color,\n        intensity: Math.max(0.2, Math.min(intensity, 1)),\n        tasks: [...new Set(daySessions.map(s => s.taskId))].map(taskId => {\n          var _tasks$find;\n          return ((_tasks$find = tasks.find(t => t.id === taskId)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.name) || \"Task ƒë√£ x√≥a\";\n        })\n      };\n    });\n  }, [sessions, tasks, filter, dailyTargets]);\n  const handleMouseEnter = (dayData, event) => {\n    setHoveredDate(dayData);\n    setTooltipPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  };\n  const handleMouseMove = event => {\n    if (hoveredDate) {\n      setTooltipPosition({\n        x: event.clientX,\n        y: event.clientY\n      });\n    }\n  };\n  const handleMouseLeave = () => {\n    setHoveredDate(null);\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString(\"vi-VN\", {\n      day: \"2-digit\",\n      month: \"2-digit\"\n    });\n  };\n  const formatTime = minutes => {\n    if (minutes >= 60) {\n      const hours = Math.floor(minutes / 60);\n      const mins = minutes % 60;\n      return mins > 0 ? `${hours}h ${mins}p` : `${hours}h`;\n    }\n    return `${minutes}p`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4 mb-6 text-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-600\",\n        children: \"\\xCDt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-gray-100 rounded border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-orange-600 opacity-30 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-blue-500 opacity-50 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-green-500 opacity-70 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-green-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-red-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-600\",\n        children: \"Nhi\\u1EC1u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 ml-4 text-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-green-500 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0110\\u1EA1t m\\u1EE5c ti\\xEAu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-red-500 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Ch\\u01B0a \\u0111\\u1EA1t m\\u1EE5c ti\\xEAu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-blue-500 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Kh\\xF4ng m\\u1EE5c ti\\xEAu \\u22651h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-orange-600 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Kh\\xF4ng m\\u1EE5c ti\\xEAu \", \"<\", \"1h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this), filter === \"week\" ?\n    /*#__PURE__*/\n    // Week layout - vertical structure\n    _jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7 gap-1\",\n        children: [\"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\", \"CN\"].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs font-medium text-gray-500 text-center h-6 flex items-center justify-center\",\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7 gap-1\",\n        children: heatmapData.map(dayData => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `\n                  w-8 h-8 rounded cursor-pointer border border-gray-200\n                  ${dayData.color} hover:ring-2 hover:ring-gray-400 transition-all\n                  flex items-center justify-center text-xs font-medium\n                `,\n          style: {\n            opacity: dayData.totalMinutes > 0 ? dayData.intensity : 0.1,\n            color: dayData.totalMinutes > 0 ? \"white\" : \"#6b7280\"\n          },\n          onMouseEnter: e => handleMouseEnter(dayData, e),\n          onMouseMove: handleMouseMove,\n          onMouseLeave: handleMouseLeave,\n          title: `${formatDate(dayData.date)}: ${formatTime(dayData.totalMinutes)}`,\n          children: dayData.date.getDate()\n        }, dayData.dateKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Month layout - flexible grid\n    _jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 sm:grid-cols-10 lg:grid-cols-12 xl:grid-cols-15 gap-1\",\n      children: heatmapData.map(dayData => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n                w-6 h-6 rounded cursor-pointer border border-gray-200\n                ${dayData.color} hover:ring-2 hover:ring-gray-400 transition-all\n                flex items-center justify-center text-xs font-medium\n              `,\n        style: {\n          opacity: dayData.totalMinutes > 0 ? dayData.intensity : 0.1,\n          color: dayData.totalMinutes > 0 ? \"white\" : \"#6b7280\"\n        },\n        onMouseEnter: e => handleMouseEnter(dayData, e),\n        onMouseMove: handleMouseMove,\n        onMouseLeave: handleMouseLeave,\n        title: `${formatDate(dayData.date)}: ${formatTime(dayData.totalMinutes)}`,\n        children: dayData.date.getDate()\n      }, dayData.dateKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 9\n    }, this), hoveredDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed z-50 bg-gray-900 text-white text-xs rounded-lg p-3 shadow-lg pointer-events-none max-w-xs\",\n      style: {\n        left: tooltipPosition.x + 10,\n        top: tooltipPosition.y - 10,\n        transform: \"translateY(-100%)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-semibold mb-1\",\n        children: hoveredDate.date.toLocaleDateString(\"vi-VN\", {\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u23F1\\uFE0F Th\\u1EDDi gian t\\u1EADp trung:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-blue-300\",\n            children: formatTime(hoveredDate.totalMinutes)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83D\\uDCCA S\\u1ED1 phi\\xEAn:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: hoveredDate.sessionCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this), hoveredDate.target > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83C\\uDFAF M\\u1EE5c ti\\xEAu:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: formatTime(hoveredDate.target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ml-1 ${hoveredDate.targetAchieved ? \"text-green-400\" : \"text-red-400\"}`,\n            children: hoveredDate.targetAchieved ? \"‚úÖ ƒê·∫°t\" : \"‚ùå Ch∆∞a ƒë·∫°t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-400\",\n          children: \"\\uD83C\\uDFAF Kh\\xF4ng \\u0111\\u1EB7t m\\u1EE5c ti\\xEAu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 15\n        }, this), hoveredDate.tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83D\\uDCDD Tasks:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-300\",\n            children: [hoveredDate.tasks.slice(0, 2).join(\", \"), hoveredDate.tasks.length > 2 && ` +${hoveredDate.tasks.length - 2} kh√°c`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(FocusHeatmap, \"tN/UdLxaouwP8ZOCCrR26Wuirx8=\");\n_c = FocusHeatmap;\nconst HistoryView = ({\n  sessions,\n  tasks,\n  filter,\n  setFilter,\n  dailyTargets = {}\n}) => {\n  _s2();\n  // State for view mode toggle\n  const [viewMode, setViewMode] = useState(\"chart\"); // \"chart\" or \"heatmap\"\n\n  // Auto-reset to chart mode when switching to day filter (heatmap not available for day)\n  React.useEffect(() => {\n    if (filter === \"day\" && viewMode === \"heatmap\") {\n      setViewMode(\"chart\");\n    }\n  }, [filter, viewMode]);\n\n  // Chart data logic\n  const chartData = React.useMemo(() => {\n    const dataByTask = sessions.reduce((acc, session) => {\n      const taskId = session.taskId;\n      acc[taskId] = (acc[taskId] || 0) + session.duration;\n      return acc;\n    }, {});\n    const taskMap = tasks.reduce((map, task) => {\n      map[task.id] = task.name;\n      return map;\n    }, {});\n    const labels = Object.keys(dataByTask).map(taskId => taskMap[taskId] || \"Task ƒë√£ x√≥a\");\n    const data = Object.values(dataByTask).map(totalSeconds => Math.round(totalSeconds / 60));\n    return {\n      labels,\n      datasets: [{\n        label: \"Th·ªùi gian t·∫≠p trung (ph√∫t)\",\n        data,\n        backgroundColor: \"rgba(59, 130, 246, 0.8)\",\n        borderColor: \"rgba(59, 130, 246, 1)\",\n        borderWidth: 1,\n        borderRadius: 4,\n        borderSkipped: false\n      }]\n    };\n  }, [sessions, tasks]);\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    indexAxis: \"y\",\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.parsed.x} ph√∫t`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        ticks: {\n          callback: function (value) {\n            return value + \"p\";\n          }\n        },\n        grid: {\n          color: \"rgba(0, 0, 0, 0.1)\"\n        }\n      },\n      y: {\n        ticks: {\n          maxRotation: 0,\n          minRotation: 0,\n          font: {\n            size: 12\n          }\n        },\n        grid: {\n          display: false\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 1\n      }\n    }\n  };\n  const getFilterText = filter => {\n    if (filter === \"day\") return \"h√¥m nay\";\n    if (filter === \"week\") return \"tu·∫ßn n√†y\";\n    if (filter === \"month\") return \"th√°ng n√†y\";\n    return \"\";\n  };\n\n  // Calculate total focus time for current filter\n  const totalMinutes = sessions.reduce((acc, session) => acc + session.duration, 0) / 60;\n  const totalHours = Math.floor(totalMinutes / 60);\n  const remainingMinutes = Math.round(totalMinutes % 60);\n  const formatTotalTime = () => {\n    if (totalHours > 0) {\n      return `${totalHours} gi·ªù ${remainingMinutes} ph√∫t`;\n    }\n    return `${Math.round(totalMinutes)} ph√∫t`;\n  };\n  const canShowHeatmap = filter !== \"day\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg p-4 mb-4 shadow-sm border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-start mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: [\"\\uD83D\\uDCCA Th\\u1ED1ng k\\xEA \", getFilterText(filter)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 13\n          }, this), canShowHeatmap && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1 bg-gray-100 rounded-lg p-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setViewMode(\"chart\"),\n              className: `px-2 py-1 text-sm font-medium rounded-md transition-colors flex items-center space-x-1 ${viewMode === \"chart\" ? \"bg-white text-blue-600 shadow-sm\" : \"text-gray-600 hover:text-gray-900\"}`,\n              title: \"Bi\\u1EC3u \\u0111\\u1ED3 c\\u1ED9t\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83D\\uDCCA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setViewMode(\"heatmap\"),\n              className: `px-2 py-1 text-sm font-medium rounded-md transition-colors flex items-center space-x-1 ${viewMode === \"heatmap\" ? \"bg-white text-blue-600 shadow-sm\" : \"text-gray-600 hover:text-gray-900\"}`,\n              title: \"Heatmap\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83D\\uDD25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 11\n        }, this), sessions.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"T\\u1ED5ng c\\u1ED9ng:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-blue-600\",\n            children: formatTotalTime()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 15\n          }, this), \" \", \"(\", sessions.length, \" phi\\xEAn)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-1 bg-gray-100 rounded-lg p-1\",\n        children: [\"day\", \"week\", \"month\"].map(f => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilter(f),\n          className: `px-3 py-1 text-sm font-medium rounded-md transition-colors ${filter === f ? \"bg-white text-blue-600 shadow-sm\" : \"text-gray-600 hover:text-gray-900\"}`,\n          children: f === \"day\" ? \"Ng√†y\" : f === \"week\" ? \"Tu·∫ßn\" : \"Th√°ng\"\n        }, f, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 7\n    }, this), sessions.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: viewMode === \"chart\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"250px\"\n          },\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, `chart-${sessions.length}-${JSON.stringify(sessions.map(s => s.id))}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 pt-4 border-t border-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 uppercase tracking-wide\",\n              children: \"Phi\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-bold text-gray-900\",\n              children: sessions.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 uppercase tracking-wide\",\n              children: \"Trung b\\xECnh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-bold text-gray-900\",\n              children: [Math.round(totalMinutes / sessions.length), \"p\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 uppercase tracking-wide\",\n              children: \"Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-bold text-gray-900\",\n              children: new Set(sessions.map(s => s.taskId)).size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      /* Focus Heatmap */\n      _jsxDEV(\"div\", {\n        className: \"py-2\",\n        children: /*#__PURE__*/_jsxDEV(FocusHeatmap, {\n          sessions: sessions,\n          tasks: tasks,\n          filter: filter,\n          dailyTargets: dailyTargets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) :\n    /*#__PURE__*/\n    /* Empty State */\n    _jsxDEV(\"div\", {\n      className: \"text-center py-12 text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-5xl mb-3\",\n        children: viewMode === \"heatmap\" ? \"üî•\" : \"üìà\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-700 mb-2\",\n        children: [\"Ch\\u01B0a c\\xF3 d\\u1EEF li\\u1EC7u \", getFilterText(filter)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: [\"B\\u1EAFt \\u0111\\u1EA7u m\\u1ED9t phi\\xEAn l\\xE0m vi\\u1EC7c \\u0111\\u1EC3 xem\", \" \", viewMode === \"heatmap\" ? \"heatmap\" : \"th·ªëng k√™\", \" t\\u1EA1i \\u0111\\xE2y\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 966,\n    columnNumber: 5\n  }, this);\n};\n_s2(HistoryView, \"Dr/IX8mDd2niv77RA+vH1CocfPg=\");\n_c2 = HistoryView;\nexport default HistoryView;\nvar _c, _c2;\n$RefreshReg$(_c, \"FocusHeatmap\");\n$RefreshReg$(_c2, \"HistoryView\");","map":{"version":3,"names":["React","useState","useMemo","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","FocusHeatmap","sessions","tasks","filter","dailyTargets","_s","hoveredDate","setHoveredDate","tooltipPosition","setTooltipPosition","x","y","heatmapData","now","Date","dates","today","currentDay","getDay","startOfWeek","daysToSubtract","setDate","getDate","setHours","i","date","push","year","getFullYear","month","getMonth","daysInMonth","day","map","dateKey","toISOString","split","dayStart","dayEnd","daySessions","session","sessionDate","completedAt","totalMinutes","reduce","acc","duration","totalHours","target","targetMinutes","targetHours","color","intensity","Math","min","max","round","sessionCount","length","targetAchieved","Set","s","taskId","_tasks$find","find","t","id","name","handleMouseEnter","dayData","event","clientX","clientY","handleMouseMove","handleMouseLeave","formatDate","toLocaleDateString","formatTime","minutes","hours","floor","mins","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","opacity","onMouseEnter","e","onMouseMove","onMouseLeave","title","left","top","transform","weekday","slice","join","_c","HistoryView","setFilter","_s2","viewMode","setViewMode","useEffect","chartData","dataByTask","taskMap","task","labels","Object","keys","data","values","totalSeconds","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","borderSkipped","chartOptions","responsive","maintainAspectRatio","indexAxis","plugins","legend","display","tooltip","callbacks","context","parsed","scales","beginAtZero","ticks","callback","value","grid","maxRotation","minRotation","font","size","elements","bar","getFilterText","remainingMinutes","formatTotalTime","canShowHeatmap","onClick","f","height","options","JSON","stringify","_c2","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/components/HistoryView.js"],"sourcesContent":["// import React, { useState, useMemo } from \"react\";\r\n// import { Bar } from \"react-chartjs-2\";\r\n// import {\r\n//   Chart as ChartJS,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   BarElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend,\r\n// } from \"chart.js\";\r\n\r\n// ChartJS.register(\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   BarElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend\r\n// );\r\n\r\n// // Heatmap Component\r\n// const FocusHeatmap = ({ sessions, tasks, filter, dailyTargets = {} }) => {\r\n//   const [hoveredDate, setHoveredDate] = useState(null);\r\n//   const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n\r\n//   // Calculate data for heatmap\r\n//   const heatmapData = useMemo(() => {\r\n//     const now = new Date();\r\n//     const dates = [];\r\n\r\n//     // Generate date range based on filter\r\n//     if (filter === \"week\") {\r\n//       // Get last 7 days\r\n//       for (let i = 6; i >= 0; i--) {\r\n//         const date = new Date(now);\r\n//         date.setDate(now.getDate() - i);\r\n//         dates.push(new Date(date));\r\n//       }\r\n//     } else if (filter === \"month\") {\r\n//       // Get all days in current month\r\n//       const year = now.getFullYear();\r\n//       const month = now.getMonth();\r\n//       const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n//       for (let day = 1; day <= daysInMonth; day++) {\r\n//         dates.push(new Date(year, month, day));\r\n//       }\r\n//     }\r\n\r\n//     // Calculate focus time for each date\r\n//     return dates.map((date) => {\r\n//       const dateKey = date.toISOString().split(\"T\")[0];\r\n//       const dayStart = new Date(date);\r\n//       dayStart.setHours(0, 0, 0, 0);\r\n//       const dayEnd = new Date(date);\r\n//       dayEnd.setHours(23, 59, 59, 999);\r\n\r\n//       // Get sessions for this date\r\n//       const daySessions = sessions.filter((session) => {\r\n//         const sessionDate = new Date(session.completedAt);\r\n//         return sessionDate >= dayStart && sessionDate <= dayEnd;\r\n//       });\r\n\r\n//       const totalMinutes =\r\n//         daySessions.reduce((acc, session) => acc + session.duration, 0) / 60;\r\n//       const totalHours = totalMinutes / 60;\r\n//       const target = dailyTargets[dateKey];\r\n//       const targetMinutes = target?.targetMinutes || 0;\r\n//       const targetHours = targetMinutes / 60;\r\n\r\n//       // Determine color based on conditions\r\n//       let color = \"bg-gray-100\"; // Default: no activity\r\n//       let intensity = 0;\r\n\r\n//       if (target && targetMinutes > 0) {\r\n//         // Has target set\r\n//         if (totalMinutes >= targetMinutes) {\r\n//           // Target completed - green\r\n//           color = \"bg-green-500\";\r\n//           intensity = Math.min(totalHours / targetHours, 2); // Max intensity at 2x target\r\n//         } else {\r\n//           // Target not completed - red\r\n//           color = \"bg-red-500\";\r\n//           intensity = Math.max(0.3, totalMinutes / targetMinutes); // Min 30% intensity\r\n//         }\r\n//       } else {\r\n//         // No target set\r\n//         if (totalHours >= 1) {\r\n//           // >= 1h without target - blue\r\n//           color = \"bg-blue-500\";\r\n//           intensity = Math.min(totalHours / 3, 1); // Max intensity at 3h\r\n//         } else if (totalMinutes > 0) {\r\n//           // < 1h without target - orange-red\r\n//           color = \"bg-orange-600\";\r\n//           intensity = Math.max(0.2, totalMinutes / 60); // Min 20% intensity\r\n//         }\r\n//       }\r\n\r\n//       return {\r\n//         date,\r\n//         dateKey,\r\n//         totalMinutes: Math.round(totalMinutes),\r\n//         totalHours: Math.round(totalHours * 10) / 10,\r\n//         sessionCount: daySessions.length,\r\n//         target: targetMinutes,\r\n//         targetAchieved: targetMinutes > 0 && totalMinutes >= targetMinutes,\r\n//         color,\r\n//         intensity: Math.max(0.2, Math.min(intensity, 1)),\r\n//         tasks: [...new Set(daySessions.map((s) => s.taskId))].map(\r\n//           (taskId) => tasks.find((t) => t.id === taskId)?.name || \"Task ƒë√£ x√≥a\"\r\n//         ),\r\n//       };\r\n//     });\r\n//   }, [sessions, tasks, filter, dailyTargets]);\r\n\r\n//   const handleMouseEnter = (dayData, event) => {\r\n//     setHoveredDate(dayData);\r\n//     setTooltipPosition({ x: event.clientX, y: event.clientY });\r\n//   };\r\n\r\n//   const handleMouseMove = (event) => {\r\n//     if (hoveredDate) {\r\n//       setTooltipPosition({ x: event.clientX, y: event.clientY });\r\n//     }\r\n//   };\r\n\r\n//   const handleMouseLeave = () => {\r\n//     setHoveredDate(null);\r\n//   };\r\n\r\n//   const formatDate = (date) => {\r\n//     return date.toLocaleDateString(\"vi-VN\", {\r\n//       day: \"2-digit\",\r\n//       month: \"2-digit\",\r\n//     });\r\n//   };\r\n\r\n//   const formatTime = (minutes) => {\r\n//     if (minutes >= 60) {\r\n//       const hours = Math.floor(minutes / 60);\r\n//       const mins = minutes % 60;\r\n//       return mins > 0 ? `${hours}h ${mins}p` : `${hours}h`;\r\n//     }\r\n//     return `${minutes}p`;\r\n//   };\r\n\r\n//   if (filter === \"day\") {\r\n//     return null; // Don't show heatmap for day filter\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n//       <h3 className=\"text-md font-semibold text-gray-800 mb-3\">\r\n//         üî• Heatmap t·∫≠p trung {filter === \"week\" ? \"tu·∫ßn n√†y\" : \"th√°ng n√†y\"}\r\n//       </h3>\r\n\r\n//       {/* Legend */}\r\n//       <div className=\"flex items-center space-x-4 mb-4 text-xs\">\r\n//         <span className=\"text-gray-600\">√çt</span>\r\n//         <div className=\"flex space-x-1\">\r\n//           <div className=\"w-3 h-3 bg-gray-100 rounded border\"></div>\r\n//           <div className=\"w-3 h-3 bg-orange-600 opacity-30 rounded\"></div>\r\n//           <div className=\"w-3 h-3 bg-blue-500 opacity-50 rounded\"></div>\r\n//           <div className=\"w-3 h-3 bg-green-500 opacity-70 rounded\"></div>\r\n//           <div className=\"w-3 h-3 bg-green-500 rounded\"></div>\r\n//           <div className=\"w-3 h-3 bg-red-500 rounded\"></div>\r\n//         </div>\r\n//         <span className=\"text-gray-600\">Nhi·ªÅu</span>\r\n//         <div className=\"flex items-center space-x-2 ml-4 text-xs\">\r\n//           <div className=\"flex items-center space-x-1\">\r\n//             <div className=\"w-2 h-2 bg-green-500 rounded\"></div>\r\n//             <span>ƒê·∫°t m·ª•c ti√™u</span>\r\n//           </div>\r\n//           <div className=\"flex items-center space-x-1\">\r\n//             <div className=\"w-2 h-2 bg-red-500 rounded\"></div>\r\n//             <span>Ch∆∞a ƒë·∫°t m·ª•c ti√™u</span>\r\n//           </div>\r\n//           <div className=\"flex items-center space-x-1\">\r\n//             <div className=\"w-2 h-2 bg-blue-500 rounded\"></div>\r\n//             <span>Kh√¥ng m·ª•c ti√™u ‚â•1h</span>\r\n//           </div>\r\n//           <div className=\"flex items-center space-x-1\">\r\n//             <div className=\"w-2 h-2 bg-orange-600 rounded\"></div>\r\n//             <span>Kh√¥ng m·ª•c ti√™u {\"<\"} 1h</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Heatmap Grid */}\r\n//       <div\r\n//         className={`grid gap-1 ${\r\n//           filter === \"week\"\r\n//             ? \"grid-cols-7\"\r\n//             : \"grid-cols-7 lg:grid-cols-10 xl:grid-cols-15\"\r\n//         }`}\r\n//       >\r\n//         {filter === \"week\" &&\r\n//           // Week day headers\r\n//           [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"].map((day) => (\r\n//             <div\r\n//               key={day}\r\n//               className=\"text-xs font-medium text-gray-500 text-center py-1\"\r\n//             >\r\n//               {day}\r\n//             </div>\r\n//           ))}\r\n\r\n//         {heatmapData.map((dayData, index) => (\r\n//           <div\r\n//             key={dayData.dateKey}\r\n//             className={`\r\n//               w-6 h-6 rounded cursor-pointer border border-gray-200\r\n//               ${dayData.color} hover:ring-2 hover:ring-gray-400 transition-all\r\n//               flex items-center justify-center text-xs font-medium\r\n//             `}\r\n//             style={{\r\n//               opacity: dayData.totalMinutes > 0 ? dayData.intensity : 0.1,\r\n//               color: dayData.totalMinutes > 0 ? \"white\" : \"#6b7280\",\r\n//             }}\r\n//             onMouseEnter={(e) => handleMouseEnter(dayData, e)}\r\n//             onMouseMove={handleMouseMove}\r\n//             onMouseLeave={handleMouseLeave}\r\n//             title={`${formatDate(dayData.date)}: ${formatTime(\r\n//               dayData.totalMinutes\r\n//             )}`}\r\n//           >\r\n//             {dayData.date.getDate()}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Tooltip */}\r\n//       {hoveredDate && (\r\n//         <div\r\n//           className=\"fixed z-50 bg-gray-900 text-white text-xs rounded-lg p-3 shadow-lg pointer-events-none max-w-xs\"\r\n//           style={{\r\n//             left: tooltipPosition.x + 10,\r\n//             top: tooltipPosition.y - 10,\r\n//             transform: \"translateY(-100%)\",\r\n//           }}\r\n//         >\r\n//           <div className=\"font-semibold mb-1\">\r\n//             {hoveredDate.date.toLocaleDateString(\"vi-VN\", {\r\n//               weekday: \"long\",\r\n//               day: \"numeric\",\r\n//               month: \"long\",\r\n//             })}\r\n//           </div>\r\n\r\n//           <div className=\"space-y-1\">\r\n//             <div>\r\n//               ‚è±Ô∏è Th·ªùi gian t·∫≠p trung:{\" \"}\r\n//               <span className=\"font-semibold text-blue-300\">\r\n//                 {formatTime(hoveredDate.totalMinutes)}\r\n//               </span>\r\n//             </div>\r\n\r\n//             <div>\r\n//               üìä S·ªë phi√™n:{\" \"}\r\n//               <span className=\"font-semibold\">{hoveredDate.sessionCount}</span>\r\n//             </div>\r\n\r\n//             {hoveredDate.target > 0 ? (\r\n//               <div>\r\n//                 üéØ M·ª•c ti√™u:{\" \"}\r\n//                 <span className=\"font-semibold\">\r\n//                   {formatTime(hoveredDate.target)}\r\n//                 </span>\r\n//                 <span\r\n//                   className={`ml-1 ${\r\n//                     hoveredDate.targetAchieved\r\n//                       ? \"text-green-400\"\r\n//                       : \"text-red-400\"\r\n//                   }`}\r\n//                 >\r\n//                   {hoveredDate.targetAchieved ? \"‚úÖ ƒê·∫°t\" : \"‚ùå Ch∆∞a ƒë·∫°t\"}\r\n//                 </span>\r\n//               </div>\r\n//             ) : (\r\n//               <div className=\"text-gray-400\">üéØ Kh√¥ng ƒë·∫∑t m·ª•c ti√™u</div>\r\n//             )}\r\n\r\n//             {hoveredDate.tasks.length > 0 && (\r\n//               <div>\r\n//                 üìù Tasks:{\" \"}\r\n//                 <span className=\"text-green-300\">\r\n//                   {hoveredDate.tasks.slice(0, 2).join(\", \")}\r\n//                   {hoveredDate.tasks.length > 2 &&\r\n//                     ` +${hoveredDate.tasks.length - 2} kh√°c`}\r\n//                 </span>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const HistoryView = ({\r\n//   sessions,\r\n//   tasks,\r\n//   filter,\r\n//   setFilter,\r\n//   dailyTargets = {},\r\n// }) => {\r\n//   // Existing chart data logic\r\n//   const chartData = React.useMemo(() => {\r\n//     const dataByTask = sessions.reduce((acc, session) => {\r\n//       const taskId = session.taskId;\r\n//       acc[taskId] = (acc[taskId] || 0) + session.duration;\r\n//       return acc;\r\n//     }, {});\r\n\r\n//     const taskMap = tasks.reduce((map, task) => {\r\n//       map[task.id] = task.name;\r\n//       return map;\r\n//     }, {});\r\n\r\n//     const labels = Object.keys(dataByTask).map(\r\n//       (taskId) => taskMap[taskId] || \"Task ƒë√£ x√≥a\"\r\n//     );\r\n//     const data = Object.values(dataByTask).map((totalSeconds) =>\r\n//       Math.round(totalSeconds / 60)\r\n//     );\r\n\r\n//     return {\r\n//       labels,\r\n//       datasets: [\r\n//         {\r\n//           label: \"Th·ªùi gian t·∫≠p trung (ph√∫t)\",\r\n//           data,\r\n//           backgroundColor: \"rgba(59, 130, 246, 0.8)\",\r\n//           borderColor: \"rgba(59, 130, 246, 1)\",\r\n//           borderWidth: 1,\r\n//           borderRadius: 4,\r\n//           borderSkipped: false,\r\n//         },\r\n//       ],\r\n//     };\r\n//   }, [sessions, tasks]);\r\n\r\n//   const chartOptions = {\r\n//     responsive: true,\r\n//     maintainAspectRatio: false,\r\n//     indexAxis: \"y\",\r\n//     plugins: {\r\n//       legend: {\r\n//         display: false,\r\n//       },\r\n//       title: {\r\n//         display: false,\r\n//       },\r\n//       tooltip: {\r\n//         callbacks: {\r\n//           label: function (context) {\r\n//             return `${context.parsed.x} ph√∫t`;\r\n//           },\r\n//         },\r\n//       },\r\n//     },\r\n//     scales: {\r\n//       x: {\r\n//         beginAtZero: true,\r\n//         ticks: {\r\n//           callback: function (value) {\r\n//             return value + \"p\";\r\n//           },\r\n//         },\r\n//         grid: {\r\n//           color: \"rgba(0, 0, 0, 0.1)\",\r\n//         },\r\n//       },\r\n//       y: {\r\n//         ticks: {\r\n//           maxRotation: 0,\r\n//           minRotation: 0,\r\n//           font: {\r\n//             size: 12,\r\n//           },\r\n//         },\r\n//         grid: {\r\n//           display: false,\r\n//         },\r\n//       },\r\n//     },\r\n//     elements: {\r\n//       bar: {\r\n//         borderWidth: 1,\r\n//       },\r\n//     },\r\n//   };\r\n\r\n//   const getFilterText = (filter) => {\r\n//     if (filter === \"day\") return \"h√¥m nay\";\r\n//     if (filter === \"week\") return \"tu·∫ßn n√†y\";\r\n//     if (filter === \"month\") return \"th√°ng n√†y\";\r\n//     return \"\";\r\n//   };\r\n\r\n//   // Calculate total focus time for current filter\r\n//   const totalMinutes =\r\n//     sessions.reduce((acc, session) => acc + session.duration, 0) / 60;\r\n//   const totalHours = Math.floor(totalMinutes / 60);\r\n//   const remainingMinutes = Math.round(totalMinutes % 60);\r\n\r\n//   const formatTotalTime = () => {\r\n//     if (totalHours > 0) {\r\n//       return `${totalHours} gi·ªù ${remainingMinutes} ph√∫t`;\r\n//     }\r\n//     return `${Math.round(totalMinutes)} ph√∫t`;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-white rounded-lg p-4 mb-4 shadow-sm border border-gray-200\">\r\n//       {/* Header */}\r\n//       <div className=\"flex justify-between items-center mb-4\">\r\n//         <div>\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">\r\n//             üìä Th·ªëng k√™ {getFilterText(filter)}\r\n//           </h2>\r\n//           {sessions.length > 0 && (\r\n//             <p className=\"text-sm text-gray-600 mt-1\">\r\n//               T·ªïng c·ªông:{\" \"}\r\n//               <span className=\"font-semibold text-blue-600\">\r\n//                 {formatTotalTime()}\r\n//               </span>{\" \"}\r\n//               ({sessions.length} phi√™n)\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-1 bg-gray-100 rounded-lg p-1\">\r\n//           {[\"day\", \"week\", \"month\"].map((f) => (\r\n//             <button\r\n//               key={f}\r\n//               onClick={() => setFilter(f)}\r\n//               className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n//                 filter === f\r\n//                   ? \"bg-white text-blue-600 shadow-sm\"\r\n//                   : \"text-gray-600 hover:text-gray-900\"\r\n//               }`}\r\n//             >\r\n//               {f === \"day\" ? \"Ng√†y\" : f === \"week\" ? \"Tu·∫ßn\" : \"Th√°ng\"}\r\n//             </button>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Chart */}\r\n//       {sessions.length > 0 ? (\r\n//         <div style={{ height: \"250px\" }}>\r\n//           <Bar data={chartData} options={chartOptions} />\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"text-center py-12 text-gray-500\">\r\n//           <div className=\"text-5xl mb-3\">üìà</div>\r\n//           <h3 className=\"text-lg font-medium text-gray-700 mb-2\">\r\n//             Ch∆∞a c√≥ d·ªØ li·ªáu {getFilterText(filter)}\r\n//           </h3>\r\n//           <p className=\"text-sm\">\r\n//             B·∫Øt ƒë·∫ßu m·ªôt phi√™n l√†m vi·ªác ƒë·ªÉ xem th·ªëng k√™ t·∫°i ƒë√¢y\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Quick Stats */}\r\n//       {sessions.length > 0 && (\r\n//         <div className=\"mt-4 grid grid-cols-3 gap-4 pt-4 border-t border-gray-100\">\r\n//           <div className=\"text-center\">\r\n//             <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\r\n//               Phi√™n\r\n//             </p>\r\n//             <p className=\"text-lg font-bold text-gray-900\">{sessions.length}</p>\r\n//           </div>\r\n//           <div className=\"text-center\">\r\n//             <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\r\n//               Trung b√¨nh\r\n//             </p>\r\n//             <p className=\"text-lg font-bold text-gray-900\">\r\n//               {Math.round(totalMinutes / sessions.length)}p\r\n//             </p>\r\n//           </div>\r\n//           <div className=\"text-center\">\r\n//             <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\r\n//               Tasks\r\n//             </p>\r\n//             <p className=\"text-lg font-bold text-gray-900\">\r\n//               {new Set(sessions.map((s) => s.taskId)).size}\r\n//             </p>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Focus Heatmap - only show for week and month filters */}\r\n//       <FocusHeatmap\r\n//         sessions={sessions}\r\n//         tasks={tasks}\r\n//         filter={filter}\r\n//         dailyTargets={dailyTargets}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HistoryView;\r\nimport React, { useState, useMemo } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// Heatmap Component\r\nconst FocusHeatmap = ({ sessions, tasks, filter, dailyTargets = {} }) => {\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n\r\n  // Calculate data for heatmap\r\n  const heatmapData = useMemo(() => {\r\n    const now = new Date();\r\n    const dates = [];\r\n\r\n    // Generate date range based on filter\r\n    if (filter === \"week\") {\r\n      // FIX: Start week from Monday instead of Sunday\r\n      const today = new Date(now);\r\n      const currentDay = today.getDay(); // 0 = Sunday, 1 = Monday, etc.\r\n      \r\n      // Calculate the start of the week (Monday)\r\n      const startOfWeek = new Date(today);\r\n      // If today is Sunday (0), go back 6 days. Otherwise, go back (currentDay - 1) days.\r\n      const daysToSubtract = currentDay === 0 ? 6 : currentDay - 1;\r\n      startOfWeek.setDate(today.getDate() - daysToSubtract);\r\n      startOfWeek.setHours(0, 0, 0, 0);\r\n      \r\n      // Generate 7 days from Monday\r\n      for (let i = 0; i < 7; i++) {\r\n        const date = new Date(startOfWeek);\r\n        date.setDate(startOfWeek.getDate() + i);\r\n        dates.push(date);\r\n      }\r\n    } else if (filter === \"month\") {\r\n      // Get all days in current month\r\n      const year = now.getFullYear();\r\n      const month = now.getMonth();\r\n      const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n      for (let day = 1; day <= daysInMonth; day++) {\r\n        dates.push(new Date(year, month, day));\r\n      }\r\n    }\r\n\r\n    // Calculate focus time for each date\r\n    return dates.map((date) => {\r\n      const dateKey = date.toISOString().split(\"T\")[0];\r\n      const dayStart = new Date(date);\r\n      dayStart.setHours(0, 0, 0, 0);\r\n      const dayEnd = new Date(date);\r\n      dayEnd.setHours(23, 59, 59, 999);\r\n\r\n      // Get sessions for this date\r\n      const daySessions = sessions.filter((session) => {\r\n        const sessionDate = new Date(session.completedAt);\r\n        return sessionDate >= dayStart && sessionDate <= dayEnd;\r\n      });\r\n\r\n      const totalMinutes =\r\n        daySessions.reduce((acc, session) => acc + session.duration, 0) / 60;\r\n      const totalHours = totalMinutes / 60;\r\n      const target = dailyTargets[dateKey];\r\n      const targetMinutes = target?.targetMinutes || 0;\r\n      const targetHours = targetMinutes / 60;\r\n\r\n      // Determine color based on conditions\r\n      let color = \"bg-gray-100\"; // Default: no activity\r\n      let intensity = 0;\r\n\r\n      if (target && targetMinutes > 0) {\r\n        // Has target set\r\n        if (totalMinutes >= targetMinutes) {\r\n          // Target completed - green\r\n          color = \"bg-green-500\";\r\n          intensity = Math.min(totalHours / targetHours, 2); // Max intensity at 2x target\r\n        } else {\r\n          // Target not completed - red\r\n          color = \"bg-red-500\";\r\n          intensity = Math.max(0.3, totalMinutes / targetMinutes); // Min 30% intensity\r\n        }\r\n      } else {\r\n        // No target set\r\n        if (totalHours >= 1) {\r\n          // >= 1h without target - blue\r\n          color = \"bg-blue-500\";\r\n          intensity = Math.min(totalHours / 3, 1); // Max intensity at 3h\r\n        } else if (totalMinutes > 0) {\r\n          // < 1h without target - orange-red\r\n          color = \"bg-orange-600\";\r\n          intensity = Math.max(0.2, totalMinutes / 60); // Min 20% intensity\r\n        }\r\n      }\r\n\r\n      return {\r\n        date,\r\n        dateKey,\r\n        totalMinutes: Math.round(totalMinutes),\r\n        totalHours: Math.round(totalHours * 10) / 10,\r\n        sessionCount: daySessions.length,\r\n        target: targetMinutes,\r\n        targetAchieved: targetMinutes > 0 && totalMinutes >= targetMinutes,\r\n        color,\r\n        intensity: Math.max(0.2, Math.min(intensity, 1)),\r\n        tasks: [...new Set(daySessions.map((s) => s.taskId))].map(\r\n          (taskId) => tasks.find((t) => t.id === taskId)?.name || \"Task ƒë√£ x√≥a\"\r\n        ),\r\n      };\r\n    });\r\n  }, [sessions, tasks, filter, dailyTargets]);\r\n\r\n  const handleMouseEnter = (dayData, event) => {\r\n    setHoveredDate(dayData);\r\n    setTooltipPosition({ x: event.clientX, y: event.clientY });\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    if (hoveredDate) {\r\n      setTooltipPosition({ x: event.clientX, y: event.clientY });\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    return date.toLocaleDateString(\"vi-VN\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  const formatTime = (minutes) => {\r\n    if (minutes >= 60) {\r\n      const hours = Math.floor(minutes / 60);\r\n      const mins = minutes % 60;\r\n      return mins > 0 ? `${hours}h ${mins}p` : `${hours}h`;\r\n    }\r\n    return `${minutes}p`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Legend */}\r\n      <div className=\"flex items-center space-x-4 mb-6 text-xs\">\r\n        <span className=\"text-gray-600\">√çt</span>\r\n        <div className=\"flex space-x-1\">\r\n          <div className=\"w-3 h-3 bg-gray-100 rounded border\"></div>\r\n          <div className=\"w-3 h-3 bg-orange-600 opacity-30 rounded\"></div>\r\n          <div className=\"w-3 h-3 bg-blue-500 opacity-50 rounded\"></div>\r\n          <div className=\"w-3 h-3 bg-green-500 opacity-70 rounded\"></div>\r\n          <div className=\"w-3 h-3 bg-green-500 rounded\"></div>\r\n          <div className=\"w-3 h-3 bg-red-500 rounded\"></div>\r\n        </div>\r\n        <span className=\"text-gray-600\">Nhi·ªÅu</span>\r\n        <div className=\"flex items-center space-x-2 ml-4 text-xs\">\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-2 h-2 bg-green-500 rounded\"></div>\r\n            <span>ƒê·∫°t m·ª•c ti√™u</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-2 h-2 bg-red-500 rounded\"></div>\r\n            <span>Ch∆∞a ƒë·∫°t m·ª•c ti√™u</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-2 h-2 bg-blue-500 rounded\"></div>\r\n            <span>Kh√¥ng m·ª•c ti√™u ‚â•1h</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-2 h-2 bg-orange-600 rounded\"></div>\r\n            <span>Kh√¥ng m·ª•c ti√™u {\"<\"}1h</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Heatmap Grid */}\r\n      {filter === \"week\" ? (\r\n        // Week layout - vertical structure\r\n        <div className=\"space-y-2\">\r\n          {/* Day headers */}\r\n          <div className=\"grid grid-cols-7 gap-1\">\r\n            {/* FIX: Change order to Monday -> Sunday */}\r\n            {[\"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\", \"CN\"].map((day) => (\r\n              <div\r\n                key={day}\r\n                className=\"text-xs font-medium text-gray-500 text-center h-6 flex items-center justify-center\"\r\n              >\r\n                {day}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Date cells */}\r\n          <div className=\"grid grid-cols-7 gap-1\">\r\n            {heatmapData.map((dayData) => (\r\n              <div\r\n                key={dayData.dateKey}\r\n                className={`\r\n                  w-8 h-8 rounded cursor-pointer border border-gray-200\r\n                  ${dayData.color} hover:ring-2 hover:ring-gray-400 transition-all\r\n                  flex items-center justify-center text-xs font-medium\r\n                `}\r\n                style={{\r\n                  opacity: dayData.totalMinutes > 0 ? dayData.intensity : 0.1,\r\n                  color: dayData.totalMinutes > 0 ? \"white\" : \"#6b7280\",\r\n                }}\r\n                onMouseEnter={(e) => handleMouseEnter(dayData, e)}\r\n                onMouseMove={handleMouseMove}\r\n                onMouseLeave={handleMouseLeave}\r\n                title={`${formatDate(dayData.date)}: ${formatTime(\r\n                  dayData.totalMinutes\r\n                )}`}\r\n              >\r\n                {dayData.date.getDate()}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        // Month layout - flexible grid\r\n        <div className=\"grid grid-cols-7 sm:grid-cols-10 lg:grid-cols-12 xl:grid-cols-15 gap-1\">\r\n          {heatmapData.map((dayData) => (\r\n            <div\r\n              key={dayData.dateKey}\r\n              className={`\r\n                w-6 h-6 rounded cursor-pointer border border-gray-200\r\n                ${dayData.color} hover:ring-2 hover:ring-gray-400 transition-all\r\n                flex items-center justify-center text-xs font-medium\r\n              `}\r\n              style={{\r\n                opacity: dayData.totalMinutes > 0 ? dayData.intensity : 0.1,\r\n                color: dayData.totalMinutes > 0 ? \"white\" : \"#6b7280\",\r\n              }}\r\n              onMouseEnter={(e) => handleMouseEnter(dayData, e)}\r\n              onMouseMove={handleMouseMove}\r\n              onMouseLeave={handleMouseLeave}\r\n              title={`${formatDate(dayData.date)}: ${formatTime(\r\n                dayData.totalMinutes\r\n              )}`}\r\n            >\r\n              {dayData.date.getDate()}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Tooltip */}\r\n      {hoveredDate && (\r\n        <div\r\n          className=\"fixed z-50 bg-gray-900 text-white text-xs rounded-lg p-3 shadow-lg pointer-events-none max-w-xs\"\r\n          style={{\r\n            left: tooltipPosition.x + 10,\r\n            top: tooltipPosition.y - 10,\r\n            transform: \"translateY(-100%)\",\r\n          }}\r\n        >\r\n          <div className=\"font-semibold mb-1\">\r\n            {hoveredDate.date.toLocaleDateString(\"vi-VN\", {\r\n              weekday: \"long\",\r\n              day: \"numeric\",\r\n              month: \"long\",\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"space-y-1\">\r\n            <div>\r\n              ‚è±Ô∏è Th·ªùi gian t·∫≠p trung:{\" \"}\r\n              <span className=\"font-semibold text-blue-300\">\r\n                {formatTime(hoveredDate.totalMinutes)}\r\n              </span>\r\n            </div>\r\n\r\n            <div>\r\n              üìä S·ªë phi√™n:{\" \"}\r\n              <span className=\"font-semibold\">{hoveredDate.sessionCount}</span>\r\n            </div>\r\n\r\n            {hoveredDate.target > 0 ? (\r\n              <div>\r\n                üéØ M·ª•c ti√™u:{\" \"}\r\n                <span className=\"font-semibold\">\r\n                  {formatTime(hoveredDate.target)}\r\n                </span>\r\n                <span\r\n                  className={`ml-1 ${\r\n                    hoveredDate.targetAchieved\r\n                      ? \"text-green-400\"\r\n                      : \"text-red-400\"\r\n                  }`}\r\n                >\r\n                  {hoveredDate.targetAchieved ? \"‚úÖ ƒê·∫°t\" : \"‚ùå Ch∆∞a ƒë·∫°t\"}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-gray-400\">üéØ Kh√¥ng ƒë·∫∑t m·ª•c ti√™u</div>\r\n            )}\r\n\r\n            {hoveredDate.tasks.length > 0 && (\r\n              <div>\r\n                üìù Tasks:{\" \"}\r\n                <span className=\"text-green-300\">\r\n                  {hoveredDate.tasks.slice(0, 2).join(\", \")}\r\n                  {hoveredDate.tasks.length > 2 &&\r\n                    ` +${hoveredDate.tasks.length - 2} kh√°c`}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst HistoryView = ({\r\n  sessions,\r\n  tasks,\r\n  filter,\r\n  setFilter,\r\n  dailyTargets = {},\r\n}) => {\r\n  // State for view mode toggle\r\n  const [viewMode, setViewMode] = useState(\"chart\"); // \"chart\" or \"heatmap\"\r\n\r\n  // Auto-reset to chart mode when switching to day filter (heatmap not available for day)\r\n  React.useEffect(() => {\r\n    if (filter === \"day\" && viewMode === \"heatmap\") {\r\n      setViewMode(\"chart\");\r\n    }\r\n  }, [filter, viewMode]);\r\n\r\n  // Chart data logic\r\n  const chartData = React.useMemo(() => {\r\n    const dataByTask = sessions.reduce((acc, session) => {\r\n      const taskId = session.taskId;\r\n      acc[taskId] = (acc[taskId] || 0) + session.duration;\r\n      return acc;\r\n    }, {});\r\n\r\n    const taskMap = tasks.reduce((map, task) => {\r\n      map[task.id] = task.name;\r\n      return map;\r\n    }, {});\r\n\r\n    const labels = Object.keys(dataByTask).map(\r\n      (taskId) => taskMap[taskId] || \"Task ƒë√£ x√≥a\"\r\n    );\r\n    const data = Object.values(dataByTask).map((totalSeconds) =>\r\n      Math.round(totalSeconds / 60)\r\n    );\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Th·ªùi gian t·∫≠p trung (ph√∫t)\",\r\n          data,\r\n          backgroundColor: \"rgba(59, 130, 246, 0.8)\",\r\n          borderColor: \"rgba(59, 130, 246, 1)\",\r\n          borderWidth: 1,\r\n          borderRadius: 4,\r\n          borderSkipped: false,\r\n        },\r\n      ],\r\n    };\r\n  }, [sessions, tasks]);\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            return `${context.parsed.x} ph√∫t`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          callback: function (value) {\r\n            return value + \"p\";\r\n          },\r\n        },\r\n        grid: {\r\n          color: \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          maxRotation: 0,\r\n          minRotation: 0,\r\n          font: {\r\n            size: 12,\r\n          },\r\n        },\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n    elements: {\r\n      bar: {\r\n        borderWidth: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const getFilterText = (filter) => {\r\n    if (filter === \"day\") return \"h√¥m nay\";\r\n    if (filter === \"week\") return \"tu·∫ßn n√†y\";\r\n    if (filter === \"month\") return \"th√°ng n√†y\";\r\n    return \"\";\r\n  };\r\n\r\n  // Calculate total focus time for current filter\r\n  const totalMinutes =\r\n    sessions.reduce((acc, session) => acc + session.duration, 0) / 60;\r\n  const totalHours = Math.floor(totalMinutes / 60);\r\n  const remainingMinutes = Math.round(totalMinutes % 60);\r\n\r\n  const formatTotalTime = () => {\r\n    if (totalHours > 0) {\r\n      return `${totalHours} gi·ªù ${remainingMinutes} ph√∫t`;\r\n    }\r\n    return `${Math.round(totalMinutes)} ph√∫t`;\r\n  };\r\n\r\n  const canShowHeatmap = filter !== \"day\";\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg p-4 mb-4 shadow-sm border border-gray-200\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-start mb-4\">\r\n        <div className=\"flex-1\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">\r\n              üìä Th·ªëng k√™ {getFilterText(filter)}\r\n            </h2>\r\n            \r\n            {/* View Mode Toggle - Only show for week/month filters */}\r\n            {canShowHeatmap && (\r\n              <div className=\"flex space-x-1 bg-gray-100 rounded-lg p-1\">\r\n                <button\r\n                  onClick={() => setViewMode(\"chart\")}\r\n                  className={`px-2 py-1 text-sm font-medium rounded-md transition-colors flex items-center space-x-1 ${\r\n                    viewMode === \"chart\"\r\n                      ? \"bg-white text-blue-600 shadow-sm\"\r\n                      : \"text-gray-600 hover:text-gray-900\"\r\n                  }`}\r\n                  title=\"Bi·ªÉu ƒë·ªì c·ªôt\"\r\n                >\r\n                  <span>üìä</span>\r\n                </button>\r\n                <button\r\n                  onClick={() => setViewMode(\"heatmap\")}\r\n                  className={`px-2 py-1 text-sm font-medium rounded-md transition-colors flex items-center space-x-1 ${\r\n                    viewMode === \"heatmap\"\r\n                      ? \"bg-white text-blue-600 shadow-sm\"\r\n                      : \"text-gray-600 hover:text-gray-900\"\r\n                  }`}\r\n                  title=\"Heatmap\"\r\n                >\r\n                  <span>üî•</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {sessions.length > 0 && (\r\n            <p className=\"text-sm text-gray-600\">\r\n              T·ªïng c·ªông:{\" \"}\r\n              <span className=\"font-semibold text-blue-600\">\r\n                {formatTotalTime()}\r\n              </span>{\" \"}\r\n              ({sessions.length} phi√™n)\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Filter Toggle */}\r\n        <div className=\"flex space-x-1 bg-gray-100 rounded-lg p-1\">\r\n          {[\"day\", \"week\", \"month\"].map((f) => (\r\n            <button\r\n              key={f}\r\n              onClick={() => setFilter(f)}\r\n              className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                filter === f\r\n                  ? \"bg-white text-blue-600 shadow-sm\"\r\n                  : \"text-gray-600 hover:text-gray-900\"\r\n              }`}\r\n            >\r\n              {f === \"day\" ? \"Ng√†y\" : f === \"week\" ? \"Tu·∫ßn\" : \"Th√°ng\"}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content Area */}\r\n      {sessions.length > 0 ? (\r\n        <>\r\n          {viewMode === \"chart\" ? (\r\n            <>\r\n              {/* Bar Chart */}\r\n              <div style={{ height: \"250px\" }} className=\"mb-4\">\r\n                <Bar \r\n                  data={chartData} \r\n                  options={chartOptions} \r\n                  key={`chart-${sessions.length}-${JSON.stringify(sessions.map(s => s.id))}`} \r\n                />\r\n              </div>\r\n              \r\n              {/* Quick Stats - Only show in chart mode */}\r\n              <div className=\"grid grid-cols-3 gap-4 pt-4 border-t border-gray-100\">\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\r\n                    Phi√™n\r\n                  </p>\r\n                  <p className=\"text-lg font-bold text-gray-900\">\r\n                    {sessions.length}\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\r\n                    Trung b√¨nh\r\n                  </p>\r\n                  <p className=\"text-lg font-bold text-gray-900\">\r\n                    {Math.round(totalMinutes / sessions.length)}p\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-xs text-gray-500 uppercase tracking-wide\">\r\n                    Tasks\r\n                  </p>\r\n                  <p className=\"text-lg font-bold text-gray-900\">\r\n                    {new Set(sessions.map((s) => s.taskId)).size}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            /* Focus Heatmap */\r\n            <div className=\"py-2\">\r\n              <FocusHeatmap\r\n                sessions={sessions}\r\n                tasks={tasks}\r\n                filter={filter}\r\n                dailyTargets={dailyTargets}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        /* Empty State */\r\n        <div className=\"text-center py-12 text-gray-500\">\r\n          <div className=\"text-5xl mb-3\">\r\n            {viewMode === \"heatmap\" ? \"üî•\" : \"üìà\"}\r\n          </div>\r\n          <h3 className=\"text-lg font-medium text-gray-700 mb-2\">\r\n            Ch∆∞a c√≥ d·ªØ li·ªáu {getFilterText(filter)}\r\n          </h3>\r\n          <p className=\"text-sm\">\r\n            B·∫Øt ƒë·∫ßu m·ªôt phi√™n l√†m vi·ªác ƒë·ªÉ xem{\" \"}\r\n            {viewMode === \"heatmap\" ? \"heatmap\" : \"th·ªëng k√™\"} t·∫°i ƒë√¢y\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryView;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}