{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vu\\\\Documents\\\\vscode\\\\deepwork\\\\deepwork\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport { TaskModal, SessionEndModal, ConfirmStopModal, ConfirmDeleteModal, DailyTargetModal, LoadingModal, ErrorModal } from \"./components/Modals\";\nimport { FileManagerModal } from \"./components/FileManagerModal\";\nimport fileStorageService from \"./services/fileStorageService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n  const [refreshTrigger, setRefreshTrigger] = useState(0); // Force refresh trigger\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions(), fileStorageService.getDailyTarget()]);\n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.targetMinutes * 60); // Convert to seconds\n\n        console.log('Data loaded successfully:', {\n          tasks: tasksData.length,\n          sessions: sessionsData.length,\n          target: targetData.targetMinutes\n        });\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setError('Không thể tải dữ liệu: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Cleanup on unmount\n    return () => {\n      fileStorageService.cleanup();\n    };\n  }, []);\n\n  // Force refresh data when refreshTrigger changes\n  useEffect(() => {\n    if (refreshTrigger === 0) return; // Skip initial load\n\n    const refreshData = async () => {\n      try {\n        console.log('Force refreshing data after session end...');\n        const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n        setTasks(tasksData);\n        setSessions(sessionsData);\n        console.log('Data refreshed successfully:', {\n          tasks: tasksData.length,\n          sessions: sessionsData.length\n        });\n      } catch (error) {\n        console.error('Error refreshing data:', error);\n      }\n    };\n    refreshData();\n  }, [refreshTrigger]);\n\n  // Auto-refresh data when file changes (for manual sync)\n  useEffect(() => {\n    const refreshInterval = setInterval(async () => {\n      try {\n        const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n\n        // Only update if data actually changed to prevent unnecessary re-renders\n        const tasksChanged = JSON.stringify(tasksData) !== JSON.stringify(tasks);\n        const sessionsChanged = JSON.stringify(sessionsData) !== JSON.stringify(sessions);\n        if (tasksChanged || sessionsChanged) {\n          console.log('Auto-refresh: Data changed, updating state');\n          if (tasksChanged) setTasks(tasksData);\n          if (sessionsChanged) setSessions(sessionsData);\n        }\n      } catch (error) {\n        console.warn('Error auto-refreshing data:', error);\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(refreshInterval);\n  }, [tasks, sessions]);\n\n  // Memoized filtered sessions with dependency on sessions\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const filtered = sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return sessionDate.getMonth() === now.getMonth() && sessionDate.getFullYear() === now.getFullYear();\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n    console.log('Filtered sessions updated:', {\n      filter,\n      totalSessions: sessions.length,\n      filteredCount: filtered.length\n    });\n    return filtered;\n  }, [sessions, filter]); // Explicit dependency on sessions\n\n  // Memoized today focus time with dependency on sessions\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const todaySessions = sessions.filter(session => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n    const totalTime = todaySessions.reduce((acc, session) => acc + session.duration, 0);\n    console.log('Today focus time updated:', {\n      todaySessionsCount: todaySessions.length,\n      totalTime: totalTime\n    });\n    return totalTime;\n  }, [sessions]); // Explicit dependency on sessions\n\n  // Task management functions with proper error handling\n  const addTask = useCallback(async taskName => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newTask = await fileStorageService.addTask(taskName);\n\n      // Update state with new task\n      setTasks(prev => [...prev, newTask]);\n      console.log('Task added successfully:', newTask);\n      return newTask;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setError('Không thể thêm task mới: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const deleteTask = useCallback(async taskId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await fileStorageService.deleteTask(taskId);\n\n      // Update state - remove task and related sessions\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.taskId !== taskId));\n      console.log('Task deleted successfully:', taskId);\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Không thể xóa task: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ENHANCED: Session handling with immediate refresh\n  const addSession = useCallback(async (taskId, duration) => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Adding session:', {\n        taskId,\n        duration\n      });\n\n      // Add session to storage\n      const newSession = await fileStorageService.addSession(taskId, duration);\n\n      // Immediately reload all sessions from storage to ensure consistency\n      const allSessions = await fileStorageService.getSessions();\n      setSessions(allSessions);\n\n      // Force trigger refresh for dependent components\n      setRefreshTrigger(prev => prev + 1);\n      console.log('Session added and data refreshed:', {\n        newSessionId: newSession.id,\n        totalSessions: allSessions.length,\n        refreshTrigger: refreshTrigger + 1\n      });\n      return newSession;\n    } catch (error) {\n      console.error('Error adding session:', error);\n      setError('Không thể lưu phiên làm việc: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [refreshTrigger]);\n\n  // Event handlers with improved error handling\n  const handleAddTask = useCallback(async taskName => {\n    try {\n      await addTask(taskName);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [addTask]);\n  const handleStartSession = useCallback((task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60 // Convert minutes to seconds\n    };\n    setActiveSession(session);\n    setModal(null);\n    console.log('Starting session:', session);\n  }, []);\n\n  // ENHANCED: Session end handling with immediate UI update\n  const handleAddSession = useCallback(async timeWorked => {\n    if (!activeSession) {\n      console.warn('No active session when trying to add session');\n      return;\n    }\n    try {\n      console.log('Ending session:', {\n        taskId: activeSession.task.id,\n        timeWorked: timeWorked,\n        taskName: activeSession.task.name\n      });\n\n      // Add session and refresh data\n      await addSession(activeSession.task.id, timeWorked);\n\n      // Clear active session and close modals\n      setActiveSession(null);\n      setModal(null);\n      console.log('Session ended successfully, UI should refresh now');\n\n      // Additional force refresh after a small delay to ensure storage is updated\n      setTimeout(() => {\n        setRefreshTrigger(prev => prev + 1);\n      }, 100);\n    } catch (error) {\n      console.error('Error ending session:', error);\n      setModal(\"error\");\n    }\n  }, [activeSession, addSession]);\n  const handleStopSession = useCallback(() => {\n    console.log('Stopping session without saving');\n    setActiveSession(null);\n    setModal(null);\n  }, []);\n  const handleDeleteTask = useCallback(task => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  }, []);\n  const handleConfirmDelete = useCallback(async () => {\n    if (!taskToDelete) return;\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [taskToDelete, deleteTask]);\n  const handleCancelDelete = useCallback(() => {\n    setModal(null);\n    setTaskToDelete(null);\n  }, []);\n  const handleSetDailyTarget = useCallback(async targetMinutes => {\n    setLoading(true);\n    try {\n      await fileStorageService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60); // Convert to seconds\n      setModal(null);\n      console.log('Daily target set:', targetMinutes);\n    } catch (error) {\n      console.error('Error setting daily target:', error);\n      setError('Không thể lưu mục tiêu hàng ngày: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleErrorClose = useCallback(() => {\n    setModal(null);\n    setError(null);\n  }, []);\n  const handleRetry = useCallback(async () => {\n    setError(null);\n    setModal(null);\n\n    // Try to reload data\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n      setRefreshTrigger(prev => prev + 1);\n      console.log('Data reloaded after retry');\n    } catch (error) {\n      console.error('Retry failed:', error);\n      setError('Vẫn không thể tải dữ liệu: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleFileManagerSuccess = useCallback(async () => {\n    // Reload data after file operations\n    try {\n      const [tasksData, sessionsData] = await Promise.all([fileStorageService.getTasks(), fileStorageService.getSessions()]);\n      setTasks(tasksData);\n      setSessions(sessionsData);\n      setRefreshTrigger(prev => prev + 1);\n      console.log('Data reloaded after file operation');\n    } catch (error) {\n      console.error('Error reloading after file operation:', error);\n    }\n  }, []);\n\n  // Debug logging for state changes\n  useEffect(() => {\n    console.log('State update - Sessions count:', sessions.length);\n    console.log('State update - Filtered sessions count:', filteredSessions.length);\n    console.log('State update - Today focus time:', todayFocusTime);\n  }, [sessions.length, filteredSessions.length, todayFocusTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\",\n    children: [!activeSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        sessions: filteredSessions,\n        filter: filter,\n        dailyTarget: dailyTarget,\n        todayFocusTime: todayFocusTime,\n        onSetTarget: () => setModal(\"dailyTarget\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto px-4 pb-24\",\n        children: [/*#__PURE__*/_jsxDEV(HistoryView, {\n          sessions: filteredSessions,\n          tasks: tasks,\n          filter: filter,\n          setFilter: setFilter,\n          dailyTargets: {} // Pass dailyTargets if available\n        }, `history-${refreshTrigger}-${sessions.length}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          onTaskClick: task => {\n            setTaskToStart(task);\n            setModal(\"startTask\");\n          },\n          onTaskDelete: handleDeleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed bottom-6 right-6 flex flex-col space-y-3 z-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(\"fileManager\"),\n          className: \"bg-green-600 text-white rounded-full w-12 h-12 flex items-center justify-center shadow-lg hover:bg-green-700 transition transform hover:scale-110\",\n          \"aria-label\": \"Qu\\u1EA3n l\\xFD file d\\u1EEF li\\u1EC7u\",\n          title: \"Qu\\u1EA3n l\\xFD file d\\u1EEF li\\u1EC7u\",\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(\"addTask\"),\n          className: \"bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110\",\n          \"aria-label\": \"Th\\xEAm task m\\u1EDBi\",\n          disabled: loading,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-7 h-7\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FocusView, {\n      session: activeSession,\n      onSessionEnd: handleAddSession,\n      onStop: () => setModal(\"confirmStop\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 19\n    }, this), modal === \"error\" && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClose: handleErrorClose,\n      onRetry: handleRetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }, this), modal === \"fileManager\" && /*#__PURE__*/_jsxDEV(FileManagerModal, {\n      onClose: () => setModal(null),\n      onSuccess: handleFileManagerSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }, this), (modal === \"addTask\" || modal === \"startTask\") && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: taskToStart,\n      onClose: () => {\n        setModal(null);\n        setTaskToStart(null);\n      },\n      onStartSession: handleStartSession,\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }, this), modal === \"dailyTarget\" && /*#__PURE__*/_jsxDEV(DailyTargetModal, {\n      currentTarget: Math.round(dailyTarget / 60),\n      onClose: () => setModal(null),\n      onSetTarget: handleSetDailyTarget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this), modal === \"sessionEnd\" && /*#__PURE__*/_jsxDEV(SessionEndModal, {\n      onComplete: () => handleAddSession(activeSession.duration),\n      onPause: handleStopSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this), modal === \"confirmStop\" && /*#__PURE__*/_jsxDEV(ConfirmStopModal, {\n      onConfirm: handleStopSession,\n      onCancel: () => setModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 9\n    }, this), modal === \"confirmDelete\" && /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n      task: taskToDelete,\n      onConfirm: handleConfirmDelete,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wTXuPg4gfmfd7mdnFcbj3yssWcY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","useCallback","Header","TaskList","FocusView","HistoryView","TaskModal","SessionEndModal","ConfirmStopModal","ConfirmDeleteModal","DailyTargetModal","LoadingModal","ErrorModal","FileManagerModal","fileStorageService","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","sessions","setSessions","loading","setLoading","error","setError","dailyTarget","setDailyTarget","activeSession","setActiveSession","modal","setModal","taskToStart","setTaskToStart","taskToDelete","setTaskToDelete","filter","setFilter","refreshTrigger","setRefreshTrigger","loadInitialData","tasksData","sessionsData","targetData","Promise","all","getTasks","getSessions","getDailyTarget","targetMinutes","console","log","length","target","message","cleanup","refreshData","refreshInterval","setInterval","tasksChanged","JSON","stringify","sessionsChanged","warn","clearInterval","filteredSessions","now","Date","today","getFullYear","getMonth","getDate","filtered","session","sessionDate","completedAt","oneWeekAgo","setDate","setHours","getTime","totalSessions","filteredCount","todayFocusTime","todaySessions","totalTime","reduce","acc","duration","todaySessionsCount","addTask","taskName","newTask","prev","deleteTask","taskId","task","id","addSession","newSession","allSessions","newSessionId","handleAddTask","handleStartSession","handleAddSession","timeWorked","name","setTimeout","handleStopSession","handleDeleteTask","handleConfirmDelete","handleCancelDelete","handleSetDailyTarget","handleErrorClose","handleRetry","handleFileManagerSuccess","className","children","onSetTarget","fileName","_jsxFileName","lineNumber","columnNumber","dailyTargets","onTaskClick","onTaskDelete","onClick","title","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onSessionEnd","onStop","onClose","onRetry","onSuccess","onStartSession","onAddTask","currentTarget","Math","round","onComplete","onPause","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/App.js"],"sourcesContent":["// src/App.jsx\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport FocusView from \"./components/FocusView\";\nimport HistoryView from \"./components/HistoryView\";\nimport {\n  TaskModal,\n  SessionEndModal,\n  ConfirmStopModal,\n  ConfirmDeleteModal,\n  DailyTargetModal,\n  LoadingModal,\n  ErrorModal,\n} from \"./components/Modals\";\nimport { FileManagerModal } from \"./components/FileManagerModal\";\nimport fileStorageService from \"./services/fileStorageService\";\n\nconst App = () => {\n  // State management\n  const [tasks, setTasks] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyTarget, setDailyTarget] = useState(0);\n  const [activeSession, setActiveSession] = useState(null);\n  const [modal, setModal] = useState(null);\n  const [taskToStart, setTaskToStart] = useState(null);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"day\");\n  const [refreshTrigger, setRefreshTrigger] = useState(0); // Force refresh trigger\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoading(true);\n      try {\n        const [tasksData, sessionsData, targetData] = await Promise.all([\n          fileStorageService.getTasks(),\n          fileStorageService.getSessions(),\n          fileStorageService.getDailyTarget(),\n        ]);\n        \n        setTasks(tasksData);\n        setSessions(sessionsData);\n        setDailyTarget(targetData.targetMinutes * 60); // Convert to seconds\n        \n        console.log('Data loaded successfully:', {\n          tasks: tasksData.length,\n          sessions: sessionsData.length,\n          target: targetData.targetMinutes\n        });\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setError('Không thể tải dữ liệu: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInitialData();\n\n    // Cleanup on unmount\n    return () => {\n      fileStorageService.cleanup();\n    };\n  }, []);\n\n  // Force refresh data when refreshTrigger changes\n  useEffect(() => {\n    if (refreshTrigger === 0) return; // Skip initial load\n    \n    const refreshData = async () => {\n      try {\n        console.log('Force refreshing data after session end...');\n        const [tasksData, sessionsData] = await Promise.all([\n          fileStorageService.getTasks(),\n          fileStorageService.getSessions(),\n        ]);\n        \n        setTasks(tasksData);\n        setSessions(sessionsData);\n        \n        console.log('Data refreshed successfully:', {\n          tasks: tasksData.length,\n          sessions: sessionsData.length\n        });\n      } catch (error) {\n        console.error('Error refreshing data:', error);\n      }\n    };\n\n    refreshData();\n  }, [refreshTrigger]);\n\n  // Auto-refresh data when file changes (for manual sync)\n  useEffect(() => {\n    const refreshInterval = setInterval(async () => {\n      try {\n        const [tasksData, sessionsData] = await Promise.all([\n          fileStorageService.getTasks(),\n          fileStorageService.getSessions(),\n        ]);\n        \n        // Only update if data actually changed to prevent unnecessary re-renders\n        const tasksChanged = JSON.stringify(tasksData) !== JSON.stringify(tasks);\n        const sessionsChanged = JSON.stringify(sessionsData) !== JSON.stringify(sessions);\n        \n        if (tasksChanged || sessionsChanged) {\n          console.log('Auto-refresh: Data changed, updating state');\n          if (tasksChanged) setTasks(tasksData);\n          if (sessionsChanged) setSessions(sessionsData);\n        }\n      } catch (error) {\n        console.warn('Error auto-refreshing data:', error);\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(refreshInterval);\n  }, [tasks, sessions]);\n\n  // Memoized filtered sessions with dependency on sessions\n  const filteredSessions = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const filtered = sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      switch (filter) {\n        case \"week\":\n          const oneWeekAgo = new Date(today).setDate(today.getDate() - 7);\n          return sessionDate >= oneWeekAgo;\n        case \"month\":\n          return (\n            sessionDate.getMonth() === now.getMonth() &&\n            sessionDate.getFullYear() === now.getFullYear()\n          );\n        case \"day\":\n        default:\n          return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n      }\n    });\n\n    console.log('Filtered sessions updated:', {\n      filter,\n      totalSessions: sessions.length,\n      filteredCount: filtered.length\n    });\n\n    return filtered;\n  }, [sessions, filter]); // Explicit dependency on sessions\n\n  // Memoized today focus time with dependency on sessions\n  const todayFocusTime = useMemo(() => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const todaySessions = sessions.filter((session) => {\n      const sessionDate = new Date(session.completedAt);\n      return sessionDate.setHours(0, 0, 0, 0) === today.getTime();\n    });\n\n    const totalTime = todaySessions.reduce((acc, session) => acc + session.duration, 0);\n    \n    console.log('Today focus time updated:', {\n      todaySessionsCount: todaySessions.length,\n      totalTime: totalTime\n    });\n\n    return totalTime;\n  }, [sessions]); // Explicit dependency on sessions\n\n  // Task management functions with proper error handling\n  const addTask = useCallback(async (taskName) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const newTask = await fileStorageService.addTask(taskName);\n      \n      // Update state with new task\n      setTasks(prev => [...prev, newTask]);\n      \n      console.log('Task added successfully:', newTask);\n      return newTask;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setError('Không thể thêm task mới: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const deleteTask = useCallback(async (taskId) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      await fileStorageService.deleteTask(taskId);\n      \n      // Update state - remove task and related sessions\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      setSessions(prev => prev.filter(session => session.taskId !== taskId));\n      \n      console.log('Task deleted successfully:', taskId);\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Không thể xóa task: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ENHANCED: Session handling with immediate refresh\n  const addSession = useCallback(async (taskId, duration) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log('Adding session:', { taskId, duration });\n      \n      // Add session to storage\n      const newSession = await fileStorageService.addSession(taskId, duration);\n      \n      // Immediately reload all sessions from storage to ensure consistency\n      const allSessions = await fileStorageService.getSessions();\n      setSessions(allSessions);\n      \n      // Force trigger refresh for dependent components\n      setRefreshTrigger(prev => prev + 1);\n      \n      console.log('Session added and data refreshed:', {\n        newSessionId: newSession.id,\n        totalSessions: allSessions.length,\n        refreshTrigger: refreshTrigger + 1\n      });\n      \n      return newSession;\n    } catch (error) {\n      console.error('Error adding session:', error);\n      setError('Không thể lưu phiên làm việc: ' + error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [refreshTrigger]);\n\n  // Event handlers with improved error handling\n  const handleAddTask = useCallback(async (taskName) => {\n    try {\n      await addTask(taskName);\n      setModal(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [addTask]);\n\n  const handleStartSession = useCallback((task, duration) => {\n    const session = {\n      task: task,\n      duration: duration === 0 ? 0 : duration * 60, // Convert minutes to seconds\n    };\n    setActiveSession(session);\n    setModal(null);\n    \n    console.log('Starting session:', session);\n  }, []);\n\n  // ENHANCED: Session end handling with immediate UI update\n  const handleAddSession = useCallback(async (timeWorked) => {\n    if (!activeSession) {\n      console.warn('No active session when trying to add session');\n      return;\n    }\n\n    try {\n      console.log('Ending session:', {\n        taskId: activeSession.task.id,\n        timeWorked: timeWorked,\n        taskName: activeSession.task.name\n      });\n      \n      // Add session and refresh data\n      await addSession(activeSession.task.id, timeWorked);\n      \n      // Clear active session and close modals\n      setActiveSession(null);\n      setModal(null);\n      \n      console.log('Session ended successfully, UI should refresh now');\n      \n      // Additional force refresh after a small delay to ensure storage is updated\n      setTimeout(() => {\n        setRefreshTrigger(prev => prev + 1);\n      }, 100);\n      \n    } catch (error) {\n      console.error('Error ending session:', error);\n      setModal(\"error\");\n    }\n  }, [activeSession, addSession]);\n\n  const handleStopSession = useCallback(() => {\n    console.log('Stopping session without saving');\n    setActiveSession(null);\n    setModal(null);\n  }, []);\n\n  const handleDeleteTask = useCallback((task) => {\n    setTaskToDelete(task);\n    setModal(\"confirmDelete\");\n  }, []);\n\n  const handleConfirmDelete = useCallback(async () => {\n    if (!taskToDelete) return;\n\n    try {\n      await deleteTask(taskToDelete.id);\n      setModal(null);\n      setTaskToDelete(null);\n    } catch (error) {\n      setModal(\"error\");\n    }\n  }, [taskToDelete, deleteTask]);\n\n  const handleCancelDelete = useCallback(() => {\n    setModal(null);\n    setTaskToDelete(null);\n  }, []);\n\n  const handleSetDailyTarget = useCallback(async (targetMinutes) => {\n    setLoading(true);\n    try {\n      await fileStorageService.setDailyTarget(targetMinutes);\n      setDailyTarget(targetMinutes * 60); // Convert to seconds\n      setModal(null);\n      \n      console.log('Daily target set:', targetMinutes);\n    } catch (error) {\n      console.error('Error setting daily target:', error);\n      setError('Không thể lưu mục tiêu hàng ngày: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleErrorClose = useCallback(() => {\n    setModal(null);\n    setError(null);\n  }, []);\n\n  const handleRetry = useCallback(async () => {\n    setError(null);\n    setModal(null);\n    \n    // Try to reload data\n    try {\n      setLoading(true);\n      const [tasksData, sessionsData] = await Promise.all([\n        fileStorageService.getTasks(),\n        fileStorageService.getSessions(),\n      ]);\n      \n      setTasks(tasksData);\n      setSessions(sessionsData);\n      setRefreshTrigger(prev => prev + 1);\n      \n      console.log('Data reloaded after retry');\n    } catch (error) {\n      console.error('Retry failed:', error);\n      setError('Vẫn không thể tải dữ liệu: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleFileManagerSuccess = useCallback(async () => {\n    // Reload data after file operations\n    try {\n      const [tasksData, sessionsData] = await Promise.all([\n        fileStorageService.getTasks(),\n        fileStorageService.getSessions(),\n      ]);\n      \n      setTasks(tasksData);\n      setSessions(sessionsData);\n      setRefreshTrigger(prev => prev + 1);\n      \n      console.log('Data reloaded after file operation');\n    } catch (error) {\n      console.error('Error reloading after file operation:', error);\n    }\n  }, []);\n\n  // Debug logging for state changes\n  useEffect(() => {\n    console.log('State update - Sessions count:', sessions.length);\n    console.log('State update - Filtered sessions count:', filteredSessions.length);\n    console.log('State update - Today focus time:', todayFocusTime);\n  }, [sessions.length, filteredSessions.length, todayFocusTime]);\n\n  return (\n    <div className=\"h-screen w-screen bg-slate-100 text-slate-800 antialiased overflow-hidden flex flex-col\">\n      {!activeSession ? (\n        <>\n          <Header\n            sessions={filteredSessions}\n            filter={filter}\n            dailyTarget={dailyTarget}\n            todayFocusTime={todayFocusTime}\n            onSetTarget={() => setModal(\"dailyTarget\")}\n          />\n\n          <div className=\"flex-grow overflow-y-auto px-4 pb-24\">\n            <HistoryView\n              sessions={filteredSessions}\n              tasks={tasks}\n              filter={filter}\n              setFilter={setFilter}\n              dailyTargets={{}} // Pass dailyTargets if available\n              key={`history-${refreshTrigger}-${sessions.length}`} // Force re-render when data changes\n            />\n            <TaskList\n              tasks={tasks}\n              onTaskClick={(task) => {\n                setTaskToStart(task);\n                setModal(\"startTask\");\n              }}\n              onTaskDelete={handleDeleteTask}\n            />\n          </div>\n\n          {/* Floating Action Buttons */}\n          <div className=\"fixed bottom-6 right-6 flex flex-col space-y-3 z-20\">\n            {/* File Manager Button */}\n            <button\n              onClick={() => setModal(\"fileManager\")}\n              className=\"bg-green-600 text-white rounded-full w-12 h-12 flex items-center justify-center shadow-lg hover:bg-green-700 transition transform hover:scale-110\"\n              aria-label=\"Quản lý file dữ liệu\"\n              title=\"Quản lý file dữ liệu\"\n            >\n              📁\n            </button>\n            \n            {/* Add Task Button */}\n            <button\n              onClick={() => setModal(\"addTask\")}\n              className=\"bg-blue-600 text-white rounded-full w-14 h-14 flex items-center justify-center shadow-lg hover:bg-blue-700 transition transform hover:scale-110\"\n              aria-label=\"Thêm task mới\"\n              disabled={loading}\n            >\n              <svg\n                className=\"w-7 h-7\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </>\n      ) : (\n        <FocusView\n          session={activeSession}\n          onSessionEnd={handleAddSession}\n          onStop={() => setModal(\"confirmStop\")}\n        />\n      )}\n\n      {/* Loading Modal */}\n      {loading && <LoadingModal />}\n\n      {/* Error Modal */}\n      {modal === \"error\" && (\n        <ErrorModal\n          error={error}\n          onClose={handleErrorClose}\n          onRetry={handleRetry}\n        />\n      )}\n\n      {/* File Manager Modal */}\n      {modal === \"fileManager\" && (\n        <FileManagerModal\n          onClose={() => setModal(null)}\n          onSuccess={handleFileManagerSuccess}\n        />\n      )}\n\n      {(modal === \"addTask\" || modal === \"startTask\") && (\n        <TaskModal\n          task={taskToStart}\n          onClose={() => {\n            setModal(null);\n            setTaskToStart(null);\n          }}\n          onStartSession={handleStartSession}\n          onAddTask={handleAddTask}\n        />\n      )}\n\n      {modal === \"dailyTarget\" && (\n        <DailyTargetModal\n          currentTarget={Math.round(dailyTarget / 60)}\n          onClose={() => setModal(null)}\n          onSetTarget={handleSetDailyTarget}\n        />\n      )}\n\n      {modal === \"sessionEnd\" && (\n        <SessionEndModal\n          onComplete={() => handleAddSession(activeSession.duration)}\n          onPause={handleStopSession}\n        />\n      )}\n\n      {modal === \"confirmStop\" && (\n        <ConfirmStopModal\n          onConfirm={handleStopSession}\n          onCancel={() => setModal(null)}\n        />\n      )}\n\n      {modal === \"confirmDelete\" && (\n        <ConfirmDeleteModal\n          task={taskToDelete}\n          onConfirm={handleConfirmDelete}\n          onCancel={handleCancelDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}