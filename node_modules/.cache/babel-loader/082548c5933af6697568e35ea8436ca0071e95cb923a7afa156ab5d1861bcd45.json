{"ast":null,"code":"// // src/components/Header.jsx\n\n// import React, { useState, useEffect } from 'react';\n// import fileStorageService from '../services/fileStorageService';\n\n// // Hàm định dạng thời gian từ giây sang giờ, phút\n// const formatTime = (seconds) => {\n//   if (!seconds || seconds < 60) return `${seconds || 0} giây`;\n//   const h = Math.floor(seconds / 3600);\n//   const m = Math.floor((seconds % 3600) / 60);\n//   let str = '';\n//   if (h > 0) str += `${h} giờ `;\n//   if (m > 0) str += `${m} phút`;\n//   return str.trim();\n// };\n\n// // Hàm lấy văn bản tương ứng với bộ lọc\n// const getFilterText = (filter) => {\n//   if (filter === 'day') return 'hôm nay';\n//   if (filter === 'week') return 'tuần này';\n//   if (filter === 'month') return 'tháng này';\n//   return '';\n// };\n\n// const Header = ({ sessions, filter, dailyTarget, todayFocusTime, onSetTarget }) => {\n//   const [fileStatus, setFileStatus] = useState(null);\n\n//   useEffect(() => {\n//     // Get initial file status\n//     setFileStatus(fileStorageService.getFileStatus());\n\n//     // Update file status every minute\n//     const interval = setInterval(() => {\n//       setFileStatus(fileStorageService.getFileStatus());\n//     }, 60000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Tính toán tổng thời gian tập trung từ sessions được filter\n//   const totalFocusSeconds = sessions.reduce((acc, session) => acc + session.duration, 0);\n\n//   // Tính progress nếu có target (chỉ cho filter 'day')\n//   const progress = (filter === 'day' && dailyTarget > 0) \n//     ? Math.min((todayFocusTime / dailyTarget) * 100, 100) \n//     : 0;\n\n//   const isTargetCompleted = filter === 'day' && dailyTarget > 0 && todayFocusTime >= dailyTarget;\n\n//   return (\n//     <header className=\"bg-white shadow-sm border-b px-4 py-4\">\n//       <div className=\"max-w-4xl mx-auto\">\n//         {/* Header Title - Left aligned */}\n//         <div className=\"flex items-center justify-between mb-3\">\n//           <div className=\"flex items-center space-x-3\">\n//             <h1 className=\"text-2xl font-bold text-slate-800\">\n//               DeepWork\n//               {isTargetCompleted && filter === 'day' && (\n//                 <span className=\"ml-2 text-xl animate-bounce\">🎉</span>\n//               )}\n//             </h1>\n\n//             {/* File Status Indicator */}\n//             {fileStatus && (\n//               <span className={`text-xs px-2 py-1 rounded-full ${\n//                 fileStatus.hasFileHandle \n//                   ? 'bg-green-100 text-green-700' \n//                   : fileStatus.isFileAPISupported \n//                     ? 'bg-yellow-100 text-yellow-700' \n//                     : 'bg-blue-100 text-blue-700'\n//               }`}>\n//                 {fileStatus.hasFileHandle ? '📁' : \n//                  fileStatus.isFileAPISupported ? '📄' : \n//                  '💾'}\n//               </span>\n//             )}\n//           </div>\n\n//           <div className=\"text-right\">\n//             <p className=\"text-sm text-slate-500 font-medium\">\n//               {new Date().toLocaleDateString('vi-VN')}\n//             </p>\n//           </div>\n//         </div>\n\n//         {/* Stats and Target - Left aligned */}\n//         <div className=\"space-y-2\">\n//           <div className=\"flex items-center justify-between\">\n//             <p className=\"text-sm text-slate-600\">\n//               ⏱️ Đã tập trung được <span className=\"font-semibold text-slate-800\">{formatTime(totalFocusSeconds)}</span> {getFilterText(filter)}\n//             </p>\n//           </div>\n\n//           {/* Daily Target Section - Only show on 'day' filter */}\n//           {filter === 'day' && (\n//             <div className=\"space-y-2\">\n//               {dailyTarget > 0 ? (\n//                 <>\n//                   <div className=\"flex items-center justify-between\">\n//                     <span className=\"text-sm text-slate-600\">\n//                       🎯 Mục tiêu hôm nay: <span className=\"font-semibold\">{formatTime(dailyTarget)}</span>\n//                     </span>\n//                     <button \n//                       onClick={onSetTarget}\n//                       className=\"text-xs text-blue-600 hover:text-blue-700 font-medium px-2 py-1 rounded hover:bg-blue-50 transition-colors\"\n//                     >\n//                       Thay đổi\n//                     </button>\n//                   </div>\n\n//                   <div className=\"flex items-center space-x-3\">\n//                     <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n//                       <div \n//                         className={`h-2 rounded-full transition-all duration-500 ${\n//                           isTargetCompleted ? 'bg-green-500' : 'bg-blue-500'\n//                         }`}\n//                         style={{ width: `${Math.min(progress, 100)}%` }}\n//                       ></div>\n//                     </div>\n//                     <span className={`text-sm font-bold min-w-fit ${\n//                       isTargetCompleted ? 'text-green-600' : 'text-blue-600'\n//                     }`}>\n//                       {Math.round(progress)}%\n//                     </span>\n//                   </div>\n\n//                   <div className=\"flex items-center justify-between text-xs text-slate-500\">\n//                     <span>\n//                       {formatTime(todayFocusTime)} / {formatTime(dailyTarget)}\n//                     </span>\n//                     {isTargetCompleted && (\n//                       <span className=\"text-green-600 font-medium\">\n//                         ✅ Hoàn thành mục tiêu!\n//                       </span>\n//                     )}\n//                   </div>\n//                 </>\n//               ) : (\n//                 <button \n//                   onClick={onSetTarget}\n//                   className=\"text-sm text-blue-600 hover:text-blue-700 font-medium flex items-center space-x-1 px-2 py-1 rounded hover:bg-blue-50 transition-colors\"\n//                 >\n//                   <span>🎯</span>\n//                   <span>Đặt mục tiêu cho hôm nay</span>\n//                 </button>\n//               )}\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </header>\n//   );\n// };\n\n// export default Header;","map":{"version":3,"names":[],"sources":["C:/Users/Vu/Documents/vscode/deepwork/deepwork/src/components/Header.js"],"sourcesContent":["// // src/components/Header.jsx\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import fileStorageService from '../services/fileStorageService';\r\n\r\n// // Hàm định dạng thời gian từ giây sang giờ, phút\r\n// const formatTime = (seconds) => {\r\n//   if (!seconds || seconds < 60) return `${seconds || 0} giây`;\r\n//   const h = Math.floor(seconds / 3600);\r\n//   const m = Math.floor((seconds % 3600) / 60);\r\n//   let str = '';\r\n//   if (h > 0) str += `${h} giờ `;\r\n//   if (m > 0) str += `${m} phút`;\r\n//   return str.trim();\r\n// };\r\n\r\n// // Hàm lấy văn bản tương ứng với bộ lọc\r\n// const getFilterText = (filter) => {\r\n//   if (filter === 'day') return 'hôm nay';\r\n//   if (filter === 'week') return 'tuần này';\r\n//   if (filter === 'month') return 'tháng này';\r\n//   return '';\r\n// };\r\n\r\n// const Header = ({ sessions, filter, dailyTarget, todayFocusTime, onSetTarget }) => {\r\n//   const [fileStatus, setFileStatus] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Get initial file status\r\n//     setFileStatus(fileStorageService.getFileStatus());\r\n\r\n//     // Update file status every minute\r\n//     const interval = setInterval(() => {\r\n//       setFileStatus(fileStorageService.getFileStatus());\r\n//     }, 60000);\r\n\r\n//     return () => clearInterval(interval);\r\n//   }, []);\r\n\r\n//   // Tính toán tổng thời gian tập trung từ sessions được filter\r\n//   const totalFocusSeconds = sessions.reduce((acc, session) => acc + session.duration, 0);\r\n  \r\n//   // Tính progress nếu có target (chỉ cho filter 'day')\r\n//   const progress = (filter === 'day' && dailyTarget > 0) \r\n//     ? Math.min((todayFocusTime / dailyTarget) * 100, 100) \r\n//     : 0;\r\n  \r\n//   const isTargetCompleted = filter === 'day' && dailyTarget > 0 && todayFocusTime >= dailyTarget;\r\n\r\n//   return (\r\n//     <header className=\"bg-white shadow-sm border-b px-4 py-4\">\r\n//       <div className=\"max-w-4xl mx-auto\">\r\n//         {/* Header Title - Left aligned */}\r\n//         <div className=\"flex items-center justify-between mb-3\">\r\n//           <div className=\"flex items-center space-x-3\">\r\n//             <h1 className=\"text-2xl font-bold text-slate-800\">\r\n//               DeepWork\r\n//               {isTargetCompleted && filter === 'day' && (\r\n//                 <span className=\"ml-2 text-xl animate-bounce\">🎉</span>\r\n//               )}\r\n//             </h1>\r\n            \r\n//             {/* File Status Indicator */}\r\n//             {fileStatus && (\r\n//               <span className={`text-xs px-2 py-1 rounded-full ${\r\n//                 fileStatus.hasFileHandle \r\n//                   ? 'bg-green-100 text-green-700' \r\n//                   : fileStatus.isFileAPISupported \r\n//                     ? 'bg-yellow-100 text-yellow-700' \r\n//                     : 'bg-blue-100 text-blue-700'\r\n//               }`}>\r\n//                 {fileStatus.hasFileHandle ? '📁' : \r\n//                  fileStatus.isFileAPISupported ? '📄' : \r\n//                  '💾'}\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n          \r\n//           <div className=\"text-right\">\r\n//             <p className=\"text-sm text-slate-500 font-medium\">\r\n//               {new Date().toLocaleDateString('vi-VN')}\r\n//             </p>\r\n//           </div>\r\n//         </div>\r\n        \r\n//         {/* Stats and Target - Left aligned */}\r\n//         <div className=\"space-y-2\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <p className=\"text-sm text-slate-600\">\r\n//               ⏱️ Đã tập trung được <span className=\"font-semibold text-slate-800\">{formatTime(totalFocusSeconds)}</span> {getFilterText(filter)}\r\n//             </p>\r\n//           </div>\r\n          \r\n//           {/* Daily Target Section - Only show on 'day' filter */}\r\n//           {filter === 'day' && (\r\n//             <div className=\"space-y-2\">\r\n//               {dailyTarget > 0 ? (\r\n//                 <>\r\n//                   <div className=\"flex items-center justify-between\">\r\n//                     <span className=\"text-sm text-slate-600\">\r\n//                       🎯 Mục tiêu hôm nay: <span className=\"font-semibold\">{formatTime(dailyTarget)}</span>\r\n//                     </span>\r\n//                     <button \r\n//                       onClick={onSetTarget}\r\n//                       className=\"text-xs text-blue-600 hover:text-blue-700 font-medium px-2 py-1 rounded hover:bg-blue-50 transition-colors\"\r\n//                     >\r\n//                       Thay đổi\r\n//                     </button>\r\n//                   </div>\r\n                  \r\n//                   <div className=\"flex items-center space-x-3\">\r\n//                     <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\r\n//                       <div \r\n//                         className={`h-2 rounded-full transition-all duration-500 ${\r\n//                           isTargetCompleted ? 'bg-green-500' : 'bg-blue-500'\r\n//                         }`}\r\n//                         style={{ width: `${Math.min(progress, 100)}%` }}\r\n//                       ></div>\r\n//                     </div>\r\n//                     <span className={`text-sm font-bold min-w-fit ${\r\n//                       isTargetCompleted ? 'text-green-600' : 'text-blue-600'\r\n//                     }`}>\r\n//                       {Math.round(progress)}%\r\n//                     </span>\r\n//                   </div>\r\n                  \r\n//                   <div className=\"flex items-center justify-between text-xs text-slate-500\">\r\n//                     <span>\r\n//                       {formatTime(todayFocusTime)} / {formatTime(dailyTarget)}\r\n//                     </span>\r\n//                     {isTargetCompleted && (\r\n//                       <span className=\"text-green-600 font-medium\">\r\n//                         ✅ Hoàn thành mục tiêu!\r\n//                       </span>\r\n//                     )}\r\n//                   </div>\r\n//                 </>\r\n//               ) : (\r\n//                 <button \r\n//                   onClick={onSetTarget}\r\n//                   className=\"text-sm text-blue-600 hover:text-blue-700 font-medium flex items-center space-x-1 px-2 py-1 rounded hover:bg-blue-50 transition-colors\"\r\n//                 >\r\n//                   <span>🎯</span>\r\n//                   <span>Đặt mục tiêu cho hôm nay</span>\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// export default Header;"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}